/*
 * Edge Compute
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package edge_compute

import (
	"encoding/json"
)

// V1GetImagesForFamilyResponse A response from a request to retrieve images by a family
type V1GetImagesForFamilyResponse struct {
	PageInfo *PaginationPageInfo `json:"pageInfo,omitempty"`
	// The requested images
	Results *[]V1Image `json:"results,omitempty"`
}

// NewV1GetImagesForFamilyResponse instantiates a new V1GetImagesForFamilyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GetImagesForFamilyResponse() *V1GetImagesForFamilyResponse {
	this := V1GetImagesForFamilyResponse{}
	return &this
}

// NewV1GetImagesForFamilyResponseWithDefaults instantiates a new V1GetImagesForFamilyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GetImagesForFamilyResponseWithDefaults() *V1GetImagesForFamilyResponse {
	this := V1GetImagesForFamilyResponse{}
	return &this
}

// GetPageInfo returns the PageInfo field value if set, zero value otherwise.
func (o *V1GetImagesForFamilyResponse) GetPageInfo() PaginationPageInfo {
	if o == nil || o.PageInfo == nil {
		var ret PaginationPageInfo
		return ret
	}
	return *o.PageInfo
}

// GetPageInfoOk returns a tuple with the PageInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GetImagesForFamilyResponse) GetPageInfoOk() (*PaginationPageInfo, bool) {
	if o == nil || o.PageInfo == nil {
		return nil, false
	}
	return o.PageInfo, true
}

// HasPageInfo returns a boolean if a field has been set.
func (o *V1GetImagesForFamilyResponse) HasPageInfo() bool {
	if o != nil && o.PageInfo != nil {
		return true
	}

	return false
}

// SetPageInfo gets a reference to the given PaginationPageInfo and assigns it to the PageInfo field.
func (o *V1GetImagesForFamilyResponse) SetPageInfo(v PaginationPageInfo) {
	o.PageInfo = &v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *V1GetImagesForFamilyResponse) GetResults() []V1Image {
	if o == nil || o.Results == nil {
		var ret []V1Image
		return ret
	}
	return *o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GetImagesForFamilyResponse) GetResultsOk() (*[]V1Image, bool) {
	if o == nil || o.Results == nil {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *V1GetImagesForFamilyResponse) HasResults() bool {
	if o != nil && o.Results != nil {
		return true
	}

	return false
}

// SetResults gets a reference to the given []V1Image and assigns it to the Results field.
func (o *V1GetImagesForFamilyResponse) SetResults(v []V1Image) {
	o.Results = &v
}

func (o V1GetImagesForFamilyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PageInfo != nil {
		toSerialize["pageInfo"] = o.PageInfo
	}
	if o.Results != nil {
		toSerialize["results"] = o.Results
	}
	return json.Marshal(toSerialize)
}

type NullableV1GetImagesForFamilyResponse struct {
	value *V1GetImagesForFamilyResponse
	isSet bool
}

func (v NullableV1GetImagesForFamilyResponse) Get() *V1GetImagesForFamilyResponse {
	return v.value
}

func (v *NullableV1GetImagesForFamilyResponse) Set(val *V1GetImagesForFamilyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GetImagesForFamilyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GetImagesForFamilyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GetImagesForFamilyResponse(val *V1GetImagesForFamilyResponse) *NullableV1GetImagesForFamilyResponse {
	return &NullableV1GetImagesForFamilyResponse{value: val, isSet: true}
}

func (v NullableV1GetImagesForFamilyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GetImagesForFamilyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
