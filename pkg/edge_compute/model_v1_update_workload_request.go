/*
 * Edge Compute
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package edge_compute

import (
	"encoding/json"
)

// V1UpdateWorkloadRequest struct for V1UpdateWorkloadRequest
type V1UpdateWorkloadRequest struct {
	Workload *V1Workload `json:"workload,omitempty"`
}

// NewV1UpdateWorkloadRequest instantiates a new V1UpdateWorkloadRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1UpdateWorkloadRequest() *V1UpdateWorkloadRequest {
	this := V1UpdateWorkloadRequest{}
	return &this
}

// NewV1UpdateWorkloadRequestWithDefaults instantiates a new V1UpdateWorkloadRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1UpdateWorkloadRequestWithDefaults() *V1UpdateWorkloadRequest {
	this := V1UpdateWorkloadRequest{}
	return &this
}

// GetWorkload returns the Workload field value if set, zero value otherwise.
func (o *V1UpdateWorkloadRequest) GetWorkload() V1Workload {
	if o == nil || o.Workload == nil {
		var ret V1Workload
		return ret
	}
	return *o.Workload
}

// GetWorkloadOk returns a tuple with the Workload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1UpdateWorkloadRequest) GetWorkloadOk() (*V1Workload, bool) {
	if o == nil || o.Workload == nil {
		return nil, false
	}
	return o.Workload, true
}

// HasWorkload returns a boolean if a field has been set.
func (o *V1UpdateWorkloadRequest) HasWorkload() bool {
	if o != nil && o.Workload != nil {
		return true
	}

	return false
}

// SetWorkload gets a reference to the given V1Workload and assigns it to the Workload field.
func (o *V1UpdateWorkloadRequest) SetWorkload(v V1Workload) {
	o.Workload = &v
}

func (o V1UpdateWorkloadRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Workload != nil {
		toSerialize["workload"] = o.Workload
	}
	return json.Marshal(toSerialize)
}

type NullableV1UpdateWorkloadRequest struct {
	value *V1UpdateWorkloadRequest
	isSet bool
}

func (v NullableV1UpdateWorkloadRequest) Get() *V1UpdateWorkloadRequest {
	return v.value
}

func (v *NullableV1UpdateWorkloadRequest) Set(val *V1UpdateWorkloadRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1UpdateWorkloadRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1UpdateWorkloadRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1UpdateWorkloadRequest(val *V1UpdateWorkloadRequest) *NullableV1UpdateWorkloadRequest {
	return &NullableV1UpdateWorkloadRequest{value: val, isSet: true}
}

func (v NullableV1UpdateWorkloadRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1UpdateWorkloadRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
