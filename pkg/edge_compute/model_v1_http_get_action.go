/*
 * Edge Compute
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package edge_compute

import (
	"encoding/json"
)

// V1HTTPGetAction Execute an HTTP GET request against an endpoint running on an instance
type V1HTTPGetAction struct {
	// The path portion of the URL to request
	Path *string `json:"path,omitempty"`
	// The TCP port to query in the HTTP request
	Port *int32 `json:"port,omitempty"`
	// HTTP scheme to use in the HTTP request
	Scheme *string `json:"scheme,omitempty"`
	// A string to string key/value pair
	HttpHeaders *map[string]string `json:"httpHeaders,omitempty"`
}

// NewV1HTTPGetAction instantiates a new V1HTTPGetAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1HTTPGetAction() *V1HTTPGetAction {
	this := V1HTTPGetAction{}
	return &this
}

// NewV1HTTPGetActionWithDefaults instantiates a new V1HTTPGetAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1HTTPGetActionWithDefaults() *V1HTTPGetAction {
	this := V1HTTPGetAction{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *V1HTTPGetAction) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1HTTPGetAction) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *V1HTTPGetAction) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *V1HTTPGetAction) SetPath(v string) {
	o.Path = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *V1HTTPGetAction) GetPort() int32 {
	if o == nil || o.Port == nil {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1HTTPGetAction) GetPortOk() (*int32, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *V1HTTPGetAction) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *V1HTTPGetAction) SetPort(v int32) {
	o.Port = &v
}

// GetScheme returns the Scheme field value if set, zero value otherwise.
func (o *V1HTTPGetAction) GetScheme() string {
	if o == nil || o.Scheme == nil {
		var ret string
		return ret
	}
	return *o.Scheme
}

// GetSchemeOk returns a tuple with the Scheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1HTTPGetAction) GetSchemeOk() (*string, bool) {
	if o == nil || o.Scheme == nil {
		return nil, false
	}
	return o.Scheme, true
}

// HasScheme returns a boolean if a field has been set.
func (o *V1HTTPGetAction) HasScheme() bool {
	if o != nil && o.Scheme != nil {
		return true
	}

	return false
}

// SetScheme gets a reference to the given string and assigns it to the Scheme field.
func (o *V1HTTPGetAction) SetScheme(v string) {
	o.Scheme = &v
}

// GetHttpHeaders returns the HttpHeaders field value if set, zero value otherwise.
func (o *V1HTTPGetAction) GetHttpHeaders() map[string]string {
	if o == nil || o.HttpHeaders == nil {
		var ret map[string]string
		return ret
	}
	return *o.HttpHeaders
}

// GetHttpHeadersOk returns a tuple with the HttpHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1HTTPGetAction) GetHttpHeadersOk() (*map[string]string, bool) {
	if o == nil || o.HttpHeaders == nil {
		return nil, false
	}
	return o.HttpHeaders, true
}

// HasHttpHeaders returns a boolean if a field has been set.
func (o *V1HTTPGetAction) HasHttpHeaders() bool {
	if o != nil && o.HttpHeaders != nil {
		return true
	}

	return false
}

// SetHttpHeaders gets a reference to the given map[string]string and assigns it to the HttpHeaders field.
func (o *V1HTTPGetAction) SetHttpHeaders(v map[string]string) {
	o.HttpHeaders = &v
}

func (o V1HTTPGetAction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.Scheme != nil {
		toSerialize["scheme"] = o.Scheme
	}
	if o.HttpHeaders != nil {
		toSerialize["httpHeaders"] = o.HttpHeaders
	}
	return json.Marshal(toSerialize)
}

type NullableV1HTTPGetAction struct {
	value *V1HTTPGetAction
	isSet bool
}

func (v NullableV1HTTPGetAction) Get() *V1HTTPGetAction {
	return v.value
}

func (v *NullableV1HTTPGetAction) Set(val *V1HTTPGetAction) {
	v.value = val
	v.isSet = true
}

func (v NullableV1HTTPGetAction) IsSet() bool {
	return v.isSet
}

func (v *NullableV1HTTPGetAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1HTTPGetAction(val *V1HTTPGetAction) *NullableV1HTTPGetAction {
	return &NullableV1HTTPGetAction{value: val, isSet: true}
}

func (v NullableV1HTTPGetAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1HTTPGetAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
