/*
 * Edge Compute
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package edge_compute

import (
	"encoding/json"
)

// V1GetWorkloadResponse A response from a request to retrieve an individual workload
type V1GetWorkloadResponse struct {
	Workload *V1Workload `json:"workload,omitempty"`
}

// NewV1GetWorkloadResponse instantiates a new V1GetWorkloadResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GetWorkloadResponse() *V1GetWorkloadResponse {
	this := V1GetWorkloadResponse{}
	return &this
}

// NewV1GetWorkloadResponseWithDefaults instantiates a new V1GetWorkloadResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GetWorkloadResponseWithDefaults() *V1GetWorkloadResponse {
	this := V1GetWorkloadResponse{}
	return &this
}

// GetWorkload returns the Workload field value if set, zero value otherwise.
func (o *V1GetWorkloadResponse) GetWorkload() V1Workload {
	if o == nil || o.Workload == nil {
		var ret V1Workload
		return ret
	}
	return *o.Workload
}

// GetWorkloadOk returns a tuple with the Workload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GetWorkloadResponse) GetWorkloadOk() (*V1Workload, bool) {
	if o == nil || o.Workload == nil {
		return nil, false
	}
	return o.Workload, true
}

// HasWorkload returns a boolean if a field has been set.
func (o *V1GetWorkloadResponse) HasWorkload() bool {
	if o != nil && o.Workload != nil {
		return true
	}

	return false
}

// SetWorkload gets a reference to the given V1Workload and assigns it to the Workload field.
func (o *V1GetWorkloadResponse) SetWorkload(v V1Workload) {
	o.Workload = &v
}

func (o V1GetWorkloadResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Workload != nil {
		toSerialize["workload"] = o.Workload
	}
	return json.Marshal(toSerialize)
}

type NullableV1GetWorkloadResponse struct {
	value *V1GetWorkloadResponse
	isSet bool
}

func (v NullableV1GetWorkloadResponse) Get() *V1GetWorkloadResponse {
	return v.value
}

func (v *NullableV1GetWorkloadResponse) Set(val *V1GetWorkloadResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GetWorkloadResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GetWorkloadResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GetWorkloadResponse(val *V1GetWorkloadResponse) *NullableV1GetWorkloadResponse {
	return &NullableV1GetWorkloadResponse{value: val, isSet: true}
}

func (v NullableV1GetWorkloadResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GetWorkloadResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
