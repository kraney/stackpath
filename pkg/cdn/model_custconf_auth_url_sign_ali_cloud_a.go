/*
 * Content Delivery Network
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cdn

import (
	"encoding/json"
)

// CustconfAuthUrlSignAliCloudA struct for CustconfAuthUrlSignAliCloudA
type CustconfAuthUrlSignAliCloudA struct {
	// This is used by the API to perform conflict checking
	Id *string `json:"id,omitempty"`
	PassPhrase *string `json:"passPhrase,omitempty"`
	TokenField *string `json:"tokenField,omitempty"`
	IncludeParamsBeforeToken *bool `json:"includeParamsBeforeToken,omitempty"`
	ExpirationExtension *float32 `json:"expirationExtension,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	// String of values delimited by a ',' character.
	MethodFilter *string `json:"methodFilter,omitempty"`
	// String of values delimited by a ',' character.
	PathFilter *string `json:"pathFilter,omitempty"`
	// String of values delimited by a ',' character.
	HeaderFilter *string `json:"headerFilter,omitempty"`
}

// NewCustconfAuthUrlSignAliCloudA instantiates a new CustconfAuthUrlSignAliCloudA object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustconfAuthUrlSignAliCloudA() *CustconfAuthUrlSignAliCloudA {
	this := CustconfAuthUrlSignAliCloudA{}
	return &this
}

// NewCustconfAuthUrlSignAliCloudAWithDefaults instantiates a new CustconfAuthUrlSignAliCloudA object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustconfAuthUrlSignAliCloudAWithDefaults() *CustconfAuthUrlSignAliCloudA {
	this := CustconfAuthUrlSignAliCloudA{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustconfAuthUrlSignAliCloudA) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfAuthUrlSignAliCloudA) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustconfAuthUrlSignAliCloudA) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CustconfAuthUrlSignAliCloudA) SetId(v string) {
	o.Id = &v
}

// GetPassPhrase returns the PassPhrase field value if set, zero value otherwise.
func (o *CustconfAuthUrlSignAliCloudA) GetPassPhrase() string {
	if o == nil || o.PassPhrase == nil {
		var ret string
		return ret
	}
	return *o.PassPhrase
}

// GetPassPhraseOk returns a tuple with the PassPhrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfAuthUrlSignAliCloudA) GetPassPhraseOk() (*string, bool) {
	if o == nil || o.PassPhrase == nil {
		return nil, false
	}
	return o.PassPhrase, true
}

// HasPassPhrase returns a boolean if a field has been set.
func (o *CustconfAuthUrlSignAliCloudA) HasPassPhrase() bool {
	if o != nil && o.PassPhrase != nil {
		return true
	}

	return false
}

// SetPassPhrase gets a reference to the given string and assigns it to the PassPhrase field.
func (o *CustconfAuthUrlSignAliCloudA) SetPassPhrase(v string) {
	o.PassPhrase = &v
}

// GetTokenField returns the TokenField field value if set, zero value otherwise.
func (o *CustconfAuthUrlSignAliCloudA) GetTokenField() string {
	if o == nil || o.TokenField == nil {
		var ret string
		return ret
	}
	return *o.TokenField
}

// GetTokenFieldOk returns a tuple with the TokenField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfAuthUrlSignAliCloudA) GetTokenFieldOk() (*string, bool) {
	if o == nil || o.TokenField == nil {
		return nil, false
	}
	return o.TokenField, true
}

// HasTokenField returns a boolean if a field has been set.
func (o *CustconfAuthUrlSignAliCloudA) HasTokenField() bool {
	if o != nil && o.TokenField != nil {
		return true
	}

	return false
}

// SetTokenField gets a reference to the given string and assigns it to the TokenField field.
func (o *CustconfAuthUrlSignAliCloudA) SetTokenField(v string) {
	o.TokenField = &v
}

// GetIncludeParamsBeforeToken returns the IncludeParamsBeforeToken field value if set, zero value otherwise.
func (o *CustconfAuthUrlSignAliCloudA) GetIncludeParamsBeforeToken() bool {
	if o == nil || o.IncludeParamsBeforeToken == nil {
		var ret bool
		return ret
	}
	return *o.IncludeParamsBeforeToken
}

// GetIncludeParamsBeforeTokenOk returns a tuple with the IncludeParamsBeforeToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfAuthUrlSignAliCloudA) GetIncludeParamsBeforeTokenOk() (*bool, bool) {
	if o == nil || o.IncludeParamsBeforeToken == nil {
		return nil, false
	}
	return o.IncludeParamsBeforeToken, true
}

// HasIncludeParamsBeforeToken returns a boolean if a field has been set.
func (o *CustconfAuthUrlSignAliCloudA) HasIncludeParamsBeforeToken() bool {
	if o != nil && o.IncludeParamsBeforeToken != nil {
		return true
	}

	return false
}

// SetIncludeParamsBeforeToken gets a reference to the given bool and assigns it to the IncludeParamsBeforeToken field.
func (o *CustconfAuthUrlSignAliCloudA) SetIncludeParamsBeforeToken(v bool) {
	o.IncludeParamsBeforeToken = &v
}

// GetExpirationExtension returns the ExpirationExtension field value if set, zero value otherwise.
func (o *CustconfAuthUrlSignAliCloudA) GetExpirationExtension() float32 {
	if o == nil || o.ExpirationExtension == nil {
		var ret float32
		return ret
	}
	return *o.ExpirationExtension
}

// GetExpirationExtensionOk returns a tuple with the ExpirationExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfAuthUrlSignAliCloudA) GetExpirationExtensionOk() (*float32, bool) {
	if o == nil || o.ExpirationExtension == nil {
		return nil, false
	}
	return o.ExpirationExtension, true
}

// HasExpirationExtension returns a boolean if a field has been set.
func (o *CustconfAuthUrlSignAliCloudA) HasExpirationExtension() bool {
	if o != nil && o.ExpirationExtension != nil {
		return true
	}

	return false
}

// SetExpirationExtension gets a reference to the given float32 and assigns it to the ExpirationExtension field.
func (o *CustconfAuthUrlSignAliCloudA) SetExpirationExtension(v float32) {
	o.ExpirationExtension = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *CustconfAuthUrlSignAliCloudA) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfAuthUrlSignAliCloudA) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *CustconfAuthUrlSignAliCloudA) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *CustconfAuthUrlSignAliCloudA) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetMethodFilter returns the MethodFilter field value if set, zero value otherwise.
func (o *CustconfAuthUrlSignAliCloudA) GetMethodFilter() string {
	if o == nil || o.MethodFilter == nil {
		var ret string
		return ret
	}
	return *o.MethodFilter
}

// GetMethodFilterOk returns a tuple with the MethodFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfAuthUrlSignAliCloudA) GetMethodFilterOk() (*string, bool) {
	if o == nil || o.MethodFilter == nil {
		return nil, false
	}
	return o.MethodFilter, true
}

// HasMethodFilter returns a boolean if a field has been set.
func (o *CustconfAuthUrlSignAliCloudA) HasMethodFilter() bool {
	if o != nil && o.MethodFilter != nil {
		return true
	}

	return false
}

// SetMethodFilter gets a reference to the given string and assigns it to the MethodFilter field.
func (o *CustconfAuthUrlSignAliCloudA) SetMethodFilter(v string) {
	o.MethodFilter = &v
}

// GetPathFilter returns the PathFilter field value if set, zero value otherwise.
func (o *CustconfAuthUrlSignAliCloudA) GetPathFilter() string {
	if o == nil || o.PathFilter == nil {
		var ret string
		return ret
	}
	return *o.PathFilter
}

// GetPathFilterOk returns a tuple with the PathFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfAuthUrlSignAliCloudA) GetPathFilterOk() (*string, bool) {
	if o == nil || o.PathFilter == nil {
		return nil, false
	}
	return o.PathFilter, true
}

// HasPathFilter returns a boolean if a field has been set.
func (o *CustconfAuthUrlSignAliCloudA) HasPathFilter() bool {
	if o != nil && o.PathFilter != nil {
		return true
	}

	return false
}

// SetPathFilter gets a reference to the given string and assigns it to the PathFilter field.
func (o *CustconfAuthUrlSignAliCloudA) SetPathFilter(v string) {
	o.PathFilter = &v
}

// GetHeaderFilter returns the HeaderFilter field value if set, zero value otherwise.
func (o *CustconfAuthUrlSignAliCloudA) GetHeaderFilter() string {
	if o == nil || o.HeaderFilter == nil {
		var ret string
		return ret
	}
	return *o.HeaderFilter
}

// GetHeaderFilterOk returns a tuple with the HeaderFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfAuthUrlSignAliCloudA) GetHeaderFilterOk() (*string, bool) {
	if o == nil || o.HeaderFilter == nil {
		return nil, false
	}
	return o.HeaderFilter, true
}

// HasHeaderFilter returns a boolean if a field has been set.
func (o *CustconfAuthUrlSignAliCloudA) HasHeaderFilter() bool {
	if o != nil && o.HeaderFilter != nil {
		return true
	}

	return false
}

// SetHeaderFilter gets a reference to the given string and assigns it to the HeaderFilter field.
func (o *CustconfAuthUrlSignAliCloudA) SetHeaderFilter(v string) {
	o.HeaderFilter = &v
}

func (o CustconfAuthUrlSignAliCloudA) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.PassPhrase != nil {
		toSerialize["passPhrase"] = o.PassPhrase
	}
	if o.TokenField != nil {
		toSerialize["tokenField"] = o.TokenField
	}
	if o.IncludeParamsBeforeToken != nil {
		toSerialize["includeParamsBeforeToken"] = o.IncludeParamsBeforeToken
	}
	if o.ExpirationExtension != nil {
		toSerialize["expirationExtension"] = o.ExpirationExtension
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.MethodFilter != nil {
		toSerialize["methodFilter"] = o.MethodFilter
	}
	if o.PathFilter != nil {
		toSerialize["pathFilter"] = o.PathFilter
	}
	if o.HeaderFilter != nil {
		toSerialize["headerFilter"] = o.HeaderFilter
	}
	return json.Marshal(toSerialize)
}

type NullableCustconfAuthUrlSignAliCloudA struct {
	value *CustconfAuthUrlSignAliCloudA
	isSet bool
}

func (v NullableCustconfAuthUrlSignAliCloudA) Get() *CustconfAuthUrlSignAliCloudA {
	return v.value
}

func (v *NullableCustconfAuthUrlSignAliCloudA) Set(val *CustconfAuthUrlSignAliCloudA) {
	v.value = val
	v.isSet = true
}

func (v NullableCustconfAuthUrlSignAliCloudA) IsSet() bool {
	return v.isSet
}

func (v *NullableCustconfAuthUrlSignAliCloudA) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustconfAuthUrlSignAliCloudA(val *CustconfAuthUrlSignAliCloudA) *NullableCustconfAuthUrlSignAliCloudA {
	return &NullableCustconfAuthUrlSignAliCloudA{value: val, isSet: true}
}

func (v NullableCustconfAuthUrlSignAliCloudA) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustconfAuthUrlSignAliCloudA) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
