/*
 * Content Delivery Network
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cdn

import (
	"encoding/json"
)

// CdnConnectSiteToCertificateResponse The response to a request to associate an SSL certificate with a CDN site
type CdnConnectSiteToCertificateResponse struct {
	SiteCertificate *CdnSiteCertificate `json:"siteCertificate,omitempty"`
}

// NewCdnConnectSiteToCertificateResponse instantiates a new CdnConnectSiteToCertificateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdnConnectSiteToCertificateResponse() *CdnConnectSiteToCertificateResponse {
	this := CdnConnectSiteToCertificateResponse{}
	return &this
}

// NewCdnConnectSiteToCertificateResponseWithDefaults instantiates a new CdnConnectSiteToCertificateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdnConnectSiteToCertificateResponseWithDefaults() *CdnConnectSiteToCertificateResponse {
	this := CdnConnectSiteToCertificateResponse{}
	return &this
}

// GetSiteCertificate returns the SiteCertificate field value if set, zero value otherwise.
func (o *CdnConnectSiteToCertificateResponse) GetSiteCertificate() CdnSiteCertificate {
	if o == nil || o.SiteCertificate == nil {
		var ret CdnSiteCertificate
		return ret
	}
	return *o.SiteCertificate
}

// GetSiteCertificateOk returns a tuple with the SiteCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnConnectSiteToCertificateResponse) GetSiteCertificateOk() (*CdnSiteCertificate, bool) {
	if o == nil || o.SiteCertificate == nil {
		return nil, false
	}
	return o.SiteCertificate, true
}

// HasSiteCertificate returns a boolean if a field has been set.
func (o *CdnConnectSiteToCertificateResponse) HasSiteCertificate() bool {
	if o != nil && o.SiteCertificate != nil {
		return true
	}

	return false
}

// SetSiteCertificate gets a reference to the given CdnSiteCertificate and assigns it to the SiteCertificate field.
func (o *CdnConnectSiteToCertificateResponse) SetSiteCertificate(v CdnSiteCertificate) {
	o.SiteCertificate = &v
}

func (o CdnConnectSiteToCertificateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SiteCertificate != nil {
		toSerialize["siteCertificate"] = o.SiteCertificate
	}
	return json.Marshal(toSerialize)
}

type NullableCdnConnectSiteToCertificateResponse struct {
	value *CdnConnectSiteToCertificateResponse
	isSet bool
}

func (v NullableCdnConnectSiteToCertificateResponse) Get() *CdnConnectSiteToCertificateResponse {
	return v.value
}

func (v *NullableCdnConnectSiteToCertificateResponse) Set(val *CdnConnectSiteToCertificateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCdnConnectSiteToCertificateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCdnConnectSiteToCertificateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdnConnectSiteToCertificateResponse(val *CdnConnectSiteToCertificateResponse) *NullableCdnConnectSiteToCertificateResponse {
	return &NullableCdnConnectSiteToCertificateResponse{value: val, isSet: true}
}

func (v NullableCdnConnectSiteToCertificateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdnConnectSiteToCertificateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
