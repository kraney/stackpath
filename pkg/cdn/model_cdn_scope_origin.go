/*
 * Content Delivery Network
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cdn

import (
	"encoding/json"
)

// CdnScopeOrigin A relationship between a CDN site's configuration scope and an origin
type CdnScopeOrigin struct {
	// An origin's priority to it's CDN site scope  If a CDN scope is powered by more than one origin, then the one with the lower priority number takes higher precedence.
	Priority *int32 `json:"priority,omitempty"`
	Origin *SchemacdnOrigin `json:"origin,omitempty"`
}

// NewCdnScopeOrigin instantiates a new CdnScopeOrigin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdnScopeOrigin() *CdnScopeOrigin {
	this := CdnScopeOrigin{}
	return &this
}

// NewCdnScopeOriginWithDefaults instantiates a new CdnScopeOrigin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdnScopeOriginWithDefaults() *CdnScopeOrigin {
	this := CdnScopeOrigin{}
	return &this
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *CdnScopeOrigin) GetPriority() int32 {
	if o == nil || o.Priority == nil {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnScopeOrigin) GetPriorityOk() (*int32, bool) {
	if o == nil || o.Priority == nil {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *CdnScopeOrigin) HasPriority() bool {
	if o != nil && o.Priority != nil {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *CdnScopeOrigin) SetPriority(v int32) {
	o.Priority = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *CdnScopeOrigin) GetOrigin() SchemacdnOrigin {
	if o == nil || o.Origin == nil {
		var ret SchemacdnOrigin
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnScopeOrigin) GetOriginOk() (*SchemacdnOrigin, bool) {
	if o == nil || o.Origin == nil {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *CdnScopeOrigin) HasOrigin() bool {
	if o != nil && o.Origin != nil {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given SchemacdnOrigin and assigns it to the Origin field.
func (o *CdnScopeOrigin) SetOrigin(v SchemacdnOrigin) {
	o.Origin = &v
}

func (o CdnScopeOrigin) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Priority != nil {
		toSerialize["priority"] = o.Priority
	}
	if o.Origin != nil {
		toSerialize["origin"] = o.Origin
	}
	return json.Marshal(toSerialize)
}

type NullableCdnScopeOrigin struct {
	value *CdnScopeOrigin
	isSet bool
}

func (v NullableCdnScopeOrigin) Get() *CdnScopeOrigin {
	return v.value
}

func (v *NullableCdnScopeOrigin) Set(val *CdnScopeOrigin) {
	v.value = val
	v.isSet = true
}

func (v NullableCdnScopeOrigin) IsSet() bool {
	return v.isSet
}

func (v *NullableCdnScopeOrigin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdnScopeOrigin(val *CdnScopeOrigin) *NullableCdnScopeOrigin {
	return &NullableCdnScopeOrigin{value: val, isSet: true}
}

func (v NullableCdnScopeOrigin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdnScopeOrigin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
