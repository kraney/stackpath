/*
 * Content Delivery Network
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cdn

import (
	"encoding/json"
)

// ScanOriginResponseOriginScanSSLDetails SSL details in an origin scan response
type ScanOriginResponseOriginScanSSLDetails struct {
	// Whether or not the scanned domain has a valid SSL certificate
	Valid *bool `json:"valid,omitempty"`
	// Errors encountered processing HTTPS requests to the scanned domain
	Error *string `json:"error,omitempty"`
}

// NewScanOriginResponseOriginScanSSLDetails instantiates a new ScanOriginResponseOriginScanSSLDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScanOriginResponseOriginScanSSLDetails() *ScanOriginResponseOriginScanSSLDetails {
	this := ScanOriginResponseOriginScanSSLDetails{}
	return &this
}

// NewScanOriginResponseOriginScanSSLDetailsWithDefaults instantiates a new ScanOriginResponseOriginScanSSLDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScanOriginResponseOriginScanSSLDetailsWithDefaults() *ScanOriginResponseOriginScanSSLDetails {
	this := ScanOriginResponseOriginScanSSLDetails{}
	return &this
}

// GetValid returns the Valid field value if set, zero value otherwise.
func (o *ScanOriginResponseOriginScanSSLDetails) GetValid() bool {
	if o == nil || o.Valid == nil {
		var ret bool
		return ret
	}
	return *o.Valid
}

// GetValidOk returns a tuple with the Valid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanOriginResponseOriginScanSSLDetails) GetValidOk() (*bool, bool) {
	if o == nil || o.Valid == nil {
		return nil, false
	}
	return o.Valid, true
}

// HasValid returns a boolean if a field has been set.
func (o *ScanOriginResponseOriginScanSSLDetails) HasValid() bool {
	if o != nil && o.Valid != nil {
		return true
	}

	return false
}

// SetValid gets a reference to the given bool and assigns it to the Valid field.
func (o *ScanOriginResponseOriginScanSSLDetails) SetValid(v bool) {
	o.Valid = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ScanOriginResponseOriginScanSSLDetails) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanOriginResponseOriginScanSSLDetails) GetErrorOk() (*string, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *ScanOriginResponseOriginScanSSLDetails) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *ScanOriginResponseOriginScanSSLDetails) SetError(v string) {
	o.Error = &v
}

func (o ScanOriginResponseOriginScanSSLDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Valid != nil {
		toSerialize["valid"] = o.Valid
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableScanOriginResponseOriginScanSSLDetails struct {
	value *ScanOriginResponseOriginScanSSLDetails
	isSet bool
}

func (v NullableScanOriginResponseOriginScanSSLDetails) Get() *ScanOriginResponseOriginScanSSLDetails {
	return v.value
}

func (v *NullableScanOriginResponseOriginScanSSLDetails) Set(val *ScanOriginResponseOriginScanSSLDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableScanOriginResponseOriginScanSSLDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableScanOriginResponseOriginScanSSLDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScanOriginResponseOriginScanSSLDetails(val *ScanOriginResponseOriginScanSSLDetails) *NullableScanOriginResponseOriginScanSSLDetails {
	return &NullableScanOriginResponseOriginScanSSLDetails{value: val, isSet: true}
}

func (v NullableScanOriginResponseOriginScanSSLDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScanOriginResponseOriginScanSSLDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
