/*
 * Content Delivery Network
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cdn

import (
	"encoding/json"
)

// CdnConnectScopeToOriginResponse The response from a request to associate an origin with a CDN site scope
type CdnConnectScopeToOriginResponse struct {
	ScopeOrigin *CdnScopeOrigin `json:"scopeOrigin,omitempty"`
}

// NewCdnConnectScopeToOriginResponse instantiates a new CdnConnectScopeToOriginResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdnConnectScopeToOriginResponse() *CdnConnectScopeToOriginResponse {
	this := CdnConnectScopeToOriginResponse{}
	return &this
}

// NewCdnConnectScopeToOriginResponseWithDefaults instantiates a new CdnConnectScopeToOriginResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdnConnectScopeToOriginResponseWithDefaults() *CdnConnectScopeToOriginResponse {
	this := CdnConnectScopeToOriginResponse{}
	return &this
}

// GetScopeOrigin returns the ScopeOrigin field value if set, zero value otherwise.
func (o *CdnConnectScopeToOriginResponse) GetScopeOrigin() CdnScopeOrigin {
	if o == nil || o.ScopeOrigin == nil {
		var ret CdnScopeOrigin
		return ret
	}
	return *o.ScopeOrigin
}

// GetScopeOriginOk returns a tuple with the ScopeOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnConnectScopeToOriginResponse) GetScopeOriginOk() (*CdnScopeOrigin, bool) {
	if o == nil || o.ScopeOrigin == nil {
		return nil, false
	}
	return o.ScopeOrigin, true
}

// HasScopeOrigin returns a boolean if a field has been set.
func (o *CdnConnectScopeToOriginResponse) HasScopeOrigin() bool {
	if o != nil && o.ScopeOrigin != nil {
		return true
	}

	return false
}

// SetScopeOrigin gets a reference to the given CdnScopeOrigin and assigns it to the ScopeOrigin field.
func (o *CdnConnectScopeToOriginResponse) SetScopeOrigin(v CdnScopeOrigin) {
	o.ScopeOrigin = &v
}

func (o CdnConnectScopeToOriginResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ScopeOrigin != nil {
		toSerialize["scopeOrigin"] = o.ScopeOrigin
	}
	return json.Marshal(toSerialize)
}

type NullableCdnConnectScopeToOriginResponse struct {
	value *CdnConnectScopeToOriginResponse
	isSet bool
}

func (v NullableCdnConnectScopeToOriginResponse) Get() *CdnConnectScopeToOriginResponse {
	return v.value
}

func (v *NullableCdnConnectScopeToOriginResponse) Set(val *CdnConnectScopeToOriginResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCdnConnectScopeToOriginResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCdnConnectScopeToOriginResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdnConnectScopeToOriginResponse(val *CdnConnectScopeToOriginResponse) *NullableCdnConnectScopeToOriginResponse {
	return &NullableCdnConnectScopeToOriginResponse{value: val, isSet: true}
}

func (v NullableCdnConnectScopeToOriginResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdnConnectScopeToOriginResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
