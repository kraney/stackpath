/*
 * Content Delivery Network
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cdn

import (
	"encoding/json"
)

// PurgeContentRequestItem struct for PurgeContentRequestItem
type PurgeContentRequestItem struct {
	// The URL at which to delete content
	Url *string `json:"url,omitempty"`
	// Whether or not to recursively delete content from the CDN
	Recursive *bool `json:"recursive,omitempty"`
	// Whether or not to mark the asset as expired and re-validate instead of deleting
	InvalidateOnly *bool `json:"invalidateOnly,omitempty"`
	// Whether or not to purge dynamic versions of assets  This is ignored if recursive is true.
	PurgeAllDynamic *bool `json:"purgeAllDynamic,omitempty"`
	// A list of HTTP request headers used to construct a cache key to purge content by. These headers must be configured in the site configuration's _DynamicContent.headerFields_ property.
	Headers *[]string `json:"headers,omitempty"`
	// A key/value pair definition of content to purge from the CDN
	PurgeSelector *[]PurgeContentRequestPurgeSelector `json:"purgeSelector,omitempty"`
}

// NewPurgeContentRequestItem instantiates a new PurgeContentRequestItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPurgeContentRequestItem() *PurgeContentRequestItem {
	this := PurgeContentRequestItem{}
	return &this
}

// NewPurgeContentRequestItemWithDefaults instantiates a new PurgeContentRequestItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPurgeContentRequestItemWithDefaults() *PurgeContentRequestItem {
	this := PurgeContentRequestItem{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *PurgeContentRequestItem) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurgeContentRequestItem) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *PurgeContentRequestItem) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *PurgeContentRequestItem) SetUrl(v string) {
	o.Url = &v
}

// GetRecursive returns the Recursive field value if set, zero value otherwise.
func (o *PurgeContentRequestItem) GetRecursive() bool {
	if o == nil || o.Recursive == nil {
		var ret bool
		return ret
	}
	return *o.Recursive
}

// GetRecursiveOk returns a tuple with the Recursive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurgeContentRequestItem) GetRecursiveOk() (*bool, bool) {
	if o == nil || o.Recursive == nil {
		return nil, false
	}
	return o.Recursive, true
}

// HasRecursive returns a boolean if a field has been set.
func (o *PurgeContentRequestItem) HasRecursive() bool {
	if o != nil && o.Recursive != nil {
		return true
	}

	return false
}

// SetRecursive gets a reference to the given bool and assigns it to the Recursive field.
func (o *PurgeContentRequestItem) SetRecursive(v bool) {
	o.Recursive = &v
}

// GetInvalidateOnly returns the InvalidateOnly field value if set, zero value otherwise.
func (o *PurgeContentRequestItem) GetInvalidateOnly() bool {
	if o == nil || o.InvalidateOnly == nil {
		var ret bool
		return ret
	}
	return *o.InvalidateOnly
}

// GetInvalidateOnlyOk returns a tuple with the InvalidateOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurgeContentRequestItem) GetInvalidateOnlyOk() (*bool, bool) {
	if o == nil || o.InvalidateOnly == nil {
		return nil, false
	}
	return o.InvalidateOnly, true
}

// HasInvalidateOnly returns a boolean if a field has been set.
func (o *PurgeContentRequestItem) HasInvalidateOnly() bool {
	if o != nil && o.InvalidateOnly != nil {
		return true
	}

	return false
}

// SetInvalidateOnly gets a reference to the given bool and assigns it to the InvalidateOnly field.
func (o *PurgeContentRequestItem) SetInvalidateOnly(v bool) {
	o.InvalidateOnly = &v
}

// GetPurgeAllDynamic returns the PurgeAllDynamic field value if set, zero value otherwise.
func (o *PurgeContentRequestItem) GetPurgeAllDynamic() bool {
	if o == nil || o.PurgeAllDynamic == nil {
		var ret bool
		return ret
	}
	return *o.PurgeAllDynamic
}

// GetPurgeAllDynamicOk returns a tuple with the PurgeAllDynamic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurgeContentRequestItem) GetPurgeAllDynamicOk() (*bool, bool) {
	if o == nil || o.PurgeAllDynamic == nil {
		return nil, false
	}
	return o.PurgeAllDynamic, true
}

// HasPurgeAllDynamic returns a boolean if a field has been set.
func (o *PurgeContentRequestItem) HasPurgeAllDynamic() bool {
	if o != nil && o.PurgeAllDynamic != nil {
		return true
	}

	return false
}

// SetPurgeAllDynamic gets a reference to the given bool and assigns it to the PurgeAllDynamic field.
func (o *PurgeContentRequestItem) SetPurgeAllDynamic(v bool) {
	o.PurgeAllDynamic = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *PurgeContentRequestItem) GetHeaders() []string {
	if o == nil || o.Headers == nil {
		var ret []string
		return ret
	}
	return *o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurgeContentRequestItem) GetHeadersOk() (*[]string, bool) {
	if o == nil || o.Headers == nil {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *PurgeContentRequestItem) HasHeaders() bool {
	if o != nil && o.Headers != nil {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given []string and assigns it to the Headers field.
func (o *PurgeContentRequestItem) SetHeaders(v []string) {
	o.Headers = &v
}

// GetPurgeSelector returns the PurgeSelector field value if set, zero value otherwise.
func (o *PurgeContentRequestItem) GetPurgeSelector() []PurgeContentRequestPurgeSelector {
	if o == nil || o.PurgeSelector == nil {
		var ret []PurgeContentRequestPurgeSelector
		return ret
	}
	return *o.PurgeSelector
}

// GetPurgeSelectorOk returns a tuple with the PurgeSelector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurgeContentRequestItem) GetPurgeSelectorOk() (*[]PurgeContentRequestPurgeSelector, bool) {
	if o == nil || o.PurgeSelector == nil {
		return nil, false
	}
	return o.PurgeSelector, true
}

// HasPurgeSelector returns a boolean if a field has been set.
func (o *PurgeContentRequestItem) HasPurgeSelector() bool {
	if o != nil && o.PurgeSelector != nil {
		return true
	}

	return false
}

// SetPurgeSelector gets a reference to the given []PurgeContentRequestPurgeSelector and assigns it to the PurgeSelector field.
func (o *PurgeContentRequestItem) SetPurgeSelector(v []PurgeContentRequestPurgeSelector) {
	o.PurgeSelector = &v
}

func (o PurgeContentRequestItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Recursive != nil {
		toSerialize["recursive"] = o.Recursive
	}
	if o.InvalidateOnly != nil {
		toSerialize["invalidateOnly"] = o.InvalidateOnly
	}
	if o.PurgeAllDynamic != nil {
		toSerialize["purgeAllDynamic"] = o.PurgeAllDynamic
	}
	if o.Headers != nil {
		toSerialize["headers"] = o.Headers
	}
	if o.PurgeSelector != nil {
		toSerialize["purgeSelector"] = o.PurgeSelector
	}
	return json.Marshal(toSerialize)
}

type NullablePurgeContentRequestItem struct {
	value *PurgeContentRequestItem
	isSet bool
}

func (v NullablePurgeContentRequestItem) Get() *PurgeContentRequestItem {
	return v.value
}

func (v *NullablePurgeContentRequestItem) Set(val *PurgeContentRequestItem) {
	v.value = val
	v.isSet = true
}

func (v NullablePurgeContentRequestItem) IsSet() bool {
	return v.isSet
}

func (v *NullablePurgeContentRequestItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePurgeContentRequestItem(val *PurgeContentRequestItem) *NullablePurgeContentRequestItem {
	return &NullablePurgeContentRequestItem{value: val, isSet: true}
}

func (v NullablePurgeContentRequestItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePurgeContentRequestItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
