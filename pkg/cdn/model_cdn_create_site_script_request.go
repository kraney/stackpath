/*
 * Content Delivery Network
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cdn

import (
	"encoding/json"
)

// CdnCreateSiteScriptRequest struct for CdnCreateSiteScriptRequest
type CdnCreateSiteScriptRequest struct {
	// The serverless script's name
	Name *string `json:"name,omitempty"`
	// The base64 encoded serverless script's contents
	Code *string `json:"code,omitempty"`
	// The HTTP request paths that are handled by the serverless script
	Paths *[]string `json:"paths,omitempty"`
}

// NewCdnCreateSiteScriptRequest instantiates a new CdnCreateSiteScriptRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdnCreateSiteScriptRequest() *CdnCreateSiteScriptRequest {
	this := CdnCreateSiteScriptRequest{}
	return &this
}

// NewCdnCreateSiteScriptRequestWithDefaults instantiates a new CdnCreateSiteScriptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdnCreateSiteScriptRequestWithDefaults() *CdnCreateSiteScriptRequest {
	this := CdnCreateSiteScriptRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CdnCreateSiteScriptRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnCreateSiteScriptRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CdnCreateSiteScriptRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CdnCreateSiteScriptRequest) SetName(v string) {
	o.Name = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *CdnCreateSiteScriptRequest) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnCreateSiteScriptRequest) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *CdnCreateSiteScriptRequest) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *CdnCreateSiteScriptRequest) SetCode(v string) {
	o.Code = &v
}

// GetPaths returns the Paths field value if set, zero value otherwise.
func (o *CdnCreateSiteScriptRequest) GetPaths() []string {
	if o == nil || o.Paths == nil {
		var ret []string
		return ret
	}
	return *o.Paths
}

// GetPathsOk returns a tuple with the Paths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnCreateSiteScriptRequest) GetPathsOk() (*[]string, bool) {
	if o == nil || o.Paths == nil {
		return nil, false
	}
	return o.Paths, true
}

// HasPaths returns a boolean if a field has been set.
func (o *CdnCreateSiteScriptRequest) HasPaths() bool {
	if o != nil && o.Paths != nil {
		return true
	}

	return false
}

// SetPaths gets a reference to the given []string and assigns it to the Paths field.
func (o *CdnCreateSiteScriptRequest) SetPaths(v []string) {
	o.Paths = &v
}

func (o CdnCreateSiteScriptRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Paths != nil {
		toSerialize["paths"] = o.Paths
	}
	return json.Marshal(toSerialize)
}

type NullableCdnCreateSiteScriptRequest struct {
	value *CdnCreateSiteScriptRequest
	isSet bool
}

func (v NullableCdnCreateSiteScriptRequest) Get() *CdnCreateSiteScriptRequest {
	return v.value
}

func (v *NullableCdnCreateSiteScriptRequest) Set(val *CdnCreateSiteScriptRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCdnCreateSiteScriptRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCdnCreateSiteScriptRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdnCreateSiteScriptRequest(val *CdnCreateSiteScriptRequest) *NullableCdnCreateSiteScriptRequest {
	return &NullableCdnCreateSiteScriptRequest{value: val, isSet: true}
}

func (v NullableCdnCreateSiteScriptRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdnCreateSiteScriptRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
