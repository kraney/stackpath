openapi: 3.0.0
info:
  contact:
    name: StackPath Support
    url: https://support.stackpath.com/
  title: Content Delivery Network
  version: 1.0.0
externalDocs:
  description: The StackPath API Reference
  url: https://stackpath.dev/reference
servers:
- url: https://gateway.stackpath.com
security:
- oauth2: []
paths:
  /cdn/v1/ips:
    get:
      description: Retrieve all IP addresses used by the StackPath CDN
      operationId: GetCDNIPs
      parameters:
      - description: Whether to search for IPv4, IPv6, or all IP addresses
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ALL
          enum:
          - ALL
          - IPV4
          - IPV6
          type: string
        style: form
      - description: The format to return the result in
        explode: true
        in: query
        name: response_type
        required: false
        schema:
          default: JSON
          enum:
          - JSON
          - PLAIN_TEXT
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnGetCDNIPsResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get IP addresses
      tags:
      - Infrastructure
  /cdn/v1/origins/scan:
    post:
      description: Scan an origin from StackPath's CDN. Retrieve information regarding
        the origin, such as its IP address and whether or not it supports SSL.
      operationId: ScanOrigin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cdnScanOriginRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnScanOriginResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Scan an origin
      tags:
      - Infrastructure
  /cdn/v1/pops:
    get:
      description: Get the StackPath CDN's points of presence
      operationId: GetPops
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnGetPopsResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get points of presence
      tags:
      - Infrastructure
  /cdn/v1/pops/closest:
    get:
      description: Scan a URL from the StackPath edge network and return a performance
        report. Results are ordered with the fastest POP response first.
      operationId: GetClosestPops
      parameters:
      - description: The URL to scan.
        explode: true
        in: query
        name: url
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnGetClosestPopsResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get POP performance
      tags:
      - Infrastructure
  /cdn/v1/stacks/{stack_id}/certificates:
    get:
      operationId: GetCertificates
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items desired.
        explode: true
        in: query
        name: page_request.first
        required: false
        schema:
          type: string
        style: form
      - description: The cursor value after which data will be returned.
        explode: true
        in: query
        name: page_request.after
        required: false
        schema:
          type: string
        style: form
      - description: SQL-style constraint filters.
        explode: true
        in: query
        name: page_request.filter
        required: false
        schema:
          type: string
        style: form
      - description: Sort the response by the given field.
        explode: true
        in: query
        name: page_request.sort_by
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnGetCertificatesResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get all certificates
      tags:
      - SSL
    post:
      description: The certificate is automatically associated with CDN site scope
        hostnames that match either the certificate's subject or its alternative names.
      operationId: CreateCertificate
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cdnCreateCertificateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnCreateCertificateResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Add a certificate
      tags:
      - SSL
  /cdn/v1/stacks/{stack_id}/certificates/{certificate_id}:
    delete:
      operationId: DeleteCertificate
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A certificate ID
        explode: false
        in: path
        name: certificate_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Delete a certificate
      tags:
      - SSL
    get:
      operationId: GetCertificate
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A certificate ID
        explode: false
        in: path
        name: certificate_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnGetCertificateResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get a certificate
      tags:
      - SSL
    put:
      operationId: UpdateCertificate
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A certificate ID
        explode: false
        in: path
        name: certificate_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cdnUpdateCertificateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnUpdateCertificateResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Update a certificate
      tags:
      - SSL
  /cdn/v1/stacks/{stack_id}/certificates/{certificate_id}/renew:
    post:
      description: StackPath automatically renews certificates that are 30 days from
        expiration. Call this to retry a renewal that previously failed.
      operationId: RenewCertificate
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A certificate ID
        explode: false
        in: path
        name: certificate_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Renew a certificate
      tags:
      - SSL
  /cdn/v1/stacks/{stack_id}/certificates/{certificate_id}/sites:
    get:
      operationId: GetCertificateSites
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A certificate ID
        explode: false
        in: path
        name: certificate_id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items desired.
        explode: true
        in: query
        name: page_request.first
        required: false
        schema:
          type: string
        style: form
      - description: The cursor value after which data will be returned.
        explode: true
        in: query
        name: page_request.after
        required: false
        schema:
          type: string
        style: form
      - description: SQL-style constraint filters.
        explode: true
        in: query
        name: page_request.filter
        required: false
        schema:
          type: string
        style: form
      - description: Sort the response by the given field.
        explode: true
        in: query
        name: page_request.sort_by
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnGetCertificateSitesResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get sites associated with a certificate
      tags:
      - SSL
  /cdn/v1/stacks/{stack_id}/certificates/{certificate_id}/verification_details:
    get:
      operationId: GetCertificateVerificationDetails
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A certificate ID
        explode: false
        in: path
        name: certificate_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnGetCertificateVerificationDetailsResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get verification details
      tags:
      - SSL
  /cdn/v1/stacks/{stack_id}/metrics:
    get:
      description: The last 24 hours of metrics are retrieved if the start and end
        dates are not provided
      operationId: GetMetrics
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: The starting date to retrieve metrics for.
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The ending date to retrieve metrics for.
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: An ISO 8601 duration to roll up metrics by
        explode: true
        in: query
        name: granularity
        required: false
        schema:
          default: AUTO
          enum:
          - AUTO
          - P1M
          - PT5M
          - PT1H
          - P1D
          type: string
        style: form
      - description: A comma-separated list of billing platforms to filter metrics
          for.
        explode: true
        in: query
        name: platforms
        required: false
        schema:
          type: string
        style: form
      - description: A comma-separated list of StackPath point of presence location
          codes to filter metrics for.
        explode: true
        in: query
        name: pops
        required: false
        schema:
          type: string
        style: form
      - description: A comma-separated list of billing regions to filter metrics for.
        explode: true
        in: query
        name: billing_regions
        required: false
        schema:
          type: string
        style: form
      - description: A comma-separated list of site IDs to filter metrics for.
        explode: true
        in: query
        name: sites
        required: false
        schema:
          type: string
        style: form
      - description: The field to group metrics by
        explode: true
        in: query
        name: group_by
        required: false
        schema:
          default: NONE
          enum:
          - NONE
          - ACCOUNT
          - SITE
          - PLATFORM
          - POP
          - REGION
          type: string
        style: form
      - description: The type of sites to retrieve metrics for
        explode: true
        in: query
        name: site_type_filter
        required: false
        schema:
          default: ALL
          enum:
          - ALL
          - CDN
          - WAF
          - API
          - EDGE_ENGINE
          - SERVERLESS_EDGE_ENGINE
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnGetMetricsResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get metrics
      tags:
      - Metrics
  /cdn/v1/stacks/{stack_id}/purge:
    post:
      description: Purge cached content for all CDN sites on a stack. Content is re-cached
        on the CDN the next time it is requested. Use the returned purge ID to see
        the status of a purge request.
      operationId: PurgeContent
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cdnPurgeContentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnPurgeContentResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Purge content
      tags:
      - Purge Content
  /cdn/v1/stacks/{stack_id}/purge/{purge_id}:
    get:
      operationId: GetPurgeStatus
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A CDN purge ID
        explode: false
        in: path
        name: purge_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnGetPurgeStatusResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get purge status
      tags:
      - Purge Content
  /cdn/v1/stacks/{stack_id}/sites/{site_id}/certificates:
    get:
      operationId: GetSiteCertificates
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items desired.
        explode: true
        in: query
        name: page_request.first
        required: false
        schema:
          type: string
        style: form
      - description: The cursor value after which data will be returned.
        explode: true
        in: query
        name: page_request.after
        required: false
        schema:
          type: string
        style: form
      - description: SQL-style constraint filters.
        explode: true
        in: query
        name: page_request.filter
        required: false
        schema:
          type: string
        style: form
      - description: Sort the response by the given field.
        explode: true
        in: query
        name: page_request.sort_by
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnGetSiteCertificatesResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get all site certificates
      tags:
      - SSL
  /cdn/v1/stacks/{stack_id}/sites/{site_id}/certificates/request:
    post:
      description: The optional list of hosts should be delivery domains for the site.
        If no hosts parameter is provided, all delivery domains for a site will be
        included in the SAN field. If the hosts parameter is provided, then the first
        entry in the list will be used as the certificate's common name.
      operationId: RequestCertificate
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cdnRequestCertificateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnRequestCertificateResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Request a free certificate
      tags:
      - SSL
  /cdn/v1/stacks/{stack_id}/sites/{site_id}/certificates/{certificate_id}:
    put:
      description: |-
        Association is performed without validating if the site has a hostname covered by the certificate. This is useful for preparation work required for getting a site ready for traffic.

        If a certificate is uploaded which contains hostnames for sites, it will automatically be connected to those sites. If a hostname is added to a site which is covered by an SSL certificate, it will automatically be connected to the certificate.
      operationId: ConnectSiteToCertificate
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A certificate ID
        explode: false
        in: path
        name: certificate_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnConnectSiteToCertificateResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get a site's certificate
      tags:
      - SSL
  /cdn/v1/stacks/{stack_id}/sites/{site_id}/certificates/{certificate_id}/hosts:
    put:
      description: Updating hosts issues a new certificate.
      operationId: UpdateSiteCertificateHosts
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A certificate ID
        explode: false
        in: path
        name: certificate_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cdnUpdateSiteCertificateHostsRequest'
        required: true
      responses:
        "204":
          description: No content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Update SAN hosts
      tags:
      - SSL
  /cdn/v1/stacks/{stack_id}/sites/{site_id}/dns/targets:
    get:
      description: A site's hostname should point to these CNAME targets in order
        for traffic to be sent through StackPath's edge nodes.
      operationId: GetSiteDnsTargets
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnGetSiteDnsTargetsResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get CNAME targets
      tags:
      - Configuration
  /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes:
    get:
      operationId: GetSiteScopes
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items desired.
        explode: true
        in: query
        name: page_request.first
        required: false
        schema:
          type: string
        style: form
      - description: The cursor value after which data will be returned.
        explode: true
        in: query
        name: page_request.after
        required: false
        schema:
          type: string
        style: form
      - description: SQL-style constraint filters.
        explode: true
        in: query
        name: page_request.filter
        required: false
        schema:
          type: string
        style: form
      - description: Sort the response by the given field.
        explode: true
        in: query
        name: page_request.sort_by
        required: false
        schema:
          type: string
        style: form
      - description: Whether or not to retrieve the site's CDN scope or its WAF scope.
          When true, this call removes the hostname from a CDN site's scope instead
          of loading from a CDN site's WAF scope, if the site has WAF service.
        explode: true
        in: query
        name: disable_transparent_mode
        required: false
        schema:
          format: boolean
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnGetSiteScopesResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get all scopes
      tags:
      - Configuration
    post:
      operationId: CreateScope
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cdnCreateScopeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnCreateScopeResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Create a scope
      tags:
      - Configuration
  /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}:
    delete:
      operationId: DeleteScope
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Delete a scope
      tags:
      - Configuration
  /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/configuration:
    get:
      operationId: GetScopeConfiguration
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnGetScopeConfigurationResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get a scope's configuraiton
      tags:
      - Configuration
    patch:
      operationId: UpdateScopeConfiguration
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cdnUpdateScopeConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnUpdateScopeConfigurationResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Update a scope's configuration
      tags:
      - Configuration
  /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/hostnames:
    get:
      description: Hostnames allow the CDN to recognize an HTTP request and associate
        it with a CDN site.
      operationId: GetScopeHostnames
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items desired.
        explode: true
        in: query
        name: page_request.first
        required: false
        schema:
          type: string
        style: form
      - description: The cursor value after which data will be returned.
        explode: true
        in: query
        name: page_request.after
        required: false
        schema:
          type: string
        style: form
      - description: SQL-style constraint filters.
        explode: true
        in: query
        name: page_request.filter
        required: false
        schema:
          type: string
        style: form
      - description: Sort the response by the given field.
        explode: true
        in: query
        name: page_request.sort_by
        required: false
        schema:
          type: string
        style: form
      - description: Whether or not to load hostnames from a CDN site's CDN scope
          or its WAF scope. When true, this call loads scope hostnames from a CDN
          site's scope instead of loading from a CDN site's WAF scope, if the site
          has WAF service.
        explode: true
        in: query
        name: disable_transparent_mode
        required: false
        schema:
          format: boolean
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnGetScopeHostnamesResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get all scope hostnames
      tags:
      - Configuration
    post:
      operationId: CreateScopeHostname
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cdnCreateScopeHostnameRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnCreateScopeHostnameResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Add a scope hostname
      tags:
      - Configuration
  /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/hostnames/{domain}:
    delete:
      operationId: DeleteScopeHostname
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          type: string
        style: simple
      - description: The hostname to remove from a scope
        explode: false
        in: path
        name: domain
        required: true
        schema:
          type: string
        style: simple
      - description: Whether or not to remove the hostname from a CDN site's CDN scope
          or its WAF scope. When true, this call removes the hostname from a CDN site's
          scope instead of loading from a CDN site's WAF scope, if the site has WAF
          service.
        explode: true
        in: query
        name: disable_transparent_mode
        required: false
        schema:
          format: boolean
          type: boolean
        style: form
      responses:
        "204":
          description: No content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Delete a scope hostname
      tags:
      - Configuration
  /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/origins:
    get:
      operationId: GetScopeOrigins
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items desired.
        explode: true
        in: query
        name: page_request.first
        required: false
        schema:
          type: string
        style: form
      - description: The cursor value after which data will be returned.
        explode: true
        in: query
        name: page_request.after
        required: false
        schema:
          type: string
        style: form
      - description: SQL-style constraint filters.
        explode: true
        in: query
        name: page_request.filter
        required: false
        schema:
          type: string
        style: form
      - description: Sort the response by the given field.
        explode: true
        in: query
        name: page_request.sort_by
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnGetScopeOriginsResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get all scope origins
      tags:
      - Configuration
    post:
      description: The origin is automatically created if necessary. When the request
        contains a priority which an origin already associated with the scope has
        set, the existing origin is disconnected. The priority of an origin already
        associated with a scope can be modified via this endpoint.
      operationId: ConnectScopeToOrigin
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cdnConnectScopeToOriginRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnConnectScopeToOriginResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Connect an origin to a scope
      tags:
      - Configuration
  /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/origins/{origin_id}:
    delete:
      operationId: DisconnectScopeFromOrigin
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          type: string
        style: simple
      - description: An origin ID
        explode: false
        in: path
        name: origin_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Delete a scope origin
      tags:
      - Configuration
  /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/rules:
    get:
      operationId: GetScopeRules
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items desired.
        explode: true
        in: query
        name: page_request.first
        required: false
        schema:
          type: string
        style: form
      - description: The cursor value after which data will be returned.
        explode: true
        in: query
        name: page_request.after
        required: false
        schema:
          type: string
        style: form
      - description: SQL-style constraint filters.
        explode: true
        in: query
        name: page_request.filter
        required: false
        schema:
          type: string
        style: form
      - description: Sort the response by the given field.
        explode: true
        in: query
        name: page_request.sort_by
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnGetScopeRulesResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get all EdgeRules
      tags:
      - EdgeRules
    post:
      operationId: CreateScopeRule
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cdnCreateScopeRuleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnCreateScopeRuleResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Create an EdgeRule
      tags:
      - EdgeRules
  /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/rules/{rule_id}:
    delete:
      operationId: DeleteScopeRule
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          type: string
        style: simple
      - description: An EdgeRule ID
        explode: false
        in: path
        name: rule_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Delete an EdgeRule
      tags:
      - EdgeRules
    get:
      operationId: GetScopeRule
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          type: string
        style: simple
      - description: An EdgeRule ID
        explode: false
        in: path
        name: rule_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnGetScopeRuleResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get an EdgeRule
      tags:
      - EdgeRules
  /cdn/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/rules/{rule_id}/configuration:
    get:
      operationId: GetScopeRuleConfiguration
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          type: string
        style: simple
      - description: An EdgeRule ID
        explode: false
        in: path
        name: rule_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnGetScopeRuleConfigurationResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get an EdgeRule's configuration
      tags:
      - EdgeRules
    patch:
      operationId: UpdateScopeRuleConfiguration
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          type: string
        style: simple
      - description: An EdgeRule ID
        explode: false
        in: path
        name: rule_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cdnUpdateScopeRuleConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnUpdateScopeRuleConfigurationResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Update an EdgeRule's configuration
      tags:
      - EdgeRules
  /cdn/v1/stacks/{stack_id}/sites/{site_id}/scripts:
    get:
      operationId: GetSiteScripts
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items desired.
        explode: true
        in: query
        name: page_request.first
        required: false
        schema:
          type: string
        style: form
      - description: The cursor value after which data will be returned.
        explode: true
        in: query
        name: page_request.after
        required: false
        schema:
          type: string
        style: form
      - description: SQL-style constraint filters.
        explode: true
        in: query
        name: page_request.filter
        required: false
        schema:
          type: string
        style: form
      - description: Sort the response by the given field.
        explode: true
        in: query
        name: page_request.sort_by
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnGetSiteScriptsResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get all serverless scripts
      tags:
      - Serverless Scripting
    post:
      operationId: CreateSiteScript
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cdnCreateSiteScriptRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnCreateSiteScriptResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Create a serverless script
      tags:
      - Serverless Scripting
  /cdn/v1/stacks/{stack_id}/sites/{site_id}/scripts/{script_id}:
    delete:
      operationId: DeleteSiteScript
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A serverless script ID
        explode: false
        in: path
        name: script_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Delete a serverless script
      tags:
      - Serverless Scripting
    get:
      operationId: GetSiteScript
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A serverless script ID
        explode: false
        in: path
        name: script_id
        required: true
        schema:
          type: string
        style: simple
      - description: The version of the serverless script to get
        explode: true
        in: query
        name: script_version
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnGetSiteScriptResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get a serverless script
      tags:
      - Serverless Scripting
    patch:
      operationId: UpdateSiteScript
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A serverless script ID
        explode: false
        in: path
        name: script_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cdnUpdateSiteScriptRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnUpdateSiteScriptResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Update a serverless script
      tags:
      - Serverless Scripting
  /cdn/v1/stacks/{stack_id}/sites/{site_id}/scripts/{script_id}/{script_version}:
    get:
      operationId: GetSiteScript2
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A serverless script ID
        explode: false
        in: path
        name: script_id
        required: true
        schema:
          type: string
        style: simple
      - description: The version of the serverless script to get
        explode: false
        in: path
        name: script_version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdnGetSiteScriptResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
          description: Default error structure.
      summary: Get a serverless script version
      tags:
      - Serverless Scripting
components:
  schemas:
    AuthACLAccessCodeEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - allow
      - deny
      type: string
    AuthACLClientIPSrcEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - socket
      - header
      type: string
    AuthGeoCodeEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - countryCode
      - region
      - subdivisionCodes
      - city
      - postalCode
      - continentCode
      - timeZone
      - dmaCode
      - areaCode
      type: string
    BandwidthRateLimitInitialBurstUnitsEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - byte
      - kilobyte
      type: string
    BandwidthRateLimitSustainedRateUnitsEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - kilobit
      - kilobyte
      type: string
    ContentDispositionByHeaderDefaultTypeEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - attachment
      - inline
      type: string
    CreateSiteRequestTypeEnum:
      default: CDN
      description: |-
        The CDN site's type

        A site's type determines how StackPath delivers content to incoming HTTP(S) requests.

         - CDN: The site is a CDN only site
         - WAF: The site is either a standalone WAF site or a WAF site with attached CDN service
         - API: The site is an API delivery site. API delivery sites are powered by both the WAF and CDN and have custom rulesets for each.
      enum:
      - CDN
      - WAF
      - API
      type: string
    GetMetricsResponseMetricSample:
      description: The data points associated with a series of metrics
      example:
        values:
        - 0.8008281904610115
        - 0.8008281904610115
      properties:
        values:
          description: An individual data point
          items:
            format: double
            type: number
          type: array
      type: object
    GetMetricsResponseMetricSeries:
      description: A series of analytics data suitable for a graph
      example:
        metrics:
        - metrics
        - metrics
        type: type
        key: key
        samples:
        - values:
          - 0.8008281904610115
          - 0.8008281904610115
        - values:
          - 0.8008281904610115
          - 0.8008281904610115
      properties:
        type:
          description: The type of data in the analytics set
          type: string
        key:
          description: A graphable key for the type of data in the analytics set
          type: string
        metrics:
          description: Descriptions of the CDN metrics' samples
          items:
            type: string
          type: array
        samples:
          description: The CDN metrics' data points
          items:
            $ref: '#/components/schemas/GetMetricsResponseMetricSample'
          type: array
      type: object
    OriginPullPolicyDefaultCacheBehaviorEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - bypass
      - ttl
      type: string
    OriginPullPolicyExpirePolicyEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - CACHE_CONTROL
      - INGEST
      - LAST_MODIFY
      - NEVER_EXPIRE
      - DO_NOT_CACHE
      type: string
    OriginPullPolicyNoCacheBehaviorEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - legacy
      - spec
      type: string
    OriginPullRedirectActionEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - follow
      - proxy
      type: string
    OriginPullResumeDownloadEtagValidationEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - DO_NOT_USE
      - OPTIONAL
      - REQUIRED
      type: string
    PurgeContentRequestItem:
      properties:
        url:
          description: The URL at which to delete content
          type: string
        recursive:
          description: Whether or not to recursively delete content from the CDN
          format: boolean
          type: boolean
        invalidateOnly:
          description: Whether or not to mark the asset as expired and re-validate
            instead of deleting
          format: boolean
          type: boolean
        purgeAllDynamic:
          description: |-
            Whether or not to purge dynamic versions of assets

            This is ignored if recursive is true.
          format: boolean
          type: boolean
        headers:
          description: A list of HTTP request headers used to construct a cache key
            to purge content by. These headers must be configured in the site configuration's
            _DynamicContent.headerFields_ property.
          items:
            type: string
          type: array
        purgeSelector:
          description: A key/value pair definition of content to purge from the CDN
          items:
            $ref: '#/components/schemas/PurgeContentRequestPurgeSelector'
          type: array
      type: object
    PurgeContentRequestPurgeSelector:
      description: A key/value pair definition of content to purge from the CDN
      properties:
        selectorType:
          $ref: '#/components/schemas/PurgeContentRequestPurgeSelectorType'
        selectorName:
          description: |-
            The name of the type of content to purge

            For example, the name of the HTTP response header. Names are case sensitive.
          type: string
        selectorValue:
          description: |-
            The value of the content to purge

            For example, the value of the HTTP response header. Values are case sensitive and may be wild-carded, but cannot match a "/".
          type: string
        selectorValueDelimiter:
          description: |-
            The delimiter to separate multiple values with

            Defaults to ",".
          type: string
      type: object
    PurgeContentRequestPurgeSelectorType:
      default: HEADER
      description: |-
        The kinds of content that can be purged from the CDN

        - HEADER: Purge content based on an HTTP response header
         - TAG: Purge content based on an X-TAG HTTP header value. Purging by tag can be useful when content on the origin is tagged.
      enum:
      - HEADER
      - TAG
      type: string
    ScanOriginResponseOriginScanSSLDetails:
      description: SSL details in an origin scan response
      example:
        valid: true
        error: error
      properties:
        valid:
          description: Whether or not the scanned domain has a valid SSL certificate
          format: boolean
          type: boolean
        error:
          description: Errors encountered processing HTTPS requests to the scanned
            domain
          type: string
      type: object
    SiteTypeValue:
      default: UNKNOWN
      description: |-
        A CDN site's type

        A site's type determines how StackPath delivers content to incoming HTTP(S) requests.

         - UNKNOWN: StackPath is unable to determine a site's type
         - CDN: A site is CDN only site
         - WAF: A site is either a standalone WAF site or a WAF site with attached CDN service
         - API: A site is an API delivery site. API delivery sites are powered by both the WAF and CDN and have custom rulesets for each.
      enum:
      - UNKNOWN
      - CDN
      - WAF
      - API
      type: string
    apiStatus:
      properties:
        code:
          format: int32
          type: integer
        details:
          items:
            $ref: '#/components/schemas/apiStatusDetail'
          type: array
        message:
          type: string
      type: object
    apiStatusDetail:
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          type: string
      required:
      - '@type'
      type: object
    cdnCertificate:
      description: An SSL certificate
      example:
        commonName: commonName
        updateDate: 2000-01-23T04:56:07.000+00:00
        caBundle: caBundle
        trusted: true
        subjectAlternativeNames:
        - subjectAlternativeNames
        - subjectAlternativeNames
        providerManaged: true
        fingerprint: fingerprint
        id: id
        issuer: issuer
        expirationDate: 2000-01-23T04:56:07.000+00:00
        createDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: A certificate's unique ID
          type: string
        fingerprint:
          description: A unique hash of a certificate's contents
          type: string
        commonName:
          description: A certificate's common name, or the primary domain name the
            certificate is used for
          type: string
        issuer:
          description: The name of the certificate's issuing certificate authority
          type: string
        caBundle:
          description: 'A PEM PKCS #7 formatted certificate authority bundle'
          type: string
        trusted:
          description: Whether or not the certificate's authority is trusted by a
            web browser
          format: boolean
          type: boolean
        expirationDate:
          description: The date an SSL certificate will expire
          format: date-time
          type: string
        createDate:
          description: The date an SSL certificate was created
          format: date-time
          type: string
        updateDate:
          description: The date an SSL certificate was last updated
          format: date-time
          type: string
        subjectAlternativeNames:
          description: |-
            A list of Subject Alternative Names in the certificate

            Certificates for multiple domains define their domains in certificate's SAN list.
          items:
            type: string
          type: array
        status:
          $ref: '#/components/schemas/cdnCertificateStatus'
        providerManaged:
          description: Whether a certificate is managed by StackPath or the end user
          format: boolean
          type: boolean
      type: object
    cdnCertificateStatus:
      default: UNKNOWN
      description: |-
        A StackPath-provided certificate's status

        - UNKNOWN: StackPath is unable to determine the certificate's status. This is the default status for end-user provided certificates.
         - PENDING: The certificate is provisioning
         - EXPIRED: The certificate has expired
         - FAILED: The certificate failed to provision
         - PENDING_VERIFICATION: The certificate is pending domain verification by the end user
         - ACTIVE: The certificate is valid and is in use by one or more hosts
         - INACTIVE: The certificate is valid but is not in use by any hosts
      enum:
      - UNKNOWN
      - PENDING
      - EXPIRED
      - FAILED
      - PENDING_VERIFICATION
      - ACTIVE
      - INACTIVE
      type: string
    cdnCertificateVerificationMethod:
      default: DNS
      description: |-
        The Certificate Verification Method

        Verification method used to validate a requested certificate on a site

         - DNS: Verify a certificate using DNS records
         - HTTP: Verify a certificate by using HTTP validation. This will require all hosts in the certificate point to the site's stackpathcdn.com delivery domain or IP address
      enum:
      - DNS
      - HTTP
      type: string
    cdnConnectScopeToOriginRequest:
      properties:
        origin:
          $ref: '#/components/schemas/cdnConnectScopeToOriginRequestOrigin'
        priority:
          description: |-
            The origin's priority to the scope

            If a CDN scope is powered by more than one origin, then the one with the lower priority number takes higher precedence.
          format: int32
          type: integer
        originId:
          description: |-
            The ID of an existing origin to associate with a scope

            This is useful for connecting to a shared origin.
          type: string
      type: object
    cdnConnectScopeToOriginRequestOrigin:
      description: A new origin
      properties:
        path:
          description: |-
            The origin's path

            Paths default to "/"
          type: string
        hostname:
          description: The origin's hostname or IP address
          type: string
        port:
          description: The HTTP port to connect to the origin
          format: int32
          type: integer
        securePort:
          description: The HTTPS port to connect to the origin
          format: int32
          type: integer
      type: object
    cdnConnectScopeToOriginResponse:
      description: The response from a request to associate an origin with a CDN site
        scope
      example:
        scopeOrigin:
          origin:
            securePort: 1
            path: path
            dedicated: true
            hostname: hostname
            port: 6
            siteId: siteId
            id: id
          priority: 0
      properties:
        scopeOrigin:
          $ref: '#/components/schemas/cdnScopeOrigin'
      type: object
    cdnConnectSiteToCertificateResponse:
      description: The response to a request to associate an SSL certificate with
        a CDN site
      example:
        siteCertificate:
          valid: true
          certificate:
            commonName: commonName
            updateDate: 2000-01-23T04:56:07.000+00:00
            caBundle: caBundle
            trusted: true
            subjectAlternativeNames:
            - subjectAlternativeNames
            - subjectAlternativeNames
            providerManaged: true
            fingerprint: fingerprint
            id: id
            issuer: issuer
            expirationDate: 2000-01-23T04:56:07.000+00:00
            createDate: 2000-01-23T04:56:07.000+00:00
      properties:
        siteCertificate:
          $ref: '#/components/schemas/cdnSiteCertificate'
      type: object
    cdnCreateCertificateRequest:
      properties:
        certificate:
          description: 'A PEM PKCS #7 formatted SSL certificate'
          type: string
        key:
          description: |-
            A PEM PKCS #7 formatted private key

            Private keys are sent directly to the edge nodes and are not stored elsewhere on StackPath's systems.
          type: string
        caBundle:
          description: 'A PEM PKCS #7 formatted certificate authority bundle'
          type: string
      type: object
    cdnCreateCertificateResponse:
      description: The response from a request to add an SSL certificate to a stack
      example:
        certificate:
          commonName: commonName
          updateDate: 2000-01-23T04:56:07.000+00:00
          caBundle: caBundle
          trusted: true
          subjectAlternativeNames:
          - subjectAlternativeNames
          - subjectAlternativeNames
          providerManaged: true
          fingerprint: fingerprint
          id: id
          issuer: issuer
          expirationDate: 2000-01-23T04:56:07.000+00:00
          createDate: 2000-01-23T04:56:07.000+00:00
      properties:
        certificate:
          $ref: '#/components/schemas/cdnCertificate'
      type: object
    cdnCreateScopeHostnameRequest:
      properties:
        domain:
          description: The hostname to add to a scope
          type: string
        disableTransparentMode:
          description: |-
            Whether or not to add the hostname to a CDN site's CDN scope or its WAF scope

            When true, this call adds the hostname to a CDN site's scope instead of loading from a CDN site's WAF scope, if the site has WAF service.
          format: boolean
          type: boolean
      type: object
    cdnCreateScopeHostnameResponse:
      description: The response from a request to add a hostname to a CDN site scope
      example:
        hostname:
          domain: domain
      properties:
        hostname:
          $ref: '#/components/schemas/cdnHostname'
      type: object
    cdnCreateScopeRequest:
      properties:
        path:
          description: The HTTP request path the scope should respond to
          type: string
        platform:
          description: The StackPath billing platform to create the scope on
          type: string
      type: object
    cdnCreateScopeResponse:
      description: The response from a request to create a CDN site scope
      example:
        scope:
          path: path
          id: id
          platform: platform
      properties:
        scope:
          $ref: '#/components/schemas/cdnScope'
      type: object
    cdnCreateScopeRuleRequest:
      properties:
        name:
          description: The EdgeRule's name
          type: string
        slug:
          description: A programmatic name for the EdgeRule
          type: string
        configuration:
          $ref: '#/components/schemas/custconfConfiguration'
      type: object
    cdnCreateScopeRuleResponse:
      description: The response from a request to create a new EdgeRule
      example:
        configuration:
          responseHeader:
            http: http
            enableETag: true
            id: id
            enabled: true
          originPullCacheExtension:
            expiredCacheExtension: 3
            originUnreachableCacheExtension: 2
            id: id
            enabled: true
          accessLogsConfig:
            extraLogFields: extraLogFields
            id: id
            enabled: true
          fileSegmentation:
            id: id
            enabled: true
          awsSignedOriginPullV4:
          - accessKeyId: accessKeyId
            expireTimeSeconds: 1.4894159098541704
            awsRegion: awsRegion
            methodFilter: methodFilter
            signedHeaders: signedHeaders
            bucketIdentifier: bucketIdentifier
            enabled: true
            secretAccessKey: secretAccessKey
            pathFilter: pathFilter
            headerFilter: headerFilter
            id: id
            awsService: awsService
          - accessKeyId: accessKeyId
            expireTimeSeconds: 1.4894159098541704
            awsRegion: awsRegion
            methodFilter: methodFilter
            signedHeaders: signedHeaders
            bucketIdentifier: bucketIdentifier
            enabled: true
            secretAccessKey: secretAccessKey
            pathFilter: pathFilter
            headerFilter: headerFilter
            id: id
            awsService: awsService
          authUrlSignHmacTlu:
          - pathFilter: pathFilter
            expireParameterName: expireParameterName
            digestParameterName: digestParameterName
            keyIdParameterName: keyIdParameterName
            algorithmIdParameterName: algorithmIdParameterName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            symmetricKeyIdMap:
              key: symmetricKeyIdMap
            enabled: true
            algorithmIdMap: {}
          - pathFilter: pathFilter
            expireParameterName: expireParameterName
            digestParameterName: digestParameterName
            keyIdParameterName: keyIdParameterName
            algorithmIdParameterName: algorithmIdParameterName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            symmetricKeyIdMap:
              key: symmetricKeyIdMap
            enabled: true
            algorithmIdMap: {}
          originPullResumeDownload:
          - pathFilter: pathFilter
            maximumAttempts: 1.0246457001441578
            minimumBodyBytesConsumed: minimumBodyBytesConsumed
            requireOriginRangeSupport: true
            headerFilter: headerFilter
            id: id
            enabled: true
            originalStatusCodeMatch: originalStatusCodeMatch
          - pathFilter: pathFilter
            maximumAttempts: 1.0246457001441578
            minimumBodyBytesConsumed: minimumBodyBytesConsumed
            requireOriginRangeSupport: true
            headerFilter: headerFilter
            id: id
            enabled: true
            originalStatusCodeMatch: originalStatusCodeMatch
          gzipOriginPull:
            id: id
            enabled: true
          awsSignedS3PostV4:
          - accessKeyId: accessKeyId
            expireTimeSeconds: 6.84685269835264
            awsRegion: awsRegion
            methodFilter: methodFilter
            signedHeaders: signedHeaders
            bucketIdentifier: bucketIdentifier
            enabled: true
            secretAccessKey: secretAccessKey
            pathFilter: pathFilter
            headerFilter: headerFilter
            id: id
            awsService: awsService
          - accessKeyId: accessKeyId
            expireTimeSeconds: 6.84685269835264
            awsRegion: awsRegion
            methodFilter: methodFilter
            signedHeaders: signedHeaders
            bucketIdentifier: bucketIdentifier
            enabled: true
            secretAccessKey: secretAccessKey
            pathFilter: pathFilter
            headerFilter: headerFilter
            id: id
            awsService: awsService
          bandwidthRateLimit:
            pathFilter: pathFilter
            sustainedRateName: sustainedRateName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            initialBurstName: initialBurstName
            enabled: true
          vHost:
          - domain: domain
            id: id
            enabled: true
          - domain: domain
            id: id
            enabled: true
          originRequestModification:
          - pathFilter: pathFilter
            addHeaders: addHeaders
            cookieFilter: cookieFilter
            headerPattern: headerPattern
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            urlPattern: urlPattern
            flowControl: flowControl
            urlRewrite: urlRewrite
            enabled: true
          - pathFilter: pathFilter
            addHeaders: addHeaders
            cookieFilter: cookieFilter
            headerPattern: headerPattern
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            urlPattern: urlPattern
            flowControl: flowControl
            urlRewrite: urlRewrite
            enabled: true
          customHeader:
            xForwardedForOrigin: xForwardedForOrigin
            xForwardedForAuth: xForwardedForAuth
            id: id
            enabled: true
          originPull:
            noQSParams: true
            id: id
            retryMethods: retryMethods
            enabled: true
          robotsTxt:
          - cacheControlHeader: cacheControlHeader
            pathFilter: pathFilter
            file: file
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - cacheControlHeader: cacheControlHeader
            pathFilter: pathFilter
            file: file
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          originPullLogsConfig:
            extraLogFields: extraLogFields
            id: id
            enabled: true
          cacheControl:
          - statusCodeMatch: statusCodeMatch
            maxAge: 5
            id: id
            override: override
            mustRevalidate: true
            synchronizeMaxAge: true
            enabled: true
          - statusCodeMatch: statusCodeMatch
            maxAge: 5
            id: id
            override: override
            mustRevalidate: true
            synchronizeMaxAge: true
            enabled: true
          originPullHost:
          - pathFilter: pathFilter
            password: password
            originUrl: originUrl
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            userName: userName
          - pathFilter: pathFilter
            password: password
            originUrl: originUrl
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            userName: userName
          authACL:
          - header: header
            id: id
            ipList: ipList
            enabled: true
          - header: header
            id: id
            ipList: ipList
            enabled: true
          originPullLogs:
            id: id
            enabled: true
          redirectExceptions:
            redirectAgentCode: redirectAgentCode
            id: id
            enabled: true
          compression:
            level: level
            mime: mime
            gzip: gzip
            id: id
            enabled: true
          authUrlAsymmetricSignTlu:
          - pathFilter: pathFilter
            expireParameterName: expireParameterName
            publicKeyIdMap:
              key: publicKeyIdMap
            digestParameterName: digestParameterName
            keyIdParameterName: keyIdParameterName
            algorithmIdParameterName: algorithmIdParameterName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            algorithmIdMap: {}
          - pathFilter: pathFilter
            expireParameterName: expireParameterName
            publicKeyIdMap:
              key: publicKeyIdMap
            digestParameterName: digestParameterName
            keyIdParameterName: keyIdParameterName
            algorithmIdParameterName: algorithmIdParameterName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            algorithmIdMap: {}
          failSafeOriginPull:
            pathFilter: pathFilter
            statusCodeMatch: statusCodeMatch
            id: id
            enabled: true
          origin:
          - originPullHeaders: originPullHeaders
            host: host
            id: id
            originCacheHeaders: originCacheHeaders
          - originPullHeaders: originPullHeaders
            host: host
            id: id
            originCacheHeaders: originCacheHeaders
          authUrlSignIq:
          - pathFilter: pathFilter
            secretKey: secretKey
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            secretKey: secretKey
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          authUrlSign:
          - uriLengthField: uriLengthField
            tokenField: tokenField
            expiresField: expiresField
            methodFilter: methodFilter
            passPhraseField: passPhraseField
            enabled: true
            pathFilter: pathFilter
            userAgentField: userAgentField
            headerFilter: headerFilter
            id: id
            ipAddressField: ipAddressField
            ignoreFieldsAfterToken: true
            passPhrase: passPhrase
          - uriLengthField: uriLengthField
            tokenField: tokenField
            expiresField: expiresField
            methodFilter: methodFilter
            passPhraseField: passPhraseField
            enabled: true
            pathFilter: pathFilter
            userAgentField: userAgentField
            headerFilter: headerFilter
            id: id
            ipAddressField: ipAddressField
            ignoreFieldsAfterToken: true
            passPhrase: passPhrase
          originPullProtocol:
            enableSNI: true
            id: id
          clientResponseModification:
          - pathFilter: pathFilter
            addHeaders: addHeaders
            headerPattern: headerPattern
            statusCodeRewrite: 2.3021358869347655
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            addHeaders: addHeaders
            headerPattern: headerPattern
            statusCodeRewrite: 2.3021358869347655
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          dynamicContent:
          - pathFilter: pathFilter
            queryParams: queryParams
            methodFilter: methodFilter
            headerFields: headerFields
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            queryParams: queryParams
            methodFilter: methodFilter
            headerFields: headerFields
            headerFilter: headerFilter
            id: id
            enabled: true
          contentDispositionByHeader:
          - pathFilter: pathFilter
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            overrideOriginHeader: true
            headerFieldName: headerFieldName
            headerValueMatch: headerValueMatch
            enabled: true
          - pathFilter: pathFilter
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            overrideOriginHeader: true
            headerFieldName: headerFieldName
            headerValueMatch: headerValueMatch
            enabled: true
          clientRequestModification:
          - pathFilter: pathFilter
            addHeaders: addHeaders
            cookieFilter: cookieFilter
            headerPattern: headerPattern
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            urlPattern: urlPattern
            urlRewrite: urlRewrite
            enabled: true
          - pathFilter: pathFilter
            addHeaders: addHeaders
            cookieFilter: cookieFilter
            headerPattern: headerPattern
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            urlPattern: urlPattern
            urlRewrite: urlRewrite
            enabled: true
          contentDispositionByURL:
            dispositionTypeQSParam: dispositionTypeQSParam
            dispositionNameQSParam: dispositionNameQSParam
            id: id
            dispositionOverrideQSParam: dispositionOverrideQSParam
            overrideOriginHeader: true
            enabled: true
          accessLogs:
            id: id
            enabled: true
          staticHeader:
          - pathFilter: pathFilter
            originPull: originPull
            methodFilter: methodFilter
            http: http
            headerFilter: headerFilter
            id: id
            enabled: true
            clientRequest: clientRequest
          - pathFilter: pathFilter
            originPull: originPull
            methodFilter: methodFilter
            http: http
            headerFilter: headerFilter
            id: id
            enabled: true
            clientRequest: clientRequest
          farAheadRangeProxy:
            id: id
            thresholdBytes: 9.301444243932576
            enabled: true
          flvPseudoStreaming:
            jumpToByteInitialBytesParam: jumpToByteInitialBytesParam
            id: id
            jumpToByteStartOffsetParam: jumpToByteStartOffsetParam
            enabled: true
          originPersistentConnections:
            id: id
            enabled: true
          authHttpBasic:
            realm: realm
            id: id
            bindingPoint: bindingPoint
            ttl: 0.8008281904610115
            enabled: true
          httpMethods:
            passThru: passThru
            id: id
            enabled: true
          cacheKeyModification:
            normalizeKeyPathToLowerCase: true
            id: id
            enabled: true
          originResponseModification:
          - pathFilter: pathFilter
            addHeaders: addHeaders
            headerPattern: headerPattern
            statusCodeRewrite: 7.386281948385884
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            addHeaders: addHeaders
            headerPattern: headerPattern
            statusCodeRewrite: 7.386281948385884
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          http2Support:
            id: id
            enabled: true
          customMimeType:
          - pathFilter: pathFilter
            code: code
            extensionMap: extensionMap
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            code: code
            extensionMap: extensionMap
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          originPullPolicy:
          - updateHttpHeadersOn304Response: true
            honorMustRevalidate: true
            methodFilter: methodFilter
            honorSMaxAge: true
            httpHeaders: httpHeaders
            enabled: true
            pathFilter: pathFilter
            statusCodeMatch: statusCodeMatch
            forceBypassCache: true
            honorNoCache: true
            mustRevalidateToNoCache: true
            bypassCacheIdentifier: bypassCacheIdentifier
            honorPrivate: true
            expireSeconds: 4
            headerFilter: headerFilter
            id: id
            honorNoStore: true
            contentTypeFilter: contentTypeFilter
            maxAgeZeroToNoCache: true
          - updateHttpHeadersOn304Response: true
            honorMustRevalidate: true
            methodFilter: methodFilter
            honorSMaxAge: true
            httpHeaders: httpHeaders
            enabled: true
            pathFilter: pathFilter
            statusCodeMatch: statusCodeMatch
            forceBypassCache: true
            honorNoCache: true
            mustRevalidateToNoCache: true
            bypassCacheIdentifier: bypassCacheIdentifier
            honorPrivate: true
            expireSeconds: 4
            headerFilter: headerFilter
            id: id
            honorNoStore: true
            contentTypeFilter: contentTypeFilter
            maxAgeZeroToNoCache: true
          receiptLogsConfig:
            extraLogFields: extraLogFields
            id: id
            enabled: true
          authUrlSignAliCloudB:
          - pathFilter: pathFilter
            expirationExtension: 1.4658129805029452
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          - pathFilter: pathFilter
            expirationExtension: 1.4658129805029452
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          authUrlSignAliCloudA:
          - pathFilter: pathFilter
            expirationExtension: 6.027456183070403
            includeParamsBeforeToken: true
            tokenField: tokenField
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          - pathFilter: pathFilter
            expirationExtension: 6.027456183070403
            includeParamsBeforeToken: true
            tokenField: tokenField
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          dynamicCacheRule:
          - pathFilter: pathFilter
            headers: headers
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            statusCode: 7.061401241503109
          - pathFilter: pathFilter
            headers: headers
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            statusCode: 7.061401241503109
          bandWidthLimit:
            values: values
            rule: rule
            id: id
            enabled: true
          bypassCache:
          - pathFilter: pathFilter
            cookieFilter: cookieFilter
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            cookieFilter: cookieFilter
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          redirectMappings:
          - pathFilter: pathFilter
            code: 1.2315135367772556
            redirectURL: redirectURL
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            replacementToken: replacementToken
            enabled: true
          - pathFilter: pathFilter
            code: 1.2315135367772556
            redirectURL: redirectURL
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            replacementToken: replacementToken
            enabled: true
          timePseudoStreaming:
            jumpToTimeStartParam: jumpToTimeStartParam
            jumpToTimeEndParam: jumpToTimeEndParam
            id: id
            enabled: true
          queryStrParam:
            dispositionOverride: dispositionOverride
            dispositionType: dispositionType
            jumpToTimeEnd: jumpToTimeEnd
            rateLimitInitial: rateLimitInitial
            jumpToByteInitialBytes: jumpToByteInitialBytes
            jumpToByteStartOffset: jumpToByteStartOffset
            jumpToTimeStart: jumpToTimeStart
            id: id
            rateLimitSustained: rateLimitSustained
            enabled: true
            dispositionName: dispositionName
          authUrlSignAliCloudC:
          - pathFilter: pathFilter
            expirationExtension: 5.962133916683182
            expireField: expireField
            tokenField: tokenField
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          - pathFilter: pathFilter
            expirationExtension: 5.962133916683182
            expireField: expireField
            tokenField: tokenField
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          authGeo:
          - values: values
            id: id
            enabled: true
          - values: values
            id: id
            enabled: true
          authReferer:
            referer: referer
            id: id
            enabled: true
          customer:
            opLogFields: opLogFields
            accessLogFields: accessLogFields
            id: id
            receiptLogFields: receiptLogFields
        rule:
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          slug: slug
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        rule:
          $ref: '#/components/schemas/cdnScopeRule'
        configuration:
          $ref: '#/components/schemas/custconfConfiguration'
      type: object
    cdnCreateSiteRequestFeature:
      default: CDN
      description: |-
        The features available to the new CDN site

        Multiple products can served on a single CDN site. Features control how those products are managed on the StackPath backend.

         - CDN: The site will have CDN caching abilities
         - WAF: The site is protected by the StackPath Web Application Firewall
      enum:
      - CDN
      - WAF
      type: string
    cdnCreateSiteRequestOrigin:
      description: The new site's origin
      properties:
        path:
          description: |-
            The origin's path

            Paths default to "/"
          type: string
        hostname:
          description: The origin's hostname or IP address
          type: string
        port:
          description: The HTTP port to connect to the origin
          format: int32
          type: integer
        securePort:
          description: The HTTPS port to connect to the origin
          format: int32
          type: integer
      type: object
    cdnCreateSiteScriptRequest:
      properties:
        name:
          description: The serverless script's name
          type: string
        code:
          description: The base64 encoded serverless script's contents
          format: byte
          type: string
        paths:
          description: The HTTP request paths that are handled by the serverless script
          items:
            type: string
          type: array
      type: object
    cdnCreateSiteScriptResponse:
      description: The response from a request to create a new EdgeEngine script
      example:
        script:
          createdAt: 2000-01-23T04:56:07.000+00:00
          code: code
          paths:
          - paths
          - paths
          stackId: stackId
          name: name
          siteId: siteId
          id: id
          version: version
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        script:
          $ref: '#/components/schemas/cdnSiteScript'
      type: object
    cdnDnsRecord:
      description: |-
        A DNS record

        A dns record describes an individual piece of DNS functionality in a DNS zone.
      example:
        data: data
        name: name
        type: type
        class: class
        ttl: 0
      properties:
        name:
          description: |-
            The name of the network node to which a zone resource record pertains

            Use the value "@" to denote current root domain name.
          type: string
        type:
          description: |-
            A zone record's type

            Zone record types describe the zone record's behavior. For instance, a zone record's type can say that the record is a name to IP address value, a name alias, or which mail exchanger is responsible for the domain. See https://support.stackpath.com/hc/en-us/articles/360001085563-What-DNS-record-types-does-StackPath-support for more information.
          type: string
        class:
          description: |-
            A zone record's class code

            This is typically "IN" for Internet related resource records.
          type: string
        ttl:
          description: |-
            A zone record's time to live

            A record's TTL is the number of seconds that the record should be cached by DNS resolvers. Use lower TTL values if you expect zone records to change often. Use higher TTL values for records that won't change to prevent extra DNS lookups by clients.
          format: int32
          type: integer
        data:
          description: |-
            A zone record's value

            Expected data formats can vary depending on the zone record's type.
          type: string
      type: object
    cdnDnsVerificationDetails:
      description: DNS-based domain ownership verification details
      example:
        records:
        - data: data
          name: name
          type: type
          class: class
          ttl: 0
        - data: data
          name: name
          type: type
          class: class
          ttl: 0
        dnsRecords:
        - dnsRecords
        - dnsRecords
      properties:
        dnsRecords:
          description: A list of DNS records that will validate domain ownership
          items:
            type: string
          type: array
        records:
          description: A list of parsed dns records required for SSL verification
          items:
            $ref: '#/components/schemas/cdnDnsRecord'
          type: array
      type: object
    cdnGetCDNIPsResponse:
      description: The response from a request to retrieve IP addresses used by the
        StackPath edge network
      example:
        results:
        - results
        - results
      properties:
        results:
          description: The requested IP addresses
          items:
            type: string
          type: array
      type: object
    cdnGetCertificateResponse:
      description: The response from a request to retrieve an individual SSL certificate
        on a stack
      example:
        certificate:
          commonName: commonName
          updateDate: 2000-01-23T04:56:07.000+00:00
          caBundle: caBundle
          trusted: true
          subjectAlternativeNames:
          - subjectAlternativeNames
          - subjectAlternativeNames
          providerManaged: true
          fingerprint: fingerprint
          id: id
          issuer: issuer
          expirationDate: 2000-01-23T04:56:07.000+00:00
          createDate: 2000-01-23T04:56:07.000+00:00
      properties:
        certificate:
          $ref: '#/components/schemas/cdnCertificate'
      type: object
    cdnGetCertificateSitesResponse:
      description: The response from a request to retrieve CDN sites associated with
        an SSL certificate
      example:
        pageInfo:
          hasNextPage: true
          hasPreviousPage: true
          endCursor: endCursor
          totalCount: totalCount
          startCursor: startCursor
        results:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          features:
          - null
          - null
          stackId: stackId
          id: id
          label: label
          enabled: true
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          features:
          - null
          - null
          stackId: stackId
          id: id
          label: label
          enabled: true
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        pageInfo:
          $ref: '#/components/schemas/paginationPageInfo'
        results:
          description: The requested CDN sites
          items:
            $ref: '#/components/schemas/cdnSite'
          type: array
      type: object
    cdnGetCertificateVerificationDetailsResponse:
      description: The response from a request to retrieve an SSL certificate's manual
        verification details
      example:
        manualVerificationRequired: true
        verificationRequirements:
        - httpVerificationDetails:
            path: path
            body: body
            contentType: contentType
          dnsVerificationDetails:
            records:
            - data: data
              name: name
              type: type
              class: class
              ttl: 0
            - data: data
              name: name
              type: type
              class: class
              ttl: 0
            dnsRecords:
            - dnsRecords
            - dnsRecords
        - httpVerificationDetails:
            path: path
            body: body
            contentType: contentType
          dnsVerificationDetails:
            records:
            - data: data
              name: name
              type: type
              class: class
              ttl: 0
            - data: data
              name: name
              type: type
              class: class
              ttl: 0
            dnsRecords:
            - dnsRecords
            - dnsRecords
      properties:
        manualVerificationRequired:
          description: Whether or not the end user must provide their own certificate
            verification
          format: boolean
          type: boolean
        verificationRequirements:
          description: An SSL certificate's verification requirements
          items:
            $ref: '#/components/schemas/cdnVerificationRequirements'
          type: array
      type: object
    cdnGetCertificatesResponse:
      description: The response from a request to retrieve a stack's SSL certificates
      example:
        pageInfo:
          hasNextPage: true
          hasPreviousPage: true
          endCursor: endCursor
          totalCount: totalCount
          startCursor: startCursor
        results:
        - commonName: commonName
          updateDate: 2000-01-23T04:56:07.000+00:00
          caBundle: caBundle
          trusted: true
          subjectAlternativeNames:
          - subjectAlternativeNames
          - subjectAlternativeNames
          providerManaged: true
          fingerprint: fingerprint
          id: id
          issuer: issuer
          expirationDate: 2000-01-23T04:56:07.000+00:00
          createDate: 2000-01-23T04:56:07.000+00:00
        - commonName: commonName
          updateDate: 2000-01-23T04:56:07.000+00:00
          caBundle: caBundle
          trusted: true
          subjectAlternativeNames:
          - subjectAlternativeNames
          - subjectAlternativeNames
          providerManaged: true
          fingerprint: fingerprint
          id: id
          issuer: issuer
          expirationDate: 2000-01-23T04:56:07.000+00:00
          createDate: 2000-01-23T04:56:07.000+00:00
      properties:
        pageInfo:
          $ref: '#/components/schemas/paginationPageInfo'
        results:
          description: The requested SSL certificates
          items:
            $ref: '#/components/schemas/cdnCertificate'
          type: array
      type: object
    cdnGetClosestPopsResponse:
      description: The response from a request to scan a URL from the StackPath edge
        network
      example:
        result:
        - popCode: popCode
          downloadMs: 1.4658129
          totalMs: 2.302136
          sslMs: 5.637377
          connectMs: 0.8008282
          dnsMs: 6.0274563
          firstByteMs: 5.962134
        - popCode: popCode
          downloadMs: 1.4658129
          totalMs: 2.302136
          sslMs: 5.637377
          connectMs: 0.8008282
          dnsMs: 6.0274563
          firstByteMs: 5.962134
      properties:
        result:
          description: Results of the scan
          items:
            $ref: '#/components/schemas/cdnPopScanReport'
          type: array
      type: object
    cdnGetMetricsResponse:
      description: The response from a request to retrieve CDN metrics from a stack
      example:
        series:
        - metrics:
          - metrics
          - metrics
          type: type
          key: key
          samples:
          - values:
            - 0.8008281904610115
            - 0.8008281904610115
          - values:
            - 0.8008281904610115
            - 0.8008281904610115
        - metrics:
          - metrics
          - metrics
          type: type
          key: key
          samples:
          - values:
            - 0.8008281904610115
            - 0.8008281904610115
          - values:
            - 0.8008281904610115
            - 0.8008281904610115
      properties:
        series:
          description: The requested CDN metrics
          items:
            $ref: '#/components/schemas/GetMetricsResponseMetricSeries'
          type: array
      type: object
    cdnGetPopsResponse:
      description: The response from a request to retrieve the StackPath's points
        of presence
      example:
        pageInfo:
          hasNextPage: true
          hasPreviousPage: true
          endCursor: endCursor
          totalCount: totalCount
          startCursor: startCursor
        results:
        - code: code
          latitude: 0.8008282
          name: name
          longitude: 6.0274563
        - code: code
          latitude: 0.8008282
          name: name
          longitude: 6.0274563
      properties:
        pageInfo:
          $ref: '#/components/schemas/paginationPageInfo'
        results:
          description: The requested StackPath points of presence
          items:
            $ref: '#/components/schemas/cdnPop'
          type: array
      type: object
    cdnGetPurgeStatusResponse:
      description: The response from a request to retrieve the status of a purge request
      example:
        progress: 0.8008282
      properties:
        progress:
          description: The purge request's progress, ranging from 0.0 to 1.0
          format: float
          type: number
      type: object
    cdnGetScopeConfigurationResponse:
      description: The response from a request to retrieve a CDN site scope's configuration
      example:
        configuration:
          responseHeader:
            http: http
            enableETag: true
            id: id
            enabled: true
          originPullCacheExtension:
            expiredCacheExtension: 3
            originUnreachableCacheExtension: 2
            id: id
            enabled: true
          accessLogsConfig:
            extraLogFields: extraLogFields
            id: id
            enabled: true
          fileSegmentation:
            id: id
            enabled: true
          awsSignedOriginPullV4:
          - accessKeyId: accessKeyId
            expireTimeSeconds: 1.4894159098541704
            awsRegion: awsRegion
            methodFilter: methodFilter
            signedHeaders: signedHeaders
            bucketIdentifier: bucketIdentifier
            enabled: true
            secretAccessKey: secretAccessKey
            pathFilter: pathFilter
            headerFilter: headerFilter
            id: id
            awsService: awsService
          - accessKeyId: accessKeyId
            expireTimeSeconds: 1.4894159098541704
            awsRegion: awsRegion
            methodFilter: methodFilter
            signedHeaders: signedHeaders
            bucketIdentifier: bucketIdentifier
            enabled: true
            secretAccessKey: secretAccessKey
            pathFilter: pathFilter
            headerFilter: headerFilter
            id: id
            awsService: awsService
          authUrlSignHmacTlu:
          - pathFilter: pathFilter
            expireParameterName: expireParameterName
            digestParameterName: digestParameterName
            keyIdParameterName: keyIdParameterName
            algorithmIdParameterName: algorithmIdParameterName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            symmetricKeyIdMap:
              key: symmetricKeyIdMap
            enabled: true
            algorithmIdMap: {}
          - pathFilter: pathFilter
            expireParameterName: expireParameterName
            digestParameterName: digestParameterName
            keyIdParameterName: keyIdParameterName
            algorithmIdParameterName: algorithmIdParameterName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            symmetricKeyIdMap:
              key: symmetricKeyIdMap
            enabled: true
            algorithmIdMap: {}
          originPullResumeDownload:
          - pathFilter: pathFilter
            maximumAttempts: 1.0246457001441578
            minimumBodyBytesConsumed: minimumBodyBytesConsumed
            requireOriginRangeSupport: true
            headerFilter: headerFilter
            id: id
            enabled: true
            originalStatusCodeMatch: originalStatusCodeMatch
          - pathFilter: pathFilter
            maximumAttempts: 1.0246457001441578
            minimumBodyBytesConsumed: minimumBodyBytesConsumed
            requireOriginRangeSupport: true
            headerFilter: headerFilter
            id: id
            enabled: true
            originalStatusCodeMatch: originalStatusCodeMatch
          gzipOriginPull:
            id: id
            enabled: true
          awsSignedS3PostV4:
          - accessKeyId: accessKeyId
            expireTimeSeconds: 6.84685269835264
            awsRegion: awsRegion
            methodFilter: methodFilter
            signedHeaders: signedHeaders
            bucketIdentifier: bucketIdentifier
            enabled: true
            secretAccessKey: secretAccessKey
            pathFilter: pathFilter
            headerFilter: headerFilter
            id: id
            awsService: awsService
          - accessKeyId: accessKeyId
            expireTimeSeconds: 6.84685269835264
            awsRegion: awsRegion
            methodFilter: methodFilter
            signedHeaders: signedHeaders
            bucketIdentifier: bucketIdentifier
            enabled: true
            secretAccessKey: secretAccessKey
            pathFilter: pathFilter
            headerFilter: headerFilter
            id: id
            awsService: awsService
          bandwidthRateLimit:
            pathFilter: pathFilter
            sustainedRateName: sustainedRateName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            initialBurstName: initialBurstName
            enabled: true
          vHost:
          - domain: domain
            id: id
            enabled: true
          - domain: domain
            id: id
            enabled: true
          originRequestModification:
          - pathFilter: pathFilter
            addHeaders: addHeaders
            cookieFilter: cookieFilter
            headerPattern: headerPattern
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            urlPattern: urlPattern
            flowControl: flowControl
            urlRewrite: urlRewrite
            enabled: true
          - pathFilter: pathFilter
            addHeaders: addHeaders
            cookieFilter: cookieFilter
            headerPattern: headerPattern
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            urlPattern: urlPattern
            flowControl: flowControl
            urlRewrite: urlRewrite
            enabled: true
          customHeader:
            xForwardedForOrigin: xForwardedForOrigin
            xForwardedForAuth: xForwardedForAuth
            id: id
            enabled: true
          originPull:
            noQSParams: true
            id: id
            retryMethods: retryMethods
            enabled: true
          robotsTxt:
          - cacheControlHeader: cacheControlHeader
            pathFilter: pathFilter
            file: file
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - cacheControlHeader: cacheControlHeader
            pathFilter: pathFilter
            file: file
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          originPullLogsConfig:
            extraLogFields: extraLogFields
            id: id
            enabled: true
          cacheControl:
          - statusCodeMatch: statusCodeMatch
            maxAge: 5
            id: id
            override: override
            mustRevalidate: true
            synchronizeMaxAge: true
            enabled: true
          - statusCodeMatch: statusCodeMatch
            maxAge: 5
            id: id
            override: override
            mustRevalidate: true
            synchronizeMaxAge: true
            enabled: true
          originPullHost:
          - pathFilter: pathFilter
            password: password
            originUrl: originUrl
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            userName: userName
          - pathFilter: pathFilter
            password: password
            originUrl: originUrl
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            userName: userName
          authACL:
          - header: header
            id: id
            ipList: ipList
            enabled: true
          - header: header
            id: id
            ipList: ipList
            enabled: true
          originPullLogs:
            id: id
            enabled: true
          redirectExceptions:
            redirectAgentCode: redirectAgentCode
            id: id
            enabled: true
          compression:
            level: level
            mime: mime
            gzip: gzip
            id: id
            enabled: true
          authUrlAsymmetricSignTlu:
          - pathFilter: pathFilter
            expireParameterName: expireParameterName
            publicKeyIdMap:
              key: publicKeyIdMap
            digestParameterName: digestParameterName
            keyIdParameterName: keyIdParameterName
            algorithmIdParameterName: algorithmIdParameterName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            algorithmIdMap: {}
          - pathFilter: pathFilter
            expireParameterName: expireParameterName
            publicKeyIdMap:
              key: publicKeyIdMap
            digestParameterName: digestParameterName
            keyIdParameterName: keyIdParameterName
            algorithmIdParameterName: algorithmIdParameterName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            algorithmIdMap: {}
          failSafeOriginPull:
            pathFilter: pathFilter
            statusCodeMatch: statusCodeMatch
            id: id
            enabled: true
          origin:
          - originPullHeaders: originPullHeaders
            host: host
            id: id
            originCacheHeaders: originCacheHeaders
          - originPullHeaders: originPullHeaders
            host: host
            id: id
            originCacheHeaders: originCacheHeaders
          authUrlSignIq:
          - pathFilter: pathFilter
            secretKey: secretKey
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            secretKey: secretKey
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          authUrlSign:
          - uriLengthField: uriLengthField
            tokenField: tokenField
            expiresField: expiresField
            methodFilter: methodFilter
            passPhraseField: passPhraseField
            enabled: true
            pathFilter: pathFilter
            userAgentField: userAgentField
            headerFilter: headerFilter
            id: id
            ipAddressField: ipAddressField
            ignoreFieldsAfterToken: true
            passPhrase: passPhrase
          - uriLengthField: uriLengthField
            tokenField: tokenField
            expiresField: expiresField
            methodFilter: methodFilter
            passPhraseField: passPhraseField
            enabled: true
            pathFilter: pathFilter
            userAgentField: userAgentField
            headerFilter: headerFilter
            id: id
            ipAddressField: ipAddressField
            ignoreFieldsAfterToken: true
            passPhrase: passPhrase
          originPullProtocol:
            enableSNI: true
            id: id
          clientResponseModification:
          - pathFilter: pathFilter
            addHeaders: addHeaders
            headerPattern: headerPattern
            statusCodeRewrite: 2.3021358869347655
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            addHeaders: addHeaders
            headerPattern: headerPattern
            statusCodeRewrite: 2.3021358869347655
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          dynamicContent:
          - pathFilter: pathFilter
            queryParams: queryParams
            methodFilter: methodFilter
            headerFields: headerFields
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            queryParams: queryParams
            methodFilter: methodFilter
            headerFields: headerFields
            headerFilter: headerFilter
            id: id
            enabled: true
          contentDispositionByHeader:
          - pathFilter: pathFilter
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            overrideOriginHeader: true
            headerFieldName: headerFieldName
            headerValueMatch: headerValueMatch
            enabled: true
          - pathFilter: pathFilter
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            overrideOriginHeader: true
            headerFieldName: headerFieldName
            headerValueMatch: headerValueMatch
            enabled: true
          clientRequestModification:
          - pathFilter: pathFilter
            addHeaders: addHeaders
            cookieFilter: cookieFilter
            headerPattern: headerPattern
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            urlPattern: urlPattern
            urlRewrite: urlRewrite
            enabled: true
          - pathFilter: pathFilter
            addHeaders: addHeaders
            cookieFilter: cookieFilter
            headerPattern: headerPattern
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            urlPattern: urlPattern
            urlRewrite: urlRewrite
            enabled: true
          contentDispositionByURL:
            dispositionTypeQSParam: dispositionTypeQSParam
            dispositionNameQSParam: dispositionNameQSParam
            id: id
            dispositionOverrideQSParam: dispositionOverrideQSParam
            overrideOriginHeader: true
            enabled: true
          accessLogs:
            id: id
            enabled: true
          staticHeader:
          - pathFilter: pathFilter
            originPull: originPull
            methodFilter: methodFilter
            http: http
            headerFilter: headerFilter
            id: id
            enabled: true
            clientRequest: clientRequest
          - pathFilter: pathFilter
            originPull: originPull
            methodFilter: methodFilter
            http: http
            headerFilter: headerFilter
            id: id
            enabled: true
            clientRequest: clientRequest
          farAheadRangeProxy:
            id: id
            thresholdBytes: 9.301444243932576
            enabled: true
          flvPseudoStreaming:
            jumpToByteInitialBytesParam: jumpToByteInitialBytesParam
            id: id
            jumpToByteStartOffsetParam: jumpToByteStartOffsetParam
            enabled: true
          originPersistentConnections:
            id: id
            enabled: true
          authHttpBasic:
            realm: realm
            id: id
            bindingPoint: bindingPoint
            ttl: 0.8008281904610115
            enabled: true
          httpMethods:
            passThru: passThru
            id: id
            enabled: true
          cacheKeyModification:
            normalizeKeyPathToLowerCase: true
            id: id
            enabled: true
          originResponseModification:
          - pathFilter: pathFilter
            addHeaders: addHeaders
            headerPattern: headerPattern
            statusCodeRewrite: 7.386281948385884
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            addHeaders: addHeaders
            headerPattern: headerPattern
            statusCodeRewrite: 7.386281948385884
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          http2Support:
            id: id
            enabled: true
          customMimeType:
          - pathFilter: pathFilter
            code: code
            extensionMap: extensionMap
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            code: code
            extensionMap: extensionMap
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          originPullPolicy:
          - updateHttpHeadersOn304Response: true
            honorMustRevalidate: true
            methodFilter: methodFilter
            honorSMaxAge: true
            httpHeaders: httpHeaders
            enabled: true
            pathFilter: pathFilter
            statusCodeMatch: statusCodeMatch
            forceBypassCache: true
            honorNoCache: true
            mustRevalidateToNoCache: true
            bypassCacheIdentifier: bypassCacheIdentifier
            honorPrivate: true
            expireSeconds: 4
            headerFilter: headerFilter
            id: id
            honorNoStore: true
            contentTypeFilter: contentTypeFilter
            maxAgeZeroToNoCache: true
          - updateHttpHeadersOn304Response: true
            honorMustRevalidate: true
            methodFilter: methodFilter
            honorSMaxAge: true
            httpHeaders: httpHeaders
            enabled: true
            pathFilter: pathFilter
            statusCodeMatch: statusCodeMatch
            forceBypassCache: true
            honorNoCache: true
            mustRevalidateToNoCache: true
            bypassCacheIdentifier: bypassCacheIdentifier
            honorPrivate: true
            expireSeconds: 4
            headerFilter: headerFilter
            id: id
            honorNoStore: true
            contentTypeFilter: contentTypeFilter
            maxAgeZeroToNoCache: true
          receiptLogsConfig:
            extraLogFields: extraLogFields
            id: id
            enabled: true
          authUrlSignAliCloudB:
          - pathFilter: pathFilter
            expirationExtension: 1.4658129805029452
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          - pathFilter: pathFilter
            expirationExtension: 1.4658129805029452
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          authUrlSignAliCloudA:
          - pathFilter: pathFilter
            expirationExtension: 6.027456183070403
            includeParamsBeforeToken: true
            tokenField: tokenField
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          - pathFilter: pathFilter
            expirationExtension: 6.027456183070403
            includeParamsBeforeToken: true
            tokenField: tokenField
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          dynamicCacheRule:
          - pathFilter: pathFilter
            headers: headers
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            statusCode: 7.061401241503109
          - pathFilter: pathFilter
            headers: headers
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            statusCode: 7.061401241503109
          bandWidthLimit:
            values: values
            rule: rule
            id: id
            enabled: true
          bypassCache:
          - pathFilter: pathFilter
            cookieFilter: cookieFilter
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            cookieFilter: cookieFilter
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          redirectMappings:
          - pathFilter: pathFilter
            code: 1.2315135367772556
            redirectURL: redirectURL
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            replacementToken: replacementToken
            enabled: true
          - pathFilter: pathFilter
            code: 1.2315135367772556
            redirectURL: redirectURL
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            replacementToken: replacementToken
            enabled: true
          timePseudoStreaming:
            jumpToTimeStartParam: jumpToTimeStartParam
            jumpToTimeEndParam: jumpToTimeEndParam
            id: id
            enabled: true
          queryStrParam:
            dispositionOverride: dispositionOverride
            dispositionType: dispositionType
            jumpToTimeEnd: jumpToTimeEnd
            rateLimitInitial: rateLimitInitial
            jumpToByteInitialBytes: jumpToByteInitialBytes
            jumpToByteStartOffset: jumpToByteStartOffset
            jumpToTimeStart: jumpToTimeStart
            id: id
            rateLimitSustained: rateLimitSustained
            enabled: true
            dispositionName: dispositionName
          authUrlSignAliCloudC:
          - pathFilter: pathFilter
            expirationExtension: 5.962133916683182
            expireField: expireField
            tokenField: tokenField
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          - pathFilter: pathFilter
            expirationExtension: 5.962133916683182
            expireField: expireField
            tokenField: tokenField
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          authGeo:
          - values: values
            id: id
            enabled: true
          - values: values
            id: id
            enabled: true
          authReferer:
            referer: referer
            id: id
            enabled: true
          customer:
            opLogFields: opLogFields
            accessLogFields: accessLogFields
            id: id
            receiptLogFields: receiptLogFields
      properties:
        configuration:
          $ref: '#/components/schemas/custconfConfiguration'
      type: object
    cdnGetScopeHostnamesResponse:
      description: The response from a request to retrieve a CDN site scope's associated
        hostnames
      example:
        pageInfo:
          hasNextPage: true
          hasPreviousPage: true
          endCursor: endCursor
          totalCount: totalCount
          startCursor: startCursor
        results:
        - domain: domain
        - domain: domain
      properties:
        pageInfo:
          $ref: '#/components/schemas/paginationPageInfo'
        results:
          description: The requested scope hostnames
          items:
            $ref: '#/components/schemas/cdnHostname'
          type: array
      type: object
    cdnGetScopeOriginsResponse:
      description: The response from a request to retrieve a CDN site scope's origins
      example:
        pageInfo:
          hasNextPage: true
          hasPreviousPage: true
          endCursor: endCursor
          totalCount: totalCount
          startCursor: startCursor
        results:
        - origin:
            securePort: 1
            path: path
            dedicated: true
            hostname: hostname
            port: 6
            siteId: siteId
            id: id
          priority: 0
        - origin:
            securePort: 1
            path: path
            dedicated: true
            hostname: hostname
            port: 6
            siteId: siteId
            id: id
          priority: 0
      properties:
        pageInfo:
          $ref: '#/components/schemas/paginationPageInfo'
        results:
          description: The requested scope's origins
          items:
            $ref: '#/components/schemas/cdnScopeOrigin'
          type: array
      type: object
    cdnGetScopeRuleConfigurationResponse:
      description: The response from a request to retrieve an EdgeRule's configuration
      example:
        configuration:
          responseHeader:
            http: http
            enableETag: true
            id: id
            enabled: true
          originPullCacheExtension:
            expiredCacheExtension: 3
            originUnreachableCacheExtension: 2
            id: id
            enabled: true
          accessLogsConfig:
            extraLogFields: extraLogFields
            id: id
            enabled: true
          fileSegmentation:
            id: id
            enabled: true
          awsSignedOriginPullV4:
          - accessKeyId: accessKeyId
            expireTimeSeconds: 1.4894159098541704
            awsRegion: awsRegion
            methodFilter: methodFilter
            signedHeaders: signedHeaders
            bucketIdentifier: bucketIdentifier
            enabled: true
            secretAccessKey: secretAccessKey
            pathFilter: pathFilter
            headerFilter: headerFilter
            id: id
            awsService: awsService
          - accessKeyId: accessKeyId
            expireTimeSeconds: 1.4894159098541704
            awsRegion: awsRegion
            methodFilter: methodFilter
            signedHeaders: signedHeaders
            bucketIdentifier: bucketIdentifier
            enabled: true
            secretAccessKey: secretAccessKey
            pathFilter: pathFilter
            headerFilter: headerFilter
            id: id
            awsService: awsService
          authUrlSignHmacTlu:
          - pathFilter: pathFilter
            expireParameterName: expireParameterName
            digestParameterName: digestParameterName
            keyIdParameterName: keyIdParameterName
            algorithmIdParameterName: algorithmIdParameterName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            symmetricKeyIdMap:
              key: symmetricKeyIdMap
            enabled: true
            algorithmIdMap: {}
          - pathFilter: pathFilter
            expireParameterName: expireParameterName
            digestParameterName: digestParameterName
            keyIdParameterName: keyIdParameterName
            algorithmIdParameterName: algorithmIdParameterName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            symmetricKeyIdMap:
              key: symmetricKeyIdMap
            enabled: true
            algorithmIdMap: {}
          originPullResumeDownload:
          - pathFilter: pathFilter
            maximumAttempts: 1.0246457001441578
            minimumBodyBytesConsumed: minimumBodyBytesConsumed
            requireOriginRangeSupport: true
            headerFilter: headerFilter
            id: id
            enabled: true
            originalStatusCodeMatch: originalStatusCodeMatch
          - pathFilter: pathFilter
            maximumAttempts: 1.0246457001441578
            minimumBodyBytesConsumed: minimumBodyBytesConsumed
            requireOriginRangeSupport: true
            headerFilter: headerFilter
            id: id
            enabled: true
            originalStatusCodeMatch: originalStatusCodeMatch
          gzipOriginPull:
            id: id
            enabled: true
          awsSignedS3PostV4:
          - accessKeyId: accessKeyId
            expireTimeSeconds: 6.84685269835264
            awsRegion: awsRegion
            methodFilter: methodFilter
            signedHeaders: signedHeaders
            bucketIdentifier: bucketIdentifier
            enabled: true
            secretAccessKey: secretAccessKey
            pathFilter: pathFilter
            headerFilter: headerFilter
            id: id
            awsService: awsService
          - accessKeyId: accessKeyId
            expireTimeSeconds: 6.84685269835264
            awsRegion: awsRegion
            methodFilter: methodFilter
            signedHeaders: signedHeaders
            bucketIdentifier: bucketIdentifier
            enabled: true
            secretAccessKey: secretAccessKey
            pathFilter: pathFilter
            headerFilter: headerFilter
            id: id
            awsService: awsService
          bandwidthRateLimit:
            pathFilter: pathFilter
            sustainedRateName: sustainedRateName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            initialBurstName: initialBurstName
            enabled: true
          vHost:
          - domain: domain
            id: id
            enabled: true
          - domain: domain
            id: id
            enabled: true
          originRequestModification:
          - pathFilter: pathFilter
            addHeaders: addHeaders
            cookieFilter: cookieFilter
            headerPattern: headerPattern
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            urlPattern: urlPattern
            flowControl: flowControl
            urlRewrite: urlRewrite
            enabled: true
          - pathFilter: pathFilter
            addHeaders: addHeaders
            cookieFilter: cookieFilter
            headerPattern: headerPattern
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            urlPattern: urlPattern
            flowControl: flowControl
            urlRewrite: urlRewrite
            enabled: true
          customHeader:
            xForwardedForOrigin: xForwardedForOrigin
            xForwardedForAuth: xForwardedForAuth
            id: id
            enabled: true
          originPull:
            noQSParams: true
            id: id
            retryMethods: retryMethods
            enabled: true
          robotsTxt:
          - cacheControlHeader: cacheControlHeader
            pathFilter: pathFilter
            file: file
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - cacheControlHeader: cacheControlHeader
            pathFilter: pathFilter
            file: file
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          originPullLogsConfig:
            extraLogFields: extraLogFields
            id: id
            enabled: true
          cacheControl:
          - statusCodeMatch: statusCodeMatch
            maxAge: 5
            id: id
            override: override
            mustRevalidate: true
            synchronizeMaxAge: true
            enabled: true
          - statusCodeMatch: statusCodeMatch
            maxAge: 5
            id: id
            override: override
            mustRevalidate: true
            synchronizeMaxAge: true
            enabled: true
          originPullHost:
          - pathFilter: pathFilter
            password: password
            originUrl: originUrl
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            userName: userName
          - pathFilter: pathFilter
            password: password
            originUrl: originUrl
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            userName: userName
          authACL:
          - header: header
            id: id
            ipList: ipList
            enabled: true
          - header: header
            id: id
            ipList: ipList
            enabled: true
          originPullLogs:
            id: id
            enabled: true
          redirectExceptions:
            redirectAgentCode: redirectAgentCode
            id: id
            enabled: true
          compression:
            level: level
            mime: mime
            gzip: gzip
            id: id
            enabled: true
          authUrlAsymmetricSignTlu:
          - pathFilter: pathFilter
            expireParameterName: expireParameterName
            publicKeyIdMap:
              key: publicKeyIdMap
            digestParameterName: digestParameterName
            keyIdParameterName: keyIdParameterName
            algorithmIdParameterName: algorithmIdParameterName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            algorithmIdMap: {}
          - pathFilter: pathFilter
            expireParameterName: expireParameterName
            publicKeyIdMap:
              key: publicKeyIdMap
            digestParameterName: digestParameterName
            keyIdParameterName: keyIdParameterName
            algorithmIdParameterName: algorithmIdParameterName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            algorithmIdMap: {}
          failSafeOriginPull:
            pathFilter: pathFilter
            statusCodeMatch: statusCodeMatch
            id: id
            enabled: true
          origin:
          - originPullHeaders: originPullHeaders
            host: host
            id: id
            originCacheHeaders: originCacheHeaders
          - originPullHeaders: originPullHeaders
            host: host
            id: id
            originCacheHeaders: originCacheHeaders
          authUrlSignIq:
          - pathFilter: pathFilter
            secretKey: secretKey
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            secretKey: secretKey
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          authUrlSign:
          - uriLengthField: uriLengthField
            tokenField: tokenField
            expiresField: expiresField
            methodFilter: methodFilter
            passPhraseField: passPhraseField
            enabled: true
            pathFilter: pathFilter
            userAgentField: userAgentField
            headerFilter: headerFilter
            id: id
            ipAddressField: ipAddressField
            ignoreFieldsAfterToken: true
            passPhrase: passPhrase
          - uriLengthField: uriLengthField
            tokenField: tokenField
            expiresField: expiresField
            methodFilter: methodFilter
            passPhraseField: passPhraseField
            enabled: true
            pathFilter: pathFilter
            userAgentField: userAgentField
            headerFilter: headerFilter
            id: id
            ipAddressField: ipAddressField
            ignoreFieldsAfterToken: true
            passPhrase: passPhrase
          originPullProtocol:
            enableSNI: true
            id: id
          clientResponseModification:
          - pathFilter: pathFilter
            addHeaders: addHeaders
            headerPattern: headerPattern
            statusCodeRewrite: 2.3021358869347655
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            addHeaders: addHeaders
            headerPattern: headerPattern
            statusCodeRewrite: 2.3021358869347655
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          dynamicContent:
          - pathFilter: pathFilter
            queryParams: queryParams
            methodFilter: methodFilter
            headerFields: headerFields
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            queryParams: queryParams
            methodFilter: methodFilter
            headerFields: headerFields
            headerFilter: headerFilter
            id: id
            enabled: true
          contentDispositionByHeader:
          - pathFilter: pathFilter
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            overrideOriginHeader: true
            headerFieldName: headerFieldName
            headerValueMatch: headerValueMatch
            enabled: true
          - pathFilter: pathFilter
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            overrideOriginHeader: true
            headerFieldName: headerFieldName
            headerValueMatch: headerValueMatch
            enabled: true
          clientRequestModification:
          - pathFilter: pathFilter
            addHeaders: addHeaders
            cookieFilter: cookieFilter
            headerPattern: headerPattern
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            urlPattern: urlPattern
            urlRewrite: urlRewrite
            enabled: true
          - pathFilter: pathFilter
            addHeaders: addHeaders
            cookieFilter: cookieFilter
            headerPattern: headerPattern
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            urlPattern: urlPattern
            urlRewrite: urlRewrite
            enabled: true
          contentDispositionByURL:
            dispositionTypeQSParam: dispositionTypeQSParam
            dispositionNameQSParam: dispositionNameQSParam
            id: id
            dispositionOverrideQSParam: dispositionOverrideQSParam
            overrideOriginHeader: true
            enabled: true
          accessLogs:
            id: id
            enabled: true
          staticHeader:
          - pathFilter: pathFilter
            originPull: originPull
            methodFilter: methodFilter
            http: http
            headerFilter: headerFilter
            id: id
            enabled: true
            clientRequest: clientRequest
          - pathFilter: pathFilter
            originPull: originPull
            methodFilter: methodFilter
            http: http
            headerFilter: headerFilter
            id: id
            enabled: true
            clientRequest: clientRequest
          farAheadRangeProxy:
            id: id
            thresholdBytes: 9.301444243932576
            enabled: true
          flvPseudoStreaming:
            jumpToByteInitialBytesParam: jumpToByteInitialBytesParam
            id: id
            jumpToByteStartOffsetParam: jumpToByteStartOffsetParam
            enabled: true
          originPersistentConnections:
            id: id
            enabled: true
          authHttpBasic:
            realm: realm
            id: id
            bindingPoint: bindingPoint
            ttl: 0.8008281904610115
            enabled: true
          httpMethods:
            passThru: passThru
            id: id
            enabled: true
          cacheKeyModification:
            normalizeKeyPathToLowerCase: true
            id: id
            enabled: true
          originResponseModification:
          - pathFilter: pathFilter
            addHeaders: addHeaders
            headerPattern: headerPattern
            statusCodeRewrite: 7.386281948385884
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            addHeaders: addHeaders
            headerPattern: headerPattern
            statusCodeRewrite: 7.386281948385884
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          http2Support:
            id: id
            enabled: true
          customMimeType:
          - pathFilter: pathFilter
            code: code
            extensionMap: extensionMap
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            code: code
            extensionMap: extensionMap
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          originPullPolicy:
          - updateHttpHeadersOn304Response: true
            honorMustRevalidate: true
            methodFilter: methodFilter
            honorSMaxAge: true
            httpHeaders: httpHeaders
            enabled: true
            pathFilter: pathFilter
            statusCodeMatch: statusCodeMatch
            forceBypassCache: true
            honorNoCache: true
            mustRevalidateToNoCache: true
            bypassCacheIdentifier: bypassCacheIdentifier
            honorPrivate: true
            expireSeconds: 4
            headerFilter: headerFilter
            id: id
            honorNoStore: true
            contentTypeFilter: contentTypeFilter
            maxAgeZeroToNoCache: true
          - updateHttpHeadersOn304Response: true
            honorMustRevalidate: true
            methodFilter: methodFilter
            honorSMaxAge: true
            httpHeaders: httpHeaders
            enabled: true
            pathFilter: pathFilter
            statusCodeMatch: statusCodeMatch
            forceBypassCache: true
            honorNoCache: true
            mustRevalidateToNoCache: true
            bypassCacheIdentifier: bypassCacheIdentifier
            honorPrivate: true
            expireSeconds: 4
            headerFilter: headerFilter
            id: id
            honorNoStore: true
            contentTypeFilter: contentTypeFilter
            maxAgeZeroToNoCache: true
          receiptLogsConfig:
            extraLogFields: extraLogFields
            id: id
            enabled: true
          authUrlSignAliCloudB:
          - pathFilter: pathFilter
            expirationExtension: 1.4658129805029452
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          - pathFilter: pathFilter
            expirationExtension: 1.4658129805029452
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          authUrlSignAliCloudA:
          - pathFilter: pathFilter
            expirationExtension: 6.027456183070403
            includeParamsBeforeToken: true
            tokenField: tokenField
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          - pathFilter: pathFilter
            expirationExtension: 6.027456183070403
            includeParamsBeforeToken: true
            tokenField: tokenField
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          dynamicCacheRule:
          - pathFilter: pathFilter
            headers: headers
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            statusCode: 7.061401241503109
          - pathFilter: pathFilter
            headers: headers
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            statusCode: 7.061401241503109
          bandWidthLimit:
            values: values
            rule: rule
            id: id
            enabled: true
          bypassCache:
          - pathFilter: pathFilter
            cookieFilter: cookieFilter
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            cookieFilter: cookieFilter
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          redirectMappings:
          - pathFilter: pathFilter
            code: 1.2315135367772556
            redirectURL: redirectURL
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            replacementToken: replacementToken
            enabled: true
          - pathFilter: pathFilter
            code: 1.2315135367772556
            redirectURL: redirectURL
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            replacementToken: replacementToken
            enabled: true
          timePseudoStreaming:
            jumpToTimeStartParam: jumpToTimeStartParam
            jumpToTimeEndParam: jumpToTimeEndParam
            id: id
            enabled: true
          queryStrParam:
            dispositionOverride: dispositionOverride
            dispositionType: dispositionType
            jumpToTimeEnd: jumpToTimeEnd
            rateLimitInitial: rateLimitInitial
            jumpToByteInitialBytes: jumpToByteInitialBytes
            jumpToByteStartOffset: jumpToByteStartOffset
            jumpToTimeStart: jumpToTimeStart
            id: id
            rateLimitSustained: rateLimitSustained
            enabled: true
            dispositionName: dispositionName
          authUrlSignAliCloudC:
          - pathFilter: pathFilter
            expirationExtension: 5.962133916683182
            expireField: expireField
            tokenField: tokenField
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          - pathFilter: pathFilter
            expirationExtension: 5.962133916683182
            expireField: expireField
            tokenField: tokenField
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          authGeo:
          - values: values
            id: id
            enabled: true
          - values: values
            id: id
            enabled: true
          authReferer:
            referer: referer
            id: id
            enabled: true
          customer:
            opLogFields: opLogFields
            accessLogFields: accessLogFields
            id: id
            receiptLogFields: receiptLogFields
      properties:
        configuration:
          $ref: '#/components/schemas/custconfConfiguration'
      type: object
    cdnGetScopeRuleResponse:
      description: The response from a request to retrieve an individual EdgeRule
      example:
        rule:
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          slug: slug
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        rule:
          $ref: '#/components/schemas/cdnScopeRule'
      type: object
    cdnGetScopeRulesResponse:
      description: The response from request to retrieve the EdgeRules on a CDN site's
        scope
      example:
        pageInfo:
          hasNextPage: true
          hasPreviousPage: true
          endCursor: endCursor
          totalCount: totalCount
          startCursor: startCursor
        results:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          slug: slug
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          slug: slug
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        pageInfo:
          $ref: '#/components/schemas/paginationPageInfo'
        results:
          description: The requested EdgeRules
          items:
            $ref: '#/components/schemas/cdnScopeRule'
          type: array
      type: object
    cdnGetSiteCertificatesResponse:
      description: The response from a request to retrieve a CDN site's SSL certificates
      example:
        pageInfo:
          hasNextPage: true
          hasPreviousPage: true
          endCursor: endCursor
          totalCount: totalCount
          startCursor: startCursor
        results:
        - valid: true
          certificate:
            commonName: commonName
            updateDate: 2000-01-23T04:56:07.000+00:00
            caBundle: caBundle
            trusted: true
            subjectAlternativeNames:
            - subjectAlternativeNames
            - subjectAlternativeNames
            providerManaged: true
            fingerprint: fingerprint
            id: id
            issuer: issuer
            expirationDate: 2000-01-23T04:56:07.000+00:00
            createDate: 2000-01-23T04:56:07.000+00:00
        - valid: true
          certificate:
            commonName: commonName
            updateDate: 2000-01-23T04:56:07.000+00:00
            caBundle: caBundle
            trusted: true
            subjectAlternativeNames:
            - subjectAlternativeNames
            - subjectAlternativeNames
            providerManaged: true
            fingerprint: fingerprint
            id: id
            issuer: issuer
            expirationDate: 2000-01-23T04:56:07.000+00:00
            createDate: 2000-01-23T04:56:07.000+00:00
      properties:
        pageInfo:
          $ref: '#/components/schemas/paginationPageInfo'
        results:
          description: The requested SSL certificates
          items:
            $ref: '#/components/schemas/cdnSiteCertificate'
          type: array
      type: object
    cdnGetSiteDnsTargetsResponse:
      description: The response from a request to retrieve a CDN site's DNS CNAME
        targets
      example:
        addresses:
        - addresses
        - addresses
      properties:
        addresses:
          description: |-
            The requested DNS CNAME targets

            A site's hostname should point to these CNAME targets in order for traffic to be sent through StackPath's edge nodes.
          items:
            type: string
          type: array
      type: object
    cdnGetSiteScopesResponse:
      description: The response from request to a CDN site's scopes
      example:
        pageInfo:
          hasNextPage: true
          hasPreviousPage: true
          endCursor: endCursor
          totalCount: totalCount
          startCursor: startCursor
        results:
        - path: path
          id: id
          platform: platform
        - path: path
          id: id
          platform: platform
      properties:
        pageInfo:
          $ref: '#/components/schemas/paginationPageInfo'
        results:
          description: The requested scopes
          items:
            $ref: '#/components/schemas/cdnScope'
          type: array
      type: object
    cdnGetSiteScriptResponse:
      description: The result from a request to retrieve an EdgeEngine script
      example:
        script:
          createdAt: 2000-01-23T04:56:07.000+00:00
          code: code
          paths:
          - paths
          - paths
          stackId: stackId
          name: name
          siteId: siteId
          id: id
          version: version
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        script:
          $ref: '#/components/schemas/cdnSiteScript'
      type: object
    cdnGetSiteScriptsResponse:
      description: The result from a request to retrieve all EdgeEngine scripts on
        a CDN site
      example:
        pageInfo:
          hasNextPage: true
          hasPreviousPage: true
          endCursor: endCursor
          totalCount: totalCount
          startCursor: startCursor
        results:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          code: code
          paths:
          - paths
          - paths
          stackId: stackId
          name: name
          siteId: siteId
          id: id
          version: version
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          code: code
          paths:
          - paths
          - paths
          stackId: stackId
          name: name
          siteId: siteId
          id: id
          version: version
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        pageInfo:
          $ref: '#/components/schemas/paginationPageInfo'
        results:
          description: The requested serverless scripts
          items:
            $ref: '#/components/schemas/cdnSiteScript'
          type: array
      type: object
    cdnHostname:
      description: An individual hostname
      example:
        domain: domain
      properties:
        domain:
          description: A host's domain name
          type: string
      type: object
    cdnHttpVerificationDetails:
      description: HTTP-based domain ownership verification details
      example:
        path: path
        body: body
        contentType: contentType
      properties:
        path:
          description: Path to the verification file
          type: string
        contentType:
          description: Response content type
          type: string
        body:
          description: Body content of response
          type: string
      type: object
    cdnPop:
      description: |-
        A point of presence responsible for serving content to a geographic location

        POPs contain edge nodes responsible for CDN, WAF, monitoring, and all other StackPath product offerings.
      example:
        code: code
        latitude: 0.8008282
        name: name
        longitude: 6.0274563
      properties:
        code:
          description: A StackPath POP's IATA formatted location code
          type: string
        name:
          description: A StackPath POP's name
          type: string
        latitude:
          description: A StackPath POP's latitude coordinates
          format: float
          type: number
        longitude:
          description: A StackPath POP's longitude coordinates
          format: float
          type: number
      type: object
    cdnPopScanReport:
      description: The result of a network scan from a StackPath point of presence
        to a origin
      example:
        popCode: popCode
        downloadMs: 1.4658129
        totalMs: 2.302136
        sslMs: 5.637377
        connectMs: 0.8008282
        dnsMs: 6.0274563
        firstByteMs: 5.962134
      properties:
        popCode:
          description: The IATA formatted location code of the StackPath POP that
            produced a scan report
          type: string
        connectMs:
          description: The amount of time in milliseconds that a POP scan took to
            perform an initial connection handshake
          format: float
          type: number
        dnsMs:
          description: The amount of time in milliseconds that a POP scan took to
            resolve the target's DNS entry
          format: float
          type: number
        downloadMs:
          description: The amount of time in milliseconds that a POP scan took to
            download the target's contents
          format: float
          type: number
        firstByteMs:
          description: The amount of time in milliseconds that a POP scan took from
            initial connection to starting to receive the target's contents
          format: float
          type: number
        sslMs:
          description: The amount of time in milliseconds that a POP scan took to
            perform an SSL handshake
          format: float
          type: number
        totalMs:
          description: The total amount of time in milliseconds that a POP scan took
            to complete
          format: float
          type: number
      type: object
    cdnPurgeContentRequest:
      properties:
        items:
          description: The items to purge from the CDN
          items:
            $ref: '#/components/schemas/PurgeContentRequestItem'
          type: array
      type: object
    cdnPurgeContentResponse:
      description: The response from a request to purge content from the CDN
      example:
        id: id
      properties:
        id:
          description: |-
            The purge request's ID

            Use this ID to request completion of the purge request.
          type: string
      type: object
    cdnRequestCertificateRequest:
      properties:
        hosts:
          description: |-
            An optional list of delivery domains that will be included as subject alternative names on the certificate

            If no hosts are provided, all delivery domains on the site will be included with the first one in the list being used as the common name.  If hosts are provided, the first entry will be used as the common name.

            All entries in the list are validated against the existing delivery domains for the provided site.
          items:
            type: string
          type: array
        verificationMethod:
          $ref: '#/components/schemas/cdnCertificateVerificationMethod'
      type: object
    cdnRequestCertificateResponse:
      description: The response from a request to provision an SSL certificate for
        a CDN site
      example:
        certificate:
          commonName: commonName
          updateDate: 2000-01-23T04:56:07.000+00:00
          caBundle: caBundle
          trusted: true
          subjectAlternativeNames:
          - subjectAlternativeNames
          - subjectAlternativeNames
          providerManaged: true
          fingerprint: fingerprint
          id: id
          issuer: issuer
          expirationDate: 2000-01-23T04:56:07.000+00:00
          createDate: 2000-01-23T04:56:07.000+00:00
        verificationRequirements:
        - httpVerificationDetails:
            path: path
            body: body
            contentType: contentType
          dnsVerificationDetails:
            records:
            - data: data
              name: name
              type: type
              class: class
              ttl: 0
            - data: data
              name: name
              type: type
              class: class
              ttl: 0
            dnsRecords:
            - dnsRecords
            - dnsRecords
        - httpVerificationDetails:
            path: path
            body: body
            contentType: contentType
          dnsVerificationDetails:
            records:
            - data: data
              name: name
              type: type
              class: class
              ttl: 0
            - data: data
              name: name
              type: type
              class: class
              ttl: 0
            dnsRecords:
            - dnsRecords
            - dnsRecords
      properties:
        certificate:
          $ref: '#/components/schemas/cdnCertificate'
        verificationRequirements:
          description: The certificate's verification requirements
          items:
            $ref: '#/components/schemas/cdnVerificationRequirements'
          type: array
      type: object
    cdnScanOriginRequest:
      properties:
        domain:
          description: The hostname to scan
          type: string
      type: object
    cdnScanOriginResponse:
      description: The response from a request to scan a URL from the StackPath edge
        network
      example:
        domainInUse: true
        hostname: hostname
        ipAddress: ipAddress
        sslDetails:
          valid: true
          error: error
      properties:
        ipAddress:
          description: The IP address that was scanned
          type: string
        hostname:
          description: The hostname that was scanned
          type: string
        sslDetails:
          $ref: '#/components/schemas/ScanOriginResponseOriginScanSSLDetails'
        domainInUse:
          description: Whether or not the scanned domain is already in use on the
            StackPath platform
          format: boolean
          type: boolean
      type: object
    cdnScope:
      description: |-
        A CDN site scope

        Scopes hold a CDN site's configuration. Every site has at least one "root" scope that handles primary configuration.
      example:
        path: path
        id: id
        platform: platform
      properties:
        id:
          description: A CDN site scope's unique identifier
          type: string
        platform:
          description: |-
            A CDN site scope's platform

            Scope platforms are used internally by StackPath for metrics collection and billing purposes. Typically, most site scope platforms have the value "CDS".
          type: string
        path:
          description: The HTTP request path that is handled by a scope
          type: string
      type: object
    cdnScopeOrigin:
      description: A relationship between a CDN site's configuration scope and an
        origin
      example:
        origin:
          securePort: 1
          path: path
          dedicated: true
          hostname: hostname
          port: 6
          siteId: siteId
          id: id
        priority: 0
      properties:
        priority:
          description: |-
            An origin's priority to it's CDN site scope

            If a CDN scope is powered by more than one origin, then the one with the lower priority number takes higher precedence.
          format: int32
          type: integer
        origin:
          $ref: '#/components/schemas/schemacdnOrigin'
      type: object
    cdnScopeRule:
      description: |-
        A EdgeRule associated with a CDN site

        EdgeRules can modify incoming HTTP requests to a CDN site before they're sent to the origin.
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        slug: slug
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: An EdgeRule's unique identifier
          type: string
        name:
          description: An EdgeRule's name
          type: string
        slug:
          description: A human and machine readable name for an EdgeRule
          type: string
        createdAt:
          description: The date an EdgeRule was created
          format: date-time
          type: string
        updatedAt:
          description: The date an EdgeRule was last updated
          format: date-time
          type: string
      type: object
    cdnSite:
      description: A CDN site
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        features:
        - null
        - null
        stackId: stackId
        id: id
        label: label
        enabled: true
        status: status
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: A CDN site's unique identifier
          type: string
        stackId:
          description: The ID of the stack to which a CDN site belongs
          type: string
        label:
          description: |-
            A CDN site's name

            Site names correspond to their fully-qualified domain name.
          type: string
        status:
          description: |-
            A CDN site's internal state

            Site status is controlled by StackPath as sites are provisioned and managed by StackPath's accounting and security teams.
          type: string
        createdAt:
          description: The date that a CDN site was created
          format: date-time
          type: string
        updatedAt:
          description: The date that a CDN site was last updated
          format: date-time
          type: string
        features:
          description: |-
            A CDN site's associated features

            Features control how StackPath provisions and configures a site.
          items:
            $ref: '#/components/schemas/cdnSiteFeature'
          type: array
        enabled:
          description: Whether or not a site's CDN service is enabled
          format: boolean
          type: boolean
        type:
          $ref: '#/components/schemas/SiteTypeValue'
      type: object
    cdnSiteCertificate:
      description: An SSL certificate and its relationship with its associated site
      example:
        valid: true
        certificate:
          commonName: commonName
          updateDate: 2000-01-23T04:56:07.000+00:00
          caBundle: caBundle
          trusted: true
          subjectAlternativeNames:
          - subjectAlternativeNames
          - subjectAlternativeNames
          providerManaged: true
          fingerprint: fingerprint
          id: id
          issuer: issuer
          expirationDate: 2000-01-23T04:56:07.000+00:00
          createDate: 2000-01-23T04:56:07.000+00:00
      properties:
        valid:
          description: |-
            Whether or not a site's SSL certificate is valid

            An SSL certificate is valid when a hostname associated with the site is covered by the certificate.
          format: boolean
          type: boolean
        certificate:
          $ref: '#/components/schemas/cdnCertificate'
      type: object
    cdnSiteFeature:
      default: UNKNOWN
      description: |-
        The features available to CDN sites

        Multiple products can be served on a single CDN site. Features control how those products are managed on the StackPath backend.

         - UNKNOWN: StackPath is unable to determine a site's feature
         - CDN: A site has CDN caching abilities
         - WAF: A site is protected by the StackPath Web Application Firewall
      enum:
      - UNKNOWN
      - CDN
      - WAF
      type: string
    cdnSiteScript:
      description: |-
        A serverless script

        Serverless scripts are hosted and executed on StackPath's edge nodes.
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        code: code
        paths:
        - paths
        - paths
        stackId: stackId
        name: name
        siteId: siteId
        id: id
        version: version
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: A serverless script's unique identifier
          type: string
        stackId:
          description: The ID of the stack to which a serverless script's site belongs
          type: string
        siteId:
          description: The ID of the site to which a serverless script belongs
          type: string
        name:
          description: A serverless script's name
          type: string
        version:
          description: |-
            A serverless script's version number

            Version numbers start at 1 and are incremented every time the script is updated.
          type: string
        code:
          description: Base64 encoded contents of a serverless script
          format: byte
          type: string
        paths:
          description: |-
            The URL paths that incoming requests should answer with a serverless script

            Every serverless script needs at least one path, and paths must be unique.
          items:
            type: string
          type: array
        createdAt:
          description: The date a serverless script was created
          format: date-time
          type: string
        updatedAt:
          description: The date a serverless script was last updated
          format: date-time
          type: string
      type: object
    cdnUpdateCertificateRequest:
      properties:
        certificate:
          description: 'A PEM PKCS #7 formatted SSL certificate'
          type: string
        key:
          description: |-
            A PEM PKCS #7 formatted private key

            Private keys are sent directly to the edge nodes and are not stored elsewhere on StackPath's systems.
          type: string
        caBundle:
          description: 'A PEM PKCS #7 formatted certificate authority bundle'
          type: string
      type: object
    cdnUpdateCertificateResponse:
      description: The response from a request to update an SSL certificate
      example:
        certificate:
          commonName: commonName
          updateDate: 2000-01-23T04:56:07.000+00:00
          caBundle: caBundle
          trusted: true
          subjectAlternativeNames:
          - subjectAlternativeNames
          - subjectAlternativeNames
          providerManaged: true
          fingerprint: fingerprint
          id: id
          issuer: issuer
          expirationDate: 2000-01-23T04:56:07.000+00:00
          createDate: 2000-01-23T04:56:07.000+00:00
      properties:
        certificate:
          $ref: '#/components/schemas/cdnCertificate'
      type: object
    cdnUpdateScopeConfigurationRequest:
      properties:
        configuration:
          $ref: '#/components/schemas/custconfConfiguration'
      type: object
    cdnUpdateScopeConfigurationResponse:
      description: The response from a request to update a CDN site scope's configuration
      example:
        configuration:
          responseHeader:
            http: http
            enableETag: true
            id: id
            enabled: true
          originPullCacheExtension:
            expiredCacheExtension: 3
            originUnreachableCacheExtension: 2
            id: id
            enabled: true
          accessLogsConfig:
            extraLogFields: extraLogFields
            id: id
            enabled: true
          fileSegmentation:
            id: id
            enabled: true
          awsSignedOriginPullV4:
          - accessKeyId: accessKeyId
            expireTimeSeconds: 1.4894159098541704
            awsRegion: awsRegion
            methodFilter: methodFilter
            signedHeaders: signedHeaders
            bucketIdentifier: bucketIdentifier
            enabled: true
            secretAccessKey: secretAccessKey
            pathFilter: pathFilter
            headerFilter: headerFilter
            id: id
            awsService: awsService
          - accessKeyId: accessKeyId
            expireTimeSeconds: 1.4894159098541704
            awsRegion: awsRegion
            methodFilter: methodFilter
            signedHeaders: signedHeaders
            bucketIdentifier: bucketIdentifier
            enabled: true
            secretAccessKey: secretAccessKey
            pathFilter: pathFilter
            headerFilter: headerFilter
            id: id
            awsService: awsService
          authUrlSignHmacTlu:
          - pathFilter: pathFilter
            expireParameterName: expireParameterName
            digestParameterName: digestParameterName
            keyIdParameterName: keyIdParameterName
            algorithmIdParameterName: algorithmIdParameterName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            symmetricKeyIdMap:
              key: symmetricKeyIdMap
            enabled: true
            algorithmIdMap: {}
          - pathFilter: pathFilter
            expireParameterName: expireParameterName
            digestParameterName: digestParameterName
            keyIdParameterName: keyIdParameterName
            algorithmIdParameterName: algorithmIdParameterName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            symmetricKeyIdMap:
              key: symmetricKeyIdMap
            enabled: true
            algorithmIdMap: {}
          originPullResumeDownload:
          - pathFilter: pathFilter
            maximumAttempts: 1.0246457001441578
            minimumBodyBytesConsumed: minimumBodyBytesConsumed
            requireOriginRangeSupport: true
            headerFilter: headerFilter
            id: id
            enabled: true
            originalStatusCodeMatch: originalStatusCodeMatch
          - pathFilter: pathFilter
            maximumAttempts: 1.0246457001441578
            minimumBodyBytesConsumed: minimumBodyBytesConsumed
            requireOriginRangeSupport: true
            headerFilter: headerFilter
            id: id
            enabled: true
            originalStatusCodeMatch: originalStatusCodeMatch
          gzipOriginPull:
            id: id
            enabled: true
          awsSignedS3PostV4:
          - accessKeyId: accessKeyId
            expireTimeSeconds: 6.84685269835264
            awsRegion: awsRegion
            methodFilter: methodFilter
            signedHeaders: signedHeaders
            bucketIdentifier: bucketIdentifier
            enabled: true
            secretAccessKey: secretAccessKey
            pathFilter: pathFilter
            headerFilter: headerFilter
            id: id
            awsService: awsService
          - accessKeyId: accessKeyId
            expireTimeSeconds: 6.84685269835264
            awsRegion: awsRegion
            methodFilter: methodFilter
            signedHeaders: signedHeaders
            bucketIdentifier: bucketIdentifier
            enabled: true
            secretAccessKey: secretAccessKey
            pathFilter: pathFilter
            headerFilter: headerFilter
            id: id
            awsService: awsService
          bandwidthRateLimit:
            pathFilter: pathFilter
            sustainedRateName: sustainedRateName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            initialBurstName: initialBurstName
            enabled: true
          vHost:
          - domain: domain
            id: id
            enabled: true
          - domain: domain
            id: id
            enabled: true
          originRequestModification:
          - pathFilter: pathFilter
            addHeaders: addHeaders
            cookieFilter: cookieFilter
            headerPattern: headerPattern
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            urlPattern: urlPattern
            flowControl: flowControl
            urlRewrite: urlRewrite
            enabled: true
          - pathFilter: pathFilter
            addHeaders: addHeaders
            cookieFilter: cookieFilter
            headerPattern: headerPattern
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            urlPattern: urlPattern
            flowControl: flowControl
            urlRewrite: urlRewrite
            enabled: true
          customHeader:
            xForwardedForOrigin: xForwardedForOrigin
            xForwardedForAuth: xForwardedForAuth
            id: id
            enabled: true
          originPull:
            noQSParams: true
            id: id
            retryMethods: retryMethods
            enabled: true
          robotsTxt:
          - cacheControlHeader: cacheControlHeader
            pathFilter: pathFilter
            file: file
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - cacheControlHeader: cacheControlHeader
            pathFilter: pathFilter
            file: file
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          originPullLogsConfig:
            extraLogFields: extraLogFields
            id: id
            enabled: true
          cacheControl:
          - statusCodeMatch: statusCodeMatch
            maxAge: 5
            id: id
            override: override
            mustRevalidate: true
            synchronizeMaxAge: true
            enabled: true
          - statusCodeMatch: statusCodeMatch
            maxAge: 5
            id: id
            override: override
            mustRevalidate: true
            synchronizeMaxAge: true
            enabled: true
          originPullHost:
          - pathFilter: pathFilter
            password: password
            originUrl: originUrl
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            userName: userName
          - pathFilter: pathFilter
            password: password
            originUrl: originUrl
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            userName: userName
          authACL:
          - header: header
            id: id
            ipList: ipList
            enabled: true
          - header: header
            id: id
            ipList: ipList
            enabled: true
          originPullLogs:
            id: id
            enabled: true
          redirectExceptions:
            redirectAgentCode: redirectAgentCode
            id: id
            enabled: true
          compression:
            level: level
            mime: mime
            gzip: gzip
            id: id
            enabled: true
          authUrlAsymmetricSignTlu:
          - pathFilter: pathFilter
            expireParameterName: expireParameterName
            publicKeyIdMap:
              key: publicKeyIdMap
            digestParameterName: digestParameterName
            keyIdParameterName: keyIdParameterName
            algorithmIdParameterName: algorithmIdParameterName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            algorithmIdMap: {}
          - pathFilter: pathFilter
            expireParameterName: expireParameterName
            publicKeyIdMap:
              key: publicKeyIdMap
            digestParameterName: digestParameterName
            keyIdParameterName: keyIdParameterName
            algorithmIdParameterName: algorithmIdParameterName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            algorithmIdMap: {}
          failSafeOriginPull:
            pathFilter: pathFilter
            statusCodeMatch: statusCodeMatch
            id: id
            enabled: true
          origin:
          - originPullHeaders: originPullHeaders
            host: host
            id: id
            originCacheHeaders: originCacheHeaders
          - originPullHeaders: originPullHeaders
            host: host
            id: id
            originCacheHeaders: originCacheHeaders
          authUrlSignIq:
          - pathFilter: pathFilter
            secretKey: secretKey
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            secretKey: secretKey
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          authUrlSign:
          - uriLengthField: uriLengthField
            tokenField: tokenField
            expiresField: expiresField
            methodFilter: methodFilter
            passPhraseField: passPhraseField
            enabled: true
            pathFilter: pathFilter
            userAgentField: userAgentField
            headerFilter: headerFilter
            id: id
            ipAddressField: ipAddressField
            ignoreFieldsAfterToken: true
            passPhrase: passPhrase
          - uriLengthField: uriLengthField
            tokenField: tokenField
            expiresField: expiresField
            methodFilter: methodFilter
            passPhraseField: passPhraseField
            enabled: true
            pathFilter: pathFilter
            userAgentField: userAgentField
            headerFilter: headerFilter
            id: id
            ipAddressField: ipAddressField
            ignoreFieldsAfterToken: true
            passPhrase: passPhrase
          originPullProtocol:
            enableSNI: true
            id: id
          clientResponseModification:
          - pathFilter: pathFilter
            addHeaders: addHeaders
            headerPattern: headerPattern
            statusCodeRewrite: 2.3021358869347655
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            addHeaders: addHeaders
            headerPattern: headerPattern
            statusCodeRewrite: 2.3021358869347655
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          dynamicContent:
          - pathFilter: pathFilter
            queryParams: queryParams
            methodFilter: methodFilter
            headerFields: headerFields
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            queryParams: queryParams
            methodFilter: methodFilter
            headerFields: headerFields
            headerFilter: headerFilter
            id: id
            enabled: true
          contentDispositionByHeader:
          - pathFilter: pathFilter
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            overrideOriginHeader: true
            headerFieldName: headerFieldName
            headerValueMatch: headerValueMatch
            enabled: true
          - pathFilter: pathFilter
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            overrideOriginHeader: true
            headerFieldName: headerFieldName
            headerValueMatch: headerValueMatch
            enabled: true
          clientRequestModification:
          - pathFilter: pathFilter
            addHeaders: addHeaders
            cookieFilter: cookieFilter
            headerPattern: headerPattern
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            urlPattern: urlPattern
            urlRewrite: urlRewrite
            enabled: true
          - pathFilter: pathFilter
            addHeaders: addHeaders
            cookieFilter: cookieFilter
            headerPattern: headerPattern
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            urlPattern: urlPattern
            urlRewrite: urlRewrite
            enabled: true
          contentDispositionByURL:
            dispositionTypeQSParam: dispositionTypeQSParam
            dispositionNameQSParam: dispositionNameQSParam
            id: id
            dispositionOverrideQSParam: dispositionOverrideQSParam
            overrideOriginHeader: true
            enabled: true
          accessLogs:
            id: id
            enabled: true
          staticHeader:
          - pathFilter: pathFilter
            originPull: originPull
            methodFilter: methodFilter
            http: http
            headerFilter: headerFilter
            id: id
            enabled: true
            clientRequest: clientRequest
          - pathFilter: pathFilter
            originPull: originPull
            methodFilter: methodFilter
            http: http
            headerFilter: headerFilter
            id: id
            enabled: true
            clientRequest: clientRequest
          farAheadRangeProxy:
            id: id
            thresholdBytes: 9.301444243932576
            enabled: true
          flvPseudoStreaming:
            jumpToByteInitialBytesParam: jumpToByteInitialBytesParam
            id: id
            jumpToByteStartOffsetParam: jumpToByteStartOffsetParam
            enabled: true
          originPersistentConnections:
            id: id
            enabled: true
          authHttpBasic:
            realm: realm
            id: id
            bindingPoint: bindingPoint
            ttl: 0.8008281904610115
            enabled: true
          httpMethods:
            passThru: passThru
            id: id
            enabled: true
          cacheKeyModification:
            normalizeKeyPathToLowerCase: true
            id: id
            enabled: true
          originResponseModification:
          - pathFilter: pathFilter
            addHeaders: addHeaders
            headerPattern: headerPattern
            statusCodeRewrite: 7.386281948385884
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            addHeaders: addHeaders
            headerPattern: headerPattern
            statusCodeRewrite: 7.386281948385884
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          http2Support:
            id: id
            enabled: true
          customMimeType:
          - pathFilter: pathFilter
            code: code
            extensionMap: extensionMap
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            code: code
            extensionMap: extensionMap
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          originPullPolicy:
          - updateHttpHeadersOn304Response: true
            honorMustRevalidate: true
            methodFilter: methodFilter
            honorSMaxAge: true
            httpHeaders: httpHeaders
            enabled: true
            pathFilter: pathFilter
            statusCodeMatch: statusCodeMatch
            forceBypassCache: true
            honorNoCache: true
            mustRevalidateToNoCache: true
            bypassCacheIdentifier: bypassCacheIdentifier
            honorPrivate: true
            expireSeconds: 4
            headerFilter: headerFilter
            id: id
            honorNoStore: true
            contentTypeFilter: contentTypeFilter
            maxAgeZeroToNoCache: true
          - updateHttpHeadersOn304Response: true
            honorMustRevalidate: true
            methodFilter: methodFilter
            honorSMaxAge: true
            httpHeaders: httpHeaders
            enabled: true
            pathFilter: pathFilter
            statusCodeMatch: statusCodeMatch
            forceBypassCache: true
            honorNoCache: true
            mustRevalidateToNoCache: true
            bypassCacheIdentifier: bypassCacheIdentifier
            honorPrivate: true
            expireSeconds: 4
            headerFilter: headerFilter
            id: id
            honorNoStore: true
            contentTypeFilter: contentTypeFilter
            maxAgeZeroToNoCache: true
          receiptLogsConfig:
            extraLogFields: extraLogFields
            id: id
            enabled: true
          authUrlSignAliCloudB:
          - pathFilter: pathFilter
            expirationExtension: 1.4658129805029452
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          - pathFilter: pathFilter
            expirationExtension: 1.4658129805029452
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          authUrlSignAliCloudA:
          - pathFilter: pathFilter
            expirationExtension: 6.027456183070403
            includeParamsBeforeToken: true
            tokenField: tokenField
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          - pathFilter: pathFilter
            expirationExtension: 6.027456183070403
            includeParamsBeforeToken: true
            tokenField: tokenField
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          dynamicCacheRule:
          - pathFilter: pathFilter
            headers: headers
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            statusCode: 7.061401241503109
          - pathFilter: pathFilter
            headers: headers
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            statusCode: 7.061401241503109
          bandWidthLimit:
            values: values
            rule: rule
            id: id
            enabled: true
          bypassCache:
          - pathFilter: pathFilter
            cookieFilter: cookieFilter
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            cookieFilter: cookieFilter
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          redirectMappings:
          - pathFilter: pathFilter
            code: 1.2315135367772556
            redirectURL: redirectURL
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            replacementToken: replacementToken
            enabled: true
          - pathFilter: pathFilter
            code: 1.2315135367772556
            redirectURL: redirectURL
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            replacementToken: replacementToken
            enabled: true
          timePseudoStreaming:
            jumpToTimeStartParam: jumpToTimeStartParam
            jumpToTimeEndParam: jumpToTimeEndParam
            id: id
            enabled: true
          queryStrParam:
            dispositionOverride: dispositionOverride
            dispositionType: dispositionType
            jumpToTimeEnd: jumpToTimeEnd
            rateLimitInitial: rateLimitInitial
            jumpToByteInitialBytes: jumpToByteInitialBytes
            jumpToByteStartOffset: jumpToByteStartOffset
            jumpToTimeStart: jumpToTimeStart
            id: id
            rateLimitSustained: rateLimitSustained
            enabled: true
            dispositionName: dispositionName
          authUrlSignAliCloudC:
          - pathFilter: pathFilter
            expirationExtension: 5.962133916683182
            expireField: expireField
            tokenField: tokenField
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          - pathFilter: pathFilter
            expirationExtension: 5.962133916683182
            expireField: expireField
            tokenField: tokenField
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          authGeo:
          - values: values
            id: id
            enabled: true
          - values: values
            id: id
            enabled: true
          authReferer:
            referer: referer
            id: id
            enabled: true
          customer:
            opLogFields: opLogFields
            accessLogFields: accessLogFields
            id: id
            receiptLogFields: receiptLogFields
      properties:
        configuration:
          $ref: '#/components/schemas/custconfConfiguration'
      type: object
    cdnUpdateScopeRuleConfigurationRequest:
      properties:
        configuration:
          $ref: '#/components/schemas/custconfConfiguration'
      type: object
    cdnUpdateScopeRuleConfigurationResponse:
      description: The response request to update an EdgeRule's configuration
      example:
        configuration:
          responseHeader:
            http: http
            enableETag: true
            id: id
            enabled: true
          originPullCacheExtension:
            expiredCacheExtension: 3
            originUnreachableCacheExtension: 2
            id: id
            enabled: true
          accessLogsConfig:
            extraLogFields: extraLogFields
            id: id
            enabled: true
          fileSegmentation:
            id: id
            enabled: true
          awsSignedOriginPullV4:
          - accessKeyId: accessKeyId
            expireTimeSeconds: 1.4894159098541704
            awsRegion: awsRegion
            methodFilter: methodFilter
            signedHeaders: signedHeaders
            bucketIdentifier: bucketIdentifier
            enabled: true
            secretAccessKey: secretAccessKey
            pathFilter: pathFilter
            headerFilter: headerFilter
            id: id
            awsService: awsService
          - accessKeyId: accessKeyId
            expireTimeSeconds: 1.4894159098541704
            awsRegion: awsRegion
            methodFilter: methodFilter
            signedHeaders: signedHeaders
            bucketIdentifier: bucketIdentifier
            enabled: true
            secretAccessKey: secretAccessKey
            pathFilter: pathFilter
            headerFilter: headerFilter
            id: id
            awsService: awsService
          authUrlSignHmacTlu:
          - pathFilter: pathFilter
            expireParameterName: expireParameterName
            digestParameterName: digestParameterName
            keyIdParameterName: keyIdParameterName
            algorithmIdParameterName: algorithmIdParameterName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            symmetricKeyIdMap:
              key: symmetricKeyIdMap
            enabled: true
            algorithmIdMap: {}
          - pathFilter: pathFilter
            expireParameterName: expireParameterName
            digestParameterName: digestParameterName
            keyIdParameterName: keyIdParameterName
            algorithmIdParameterName: algorithmIdParameterName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            symmetricKeyIdMap:
              key: symmetricKeyIdMap
            enabled: true
            algorithmIdMap: {}
          originPullResumeDownload:
          - pathFilter: pathFilter
            maximumAttempts: 1.0246457001441578
            minimumBodyBytesConsumed: minimumBodyBytesConsumed
            requireOriginRangeSupport: true
            headerFilter: headerFilter
            id: id
            enabled: true
            originalStatusCodeMatch: originalStatusCodeMatch
          - pathFilter: pathFilter
            maximumAttempts: 1.0246457001441578
            minimumBodyBytesConsumed: minimumBodyBytesConsumed
            requireOriginRangeSupport: true
            headerFilter: headerFilter
            id: id
            enabled: true
            originalStatusCodeMatch: originalStatusCodeMatch
          gzipOriginPull:
            id: id
            enabled: true
          awsSignedS3PostV4:
          - accessKeyId: accessKeyId
            expireTimeSeconds: 6.84685269835264
            awsRegion: awsRegion
            methodFilter: methodFilter
            signedHeaders: signedHeaders
            bucketIdentifier: bucketIdentifier
            enabled: true
            secretAccessKey: secretAccessKey
            pathFilter: pathFilter
            headerFilter: headerFilter
            id: id
            awsService: awsService
          - accessKeyId: accessKeyId
            expireTimeSeconds: 6.84685269835264
            awsRegion: awsRegion
            methodFilter: methodFilter
            signedHeaders: signedHeaders
            bucketIdentifier: bucketIdentifier
            enabled: true
            secretAccessKey: secretAccessKey
            pathFilter: pathFilter
            headerFilter: headerFilter
            id: id
            awsService: awsService
          bandwidthRateLimit:
            pathFilter: pathFilter
            sustainedRateName: sustainedRateName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            initialBurstName: initialBurstName
            enabled: true
          vHost:
          - domain: domain
            id: id
            enabled: true
          - domain: domain
            id: id
            enabled: true
          originRequestModification:
          - pathFilter: pathFilter
            addHeaders: addHeaders
            cookieFilter: cookieFilter
            headerPattern: headerPattern
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            urlPattern: urlPattern
            flowControl: flowControl
            urlRewrite: urlRewrite
            enabled: true
          - pathFilter: pathFilter
            addHeaders: addHeaders
            cookieFilter: cookieFilter
            headerPattern: headerPattern
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            urlPattern: urlPattern
            flowControl: flowControl
            urlRewrite: urlRewrite
            enabled: true
          customHeader:
            xForwardedForOrigin: xForwardedForOrigin
            xForwardedForAuth: xForwardedForAuth
            id: id
            enabled: true
          originPull:
            noQSParams: true
            id: id
            retryMethods: retryMethods
            enabled: true
          robotsTxt:
          - cacheControlHeader: cacheControlHeader
            pathFilter: pathFilter
            file: file
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - cacheControlHeader: cacheControlHeader
            pathFilter: pathFilter
            file: file
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          originPullLogsConfig:
            extraLogFields: extraLogFields
            id: id
            enabled: true
          cacheControl:
          - statusCodeMatch: statusCodeMatch
            maxAge: 5
            id: id
            override: override
            mustRevalidate: true
            synchronizeMaxAge: true
            enabled: true
          - statusCodeMatch: statusCodeMatch
            maxAge: 5
            id: id
            override: override
            mustRevalidate: true
            synchronizeMaxAge: true
            enabled: true
          originPullHost:
          - pathFilter: pathFilter
            password: password
            originUrl: originUrl
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            userName: userName
          - pathFilter: pathFilter
            password: password
            originUrl: originUrl
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            userName: userName
          authACL:
          - header: header
            id: id
            ipList: ipList
            enabled: true
          - header: header
            id: id
            ipList: ipList
            enabled: true
          originPullLogs:
            id: id
            enabled: true
          redirectExceptions:
            redirectAgentCode: redirectAgentCode
            id: id
            enabled: true
          compression:
            level: level
            mime: mime
            gzip: gzip
            id: id
            enabled: true
          authUrlAsymmetricSignTlu:
          - pathFilter: pathFilter
            expireParameterName: expireParameterName
            publicKeyIdMap:
              key: publicKeyIdMap
            digestParameterName: digestParameterName
            keyIdParameterName: keyIdParameterName
            algorithmIdParameterName: algorithmIdParameterName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            algorithmIdMap: {}
          - pathFilter: pathFilter
            expireParameterName: expireParameterName
            publicKeyIdMap:
              key: publicKeyIdMap
            digestParameterName: digestParameterName
            keyIdParameterName: keyIdParameterName
            algorithmIdParameterName: algorithmIdParameterName
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            algorithmIdMap: {}
          failSafeOriginPull:
            pathFilter: pathFilter
            statusCodeMatch: statusCodeMatch
            id: id
            enabled: true
          origin:
          - originPullHeaders: originPullHeaders
            host: host
            id: id
            originCacheHeaders: originCacheHeaders
          - originPullHeaders: originPullHeaders
            host: host
            id: id
            originCacheHeaders: originCacheHeaders
          authUrlSignIq:
          - pathFilter: pathFilter
            secretKey: secretKey
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            secretKey: secretKey
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          authUrlSign:
          - uriLengthField: uriLengthField
            tokenField: tokenField
            expiresField: expiresField
            methodFilter: methodFilter
            passPhraseField: passPhraseField
            enabled: true
            pathFilter: pathFilter
            userAgentField: userAgentField
            headerFilter: headerFilter
            id: id
            ipAddressField: ipAddressField
            ignoreFieldsAfterToken: true
            passPhrase: passPhrase
          - uriLengthField: uriLengthField
            tokenField: tokenField
            expiresField: expiresField
            methodFilter: methodFilter
            passPhraseField: passPhraseField
            enabled: true
            pathFilter: pathFilter
            userAgentField: userAgentField
            headerFilter: headerFilter
            id: id
            ipAddressField: ipAddressField
            ignoreFieldsAfterToken: true
            passPhrase: passPhrase
          originPullProtocol:
            enableSNI: true
            id: id
          clientResponseModification:
          - pathFilter: pathFilter
            addHeaders: addHeaders
            headerPattern: headerPattern
            statusCodeRewrite: 2.3021358869347655
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            addHeaders: addHeaders
            headerPattern: headerPattern
            statusCodeRewrite: 2.3021358869347655
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          dynamicContent:
          - pathFilter: pathFilter
            queryParams: queryParams
            methodFilter: methodFilter
            headerFields: headerFields
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            queryParams: queryParams
            methodFilter: methodFilter
            headerFields: headerFields
            headerFilter: headerFilter
            id: id
            enabled: true
          contentDispositionByHeader:
          - pathFilter: pathFilter
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            overrideOriginHeader: true
            headerFieldName: headerFieldName
            headerValueMatch: headerValueMatch
            enabled: true
          - pathFilter: pathFilter
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            overrideOriginHeader: true
            headerFieldName: headerFieldName
            headerValueMatch: headerValueMatch
            enabled: true
          clientRequestModification:
          - pathFilter: pathFilter
            addHeaders: addHeaders
            cookieFilter: cookieFilter
            headerPattern: headerPattern
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            urlPattern: urlPattern
            urlRewrite: urlRewrite
            enabled: true
          - pathFilter: pathFilter
            addHeaders: addHeaders
            cookieFilter: cookieFilter
            headerPattern: headerPattern
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            urlPattern: urlPattern
            urlRewrite: urlRewrite
            enabled: true
          contentDispositionByURL:
            dispositionTypeQSParam: dispositionTypeQSParam
            dispositionNameQSParam: dispositionNameQSParam
            id: id
            dispositionOverrideQSParam: dispositionOverrideQSParam
            overrideOriginHeader: true
            enabled: true
          accessLogs:
            id: id
            enabled: true
          staticHeader:
          - pathFilter: pathFilter
            originPull: originPull
            methodFilter: methodFilter
            http: http
            headerFilter: headerFilter
            id: id
            enabled: true
            clientRequest: clientRequest
          - pathFilter: pathFilter
            originPull: originPull
            methodFilter: methodFilter
            http: http
            headerFilter: headerFilter
            id: id
            enabled: true
            clientRequest: clientRequest
          farAheadRangeProxy:
            id: id
            thresholdBytes: 9.301444243932576
            enabled: true
          flvPseudoStreaming:
            jumpToByteInitialBytesParam: jumpToByteInitialBytesParam
            id: id
            jumpToByteStartOffsetParam: jumpToByteStartOffsetParam
            enabled: true
          originPersistentConnections:
            id: id
            enabled: true
          authHttpBasic:
            realm: realm
            id: id
            bindingPoint: bindingPoint
            ttl: 0.8008281904610115
            enabled: true
          httpMethods:
            passThru: passThru
            id: id
            enabled: true
          cacheKeyModification:
            normalizeKeyPathToLowerCase: true
            id: id
            enabled: true
          originResponseModification:
          - pathFilter: pathFilter
            addHeaders: addHeaders
            headerPattern: headerPattern
            statusCodeRewrite: 7.386281948385884
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            addHeaders: addHeaders
            headerPattern: headerPattern
            statusCodeRewrite: 7.386281948385884
            headerRewrite: headerRewrite
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          http2Support:
            id: id
            enabled: true
          customMimeType:
          - pathFilter: pathFilter
            code: code
            extensionMap: extensionMap
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            code: code
            extensionMap: extensionMap
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          originPullPolicy:
          - updateHttpHeadersOn304Response: true
            honorMustRevalidate: true
            methodFilter: methodFilter
            honorSMaxAge: true
            httpHeaders: httpHeaders
            enabled: true
            pathFilter: pathFilter
            statusCodeMatch: statusCodeMatch
            forceBypassCache: true
            honorNoCache: true
            mustRevalidateToNoCache: true
            bypassCacheIdentifier: bypassCacheIdentifier
            honorPrivate: true
            expireSeconds: 4
            headerFilter: headerFilter
            id: id
            honorNoStore: true
            contentTypeFilter: contentTypeFilter
            maxAgeZeroToNoCache: true
          - updateHttpHeadersOn304Response: true
            honorMustRevalidate: true
            methodFilter: methodFilter
            honorSMaxAge: true
            httpHeaders: httpHeaders
            enabled: true
            pathFilter: pathFilter
            statusCodeMatch: statusCodeMatch
            forceBypassCache: true
            honorNoCache: true
            mustRevalidateToNoCache: true
            bypassCacheIdentifier: bypassCacheIdentifier
            honorPrivate: true
            expireSeconds: 4
            headerFilter: headerFilter
            id: id
            honorNoStore: true
            contentTypeFilter: contentTypeFilter
            maxAgeZeroToNoCache: true
          receiptLogsConfig:
            extraLogFields: extraLogFields
            id: id
            enabled: true
          authUrlSignAliCloudB:
          - pathFilter: pathFilter
            expirationExtension: 1.4658129805029452
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          - pathFilter: pathFilter
            expirationExtension: 1.4658129805029452
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          authUrlSignAliCloudA:
          - pathFilter: pathFilter
            expirationExtension: 6.027456183070403
            includeParamsBeforeToken: true
            tokenField: tokenField
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          - pathFilter: pathFilter
            expirationExtension: 6.027456183070403
            includeParamsBeforeToken: true
            tokenField: tokenField
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          dynamicCacheRule:
          - pathFilter: pathFilter
            headers: headers
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            statusCode: 7.061401241503109
          - pathFilter: pathFilter
            headers: headers
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            statusCode: 7.061401241503109
          bandWidthLimit:
            values: values
            rule: rule
            id: id
            enabled: true
          bypassCache:
          - pathFilter: pathFilter
            cookieFilter: cookieFilter
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          - pathFilter: pathFilter
            cookieFilter: cookieFilter
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
          redirectMappings:
          - pathFilter: pathFilter
            code: 1.2315135367772556
            redirectURL: redirectURL
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            replacementToken: replacementToken
            enabled: true
          - pathFilter: pathFilter
            code: 1.2315135367772556
            redirectURL: redirectURL
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            replacementToken: replacementToken
            enabled: true
          timePseudoStreaming:
            jumpToTimeStartParam: jumpToTimeStartParam
            jumpToTimeEndParam: jumpToTimeEndParam
            id: id
            enabled: true
          queryStrParam:
            dispositionOverride: dispositionOverride
            dispositionType: dispositionType
            jumpToTimeEnd: jumpToTimeEnd
            rateLimitInitial: rateLimitInitial
            jumpToByteInitialBytes: jumpToByteInitialBytes
            jumpToByteStartOffset: jumpToByteStartOffset
            jumpToTimeStart: jumpToTimeStart
            id: id
            rateLimitSustained: rateLimitSustained
            enabled: true
            dispositionName: dispositionName
          authUrlSignAliCloudC:
          - pathFilter: pathFilter
            expirationExtension: 5.962133916683182
            expireField: expireField
            tokenField: tokenField
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          - pathFilter: pathFilter
            expirationExtension: 5.962133916683182
            expireField: expireField
            tokenField: tokenField
            methodFilter: methodFilter
            headerFilter: headerFilter
            id: id
            enabled: true
            passPhrase: passPhrase
          authGeo:
          - values: values
            id: id
            enabled: true
          - values: values
            id: id
            enabled: true
          authReferer:
            referer: referer
            id: id
            enabled: true
          customer:
            opLogFields: opLogFields
            accessLogFields: accessLogFields
            id: id
            receiptLogFields: receiptLogFields
      properties:
        configuration:
          $ref: '#/components/schemas/custconfConfiguration'
      type: object
    cdnUpdateSiteCertificateHostsRequest:
      properties:
        hosts:
          description: The SSL certificated common and SAN hosts
          items:
            type: string
          type: array
      type: object
    cdnUpdateSiteScriptRequest:
      properties:
        code:
          description: Base64 encoded contents of a serverless script
          format: byte
          type: string
        paths:
          description: The HTTP request paths that are handled by a serverless script
          items:
            type: string
          type: array
      type: object
    cdnUpdateSiteScriptResponse:
      description: The response from a request to update an EdgeEngine script
      example:
        script:
          createdAt: 2000-01-23T04:56:07.000+00:00
          code: code
          paths:
          - paths
          - paths
          stackId: stackId
          name: name
          siteId: siteId
          id: id
          version: version
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        script:
          $ref: '#/components/schemas/cdnSiteScript'
      type: object
    cdnVerificationRequirements:
      description: Conditions that must be met to verify ownership of a domain for
        SSL certificate provisioning
      example:
        httpVerificationDetails:
          path: path
          body: body
          contentType: contentType
        dnsVerificationDetails:
          records:
          - data: data
            name: name
            type: type
            class: class
            ttl: 0
          - data: data
            name: name
            type: type
            class: class
            ttl: 0
          dnsRecords:
          - dnsRecords
          - dnsRecords
      properties:
        dnsVerificationDetails:
          $ref: '#/components/schemas/cdnDnsVerificationDetails'
        httpVerificationDetails:
          $ref: '#/components/schemas/cdnHttpVerificationDetails'
        verificationMethod:
          $ref: '#/components/schemas/cdnCertificateVerificationMethod'
      type: object
    cdncustconfOrigin:
      example:
        originPullHeaders: originPullHeaders
        host: host
        id: id
        originCacheHeaders: originCacheHeaders
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        host:
          type: string
        originPullHeaders:
          description: String of values delimited by a '|' character.
          type: string
        originCacheHeaders:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfAccessLogs:
      description: Enable/Disable access logs
      example:
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfAccessLogsConfig:
      description: Access log settings
      example:
        extraLogFields: extraLogFields
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        extraLogFields:
          description: String of values delimited by a ',' character.
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfAuthACL:
      description: IP address restrictions allow you to configure your CDN container
        to grant or deny a specific IP addresses or range of IP addresses from accessing
        content cached in a directory in your CDN container.
      example:
        header: header
        id: id
        ipList: ipList
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        accessCode:
          $ref: '#/components/schemas/AuthACLAccessCodeEnumWrapperValue'
        ipList:
          description: String of values delimited by a ',' character. This is a list
            of IP addresses considered for this policy.
          type: string
        protocol:
          $ref: '#/components/schemas/custconfAuthACLProtocolEnumWrapperValue'
        clientIPSrc:
          $ref: '#/components/schemas/AuthACLClientIPSrcEnumWrapperValue'
        header:
          description: This allows you to specify the name of a HTTP request header
            which will contain the client IP address to use for this policy.
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfAuthACLProtocolEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - http
      - https
      - both
      type: string
    custconfAuthGeo:
      description: Geographic restrictions allow you to restrict content to end users
        in specific locations. The IP address of incoming requests is checked against
        a current list of IP allocations to countries and to states within the US.
        If an end user's IP address is not found in the list, they are allowed access
        to the content by default. The feature has both an Include and an Exclude
        list which are used to target the allowed audience.
      example:
        values: values
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        code:
          $ref: '#/components/schemas/AuthGeoCodeEnumWrapperValue'
        values:
          description: String of values delimited by a ',' character. These are the
            region codes you are targeting for this policy. The values that can be
            supplied within this field are those that are supported by the MaxMind®
            GeoIP database.
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfAuthHttpBasic:
      description: HTTP basic authentication policies allow you to control access
        to your content by requiring the end user to enter a valid username and password
        before gaining access to content.
      example:
        realm: realm
        id: id
        bindingPoint: bindingPoint
        ttl: 0.8008281904610115
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        bindingPoint:
          description: This is a URL to a resource on the authentication server responsible
            for authentication of users.
          type: string
        realm:
          description: This is the authentication realm given back to the user on
            requests which do not contain the authentication credentials. Browsers
            typically display this value to the user when the login credentials are
            requested.
          type: string
        ttl:
          description: This is the number of seconds the authentication session will
            be cached by the browsers. After this time, browsers will be asked to
            present the user credentials again for re-authentication.
          format: int64
          type: number
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfAuthReferer:
      description: HTTP Referrer restriction policies allow you to limit access to
        your published CDN URLs based on the HTTP Referrer header submitted by the
        browser. This restriction policy prevents your content from being easily distributed
        on unauthorized websites (also known as hot linking or deep linking). Once
        this policy is applied to your CDN container, websites that are not listed
        in this policy will be denied access to the content cached at this location.
      example:
        referer: referer
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        referer:
          description: String of values delimited by a '|' character. This is a list
            of domains authorized to access content from this path in the container.
            You may use wildcards to specify multiple websites hosted on the same
            domain.
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfAuthUrlAsymmetricSignTlu:
      example:
        pathFilter: pathFilter
        expireParameterName: expireParameterName
        publicKeyIdMap:
          key: publicKeyIdMap
        digestParameterName: digestParameterName
        keyIdParameterName: keyIdParameterName
        algorithmIdParameterName: algorithmIdParameterName
        methodFilter: methodFilter
        headerFilter: headerFilter
        id: id
        enabled: true
        algorithmIdMap: {}
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        expireParameterName:
          type: string
        keyIdParameterName:
          type: string
        algorithmIdParameterName:
          type: string
        digestParameterName:
          type: string
        publicKeyIdMap:
          additionalProperties:
            type: string
          type: object
        algorithmIdMap:
          additionalProperties:
            $ref: '#/components/schemas/custconfAuthUrlAsymmetricSignTluAlgorithmIdMapEnumWrapperValue'
          type: object
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfAuthUrlAsymmetricSignTluAlgorithmIdMapEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - hmacsha1
      - hmacsha256
      type: string
    custconfAuthUrlSign:
      description: URL Signing policies allow you to restrict access to your content
        by configuring a "shared secret" with StackPath. This "shared secret" is used
        to apply an MD5 hashing algorithm on the URL to validate the signature supplied
        on the request. Since the "shared secret" is only known by the publisher and
        StackPath, URL signatures cannot be generated by unauthorized users.
      example:
        uriLengthField: uriLengthField
        tokenField: tokenField
        expiresField: expiresField
        methodFilter: methodFilter
        passPhraseField: passPhraseField
        enabled: true
        pathFilter: pathFilter
        userAgentField: userAgentField
        headerFilter: headerFilter
        id: id
        ipAddressField: ipAddressField
        ignoreFieldsAfterToken: true
        passPhrase: passPhrase
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        tokenField:
          description: This is the name of the query string parameter that will be
            used by the publisher to specify the signature for the URL.
          type: string
        ignoreFieldsAfterToken:
          description: Select this option if you want StackPath to exclude query string
            parameters specified after the passphrase in the validation process.
          format: boolean
          type: boolean
        passPhraseField:
          description: This is the name of the query string parameter that contains
            the value of the secret. This query string parameter is only used during
            the generation and validation of a URL signature and should not be present
            in the published URL.
          type: string
        passPhrase:
          description: The shared secret used during the signing process. This value
            should only be known by StackPath and systems authorized to sign your
            content.
          type: string
        expiresField:
          description: This is the name of the query string parameter that contains
            the Epoch time after which the URL is considered invalid.
          type: string
        ipAddressField:
          description: This is a query string parameter that contains an IPv4 address
            to which the published URL will be restricted.
          type: string
        uriLengthField:
          description: This is a query string parameter used to limit the number of
            characters in the path that should be considered when validating the URL
            signature. This feature allows you to reuse the same signature on all
            assets stored in the same cache path. Setting this value to 0 will strip
            off the filename in the URL (leaving the trailing slash) when calculating
            the checksum.
          type: string
        userAgentField:
          description: This is a query string parameter used to restrict the published
            URL to a specific user agent. Publishers can use this feature during the
            signing process to ensure that only a specific user agent can access the
            published content. You do not need to specify the user agent on the published
            URL. StackPath will use the HTTP User-Agent header value during signature
            validation.
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfAuthUrlSignAliCloudA:
      example:
        pathFilter: pathFilter
        expirationExtension: 6.027456183070403
        includeParamsBeforeToken: true
        tokenField: tokenField
        methodFilter: methodFilter
        headerFilter: headerFilter
        id: id
        enabled: true
        passPhrase: passPhrase
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        passPhrase:
          type: string
        tokenField:
          type: string
        includeParamsBeforeToken:
          format: boolean
          type: boolean
        expirationExtension:
          format: int64
          type: number
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfAuthUrlSignAliCloudB:
      example:
        pathFilter: pathFilter
        expirationExtension: 1.4658129805029452
        methodFilter: methodFilter
        headerFilter: headerFilter
        id: id
        enabled: true
        passPhrase: passPhrase
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        passPhrase:
          type: string
        expirationExtension:
          format: int64
          type: number
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfAuthUrlSignAliCloudC:
      example:
        pathFilter: pathFilter
        expirationExtension: 5.962133916683182
        expireField: expireField
        tokenField: tokenField
        methodFilter: methodFilter
        headerFilter: headerFilter
        id: id
        enabled: true
        passPhrase: passPhrase
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        passPhrase:
          type: string
        expirationExtension:
          format: int64
          type: number
        tokenField:
          type: string
        expireField:
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfAuthUrlSignHmacTlu:
      example:
        pathFilter: pathFilter
        expireParameterName: expireParameterName
        digestParameterName: digestParameterName
        keyIdParameterName: keyIdParameterName
        algorithmIdParameterName: algorithmIdParameterName
        methodFilter: methodFilter
        headerFilter: headerFilter
        id: id
        symmetricKeyIdMap:
          key: symmetricKeyIdMap
        enabled: true
        algorithmIdMap: {}
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        expireParameterName:
          type: string
        keyIdParameterName:
          type: string
        algorithmIdParameterName:
          type: string
        digestParameterName:
          type: string
        symmetricKeyIdMap:
          additionalProperties:
            type: string
          type: object
        algorithmIdMap:
          additionalProperties:
            $ref: '#/components/schemas/custconfAuthUrlSignHmacTluAlgorithmIdMapEnumWrapperValue'
          type: object
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfAuthUrlSignHmacTluAlgorithmIdMapEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - hmacsha1
      - hmacsha256
      type: string
    custconfAuthUrlSignIq:
      example:
        pathFilter: pathFilter
        secretKey: secretKey
        methodFilter: methodFilter
        headerFilter: headerFilter
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        secretKey:
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfAwsSignedOriginPullV4:
      example:
        accessKeyId: accessKeyId
        expireTimeSeconds: 1.4894159098541704
        awsRegion: awsRegion
        methodFilter: methodFilter
        signedHeaders: signedHeaders
        bucketIdentifier: bucketIdentifier
        enabled: true
        secretAccessKey: secretAccessKey
        pathFilter: pathFilter
        headerFilter: headerFilter
        id: id
        awsService: awsService
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          format: boolean
          type: boolean
        bucketIdentifier:
          type: string
        accessKeyId:
          type: string
        secretAccessKey:
          type: string
        awsRegion:
          type: string
        awsService:
          type: string
        expireTimeSeconds:
          format: int64
          type: number
        signedHeaders:
          description: String of values delimited by a ',' character.
          type: string
        authenticationType:
          $ref: '#/components/schemas/custconfAwsSignedOriginPullV4AuthenticationTypeEnumWrapperValue'
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfAwsSignedOriginPullV4AuthenticationTypeEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - query
      - header
      type: string
    custconfAwsSignedS3PostV4:
      example:
        accessKeyId: accessKeyId
        expireTimeSeconds: 6.84685269835264
        awsRegion: awsRegion
        methodFilter: methodFilter
        signedHeaders: signedHeaders
        bucketIdentifier: bucketIdentifier
        enabled: true
        secretAccessKey: secretAccessKey
        pathFilter: pathFilter
        headerFilter: headerFilter
        id: id
        awsService: awsService
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          format: boolean
          type: boolean
        bucketIdentifier:
          type: string
        accessKeyId:
          type: string
        secretAccessKey:
          type: string
        awsRegion:
          type: string
        awsService:
          type: string
        expireTimeSeconds:
          format: int64
          type: number
        signedHeaders:
          description: String of values delimited by a ',' character.
          type: string
        authenticationType:
          $ref: '#/components/schemas/custconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValue'
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - query
      - header
      type: string
    custconfBandWidthLimit:
      description: 'The pattern based bandwidth throttling policy allows you to limit
        the transfer rate of assets to end users based on a set of rules matching
        the request''s HTTP User-Agent and/or the path. Each rule must be expressed
        in the following format: <User-Agent Pattern>:<path pattern 1, path pattern
        2>. For example, the pattern:  "Mozilla*:*.mp3,*dir*.exe|*IE*:*.jpg,*.zip|*ios
        6*:* " will match all MP3 files and EXE files containing the substring "dir"
        that are requested by a User-Agent containing the substring "Mozilla," all
        JPG and ZIP files requested by a User-Agent containing the substring "IE,"
        and all requests made by User-Agents containing the substring "ios 6."'
      example:
        values: values
        rule: rule
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        rule:
          description: String of values delimited by a '|' character. These are pattern
            match rules to use for applying rate limiting on requests.
          type: string
        values:
          description: 'These are the initial bytes (ri) and the sustained rate (rs)
            query string parameters to use for this rule. Example: ri=100,rs=1000'
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfBandwidthRateLimit:
      example:
        pathFilter: pathFilter
        sustainedRateName: sustainedRateName
        methodFilter: methodFilter
        headerFilter: headerFilter
        id: id
        initialBurstName: initialBurstName
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        initialBurstName:
          type: string
        sustainedRateName:
          type: string
        initialBurstUnits:
          $ref: '#/components/schemas/BandwidthRateLimitInitialBurstUnitsEnumWrapperValue'
        sustainedRateUnits:
          $ref: '#/components/schemas/BandwidthRateLimitSustainedRateUnitsEnumWrapperValue'
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfBypassCache:
      description: Bypass content caching on filter match
      example:
        pathFilter: pathFilter
        cookieFilter: cookieFilter
        methodFilter: methodFilter
        headerFilter: headerFilter
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
        cookieFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfCacheControl:
      description: The browser caching policy allows you to control the browser caching
        behavior of your assets independently from the CDN cache. For example, this
        policy allows you to set lower or higher TTLs for the browser than those of
        the CDN cache.
      example:
        statusCodeMatch: statusCodeMatch
        maxAge: 5
        id: id
        override: override
        mustRevalidate: true
        synchronizeMaxAge: true
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        statusCodeMatch:
          description: String of values delimited by a ',' character.
          type: string
        maxAge:
          description: The client TTL controls the lifetime of the asset in the browser's
            cache. The value entered here will be sent to the browser in the Cache-Control
            max-age directive for HTTP 1.1 clients and the Expires header for HTTP
            1.0 clients.
          format: int32
          type: integer
        mustRevalidate:
          description: Selecting this option instructs the CDN caching servers to
            insert the must-revalidate directive on all HTTP responses sent to clients.
          format: boolean
          type: boolean
        synchronizeMaxAge:
          description: Selecting this option allows the CDN to synchronize the Max-Age
            header it sends to clients with the remaining TTL of the asset in the
            cache. This allows assets to expire from the browser cache at the same
            time they expire from the CDN.
          format: boolean
          type: boolean
        override:
          description: 'This allows you to specify a custom Cache-Control header to
            be used by the CDN on all HTTP responses targeted by this policy. Note:
            Do not include the header name (Cache-Control) in this field. Only the
            value of the header should be specified.'
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfCacheKeyModification:
      description: The Cache Key Modification policy allows for manipulation of the
        way the cache uniquely stores assets.
      example:
        normalizeKeyPathToLowerCase: true
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        normalizeKeyPathToLowerCase:
          description: When set, purges and requests for a file will be case insensitive.
            This setting is useful if you have a case insensitive origin server and
            would like to avoid duplicating assets.
          format: boolean
          type: boolean
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfClientRequestModification:
      example:
        pathFilter: pathFilter
        addHeaders: addHeaders
        cookieFilter: cookieFilter
        headerPattern: headerPattern
        headerRewrite: headerRewrite
        methodFilter: methodFilter
        headerFilter: headerFilter
        id: id
        urlPattern: urlPattern
        urlRewrite: urlRewrite
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        urlPattern:
          type: string
        urlRewrite:
          type: string
        headerPattern:
          type: string
        headerRewrite:
          type: string
        addHeaders:
          description: String of values delimited by a '|' character. This is the
            static HTTP header you want inserted into the CDN request. Start value
            with "append:", "replace:" or "create:" which defines if Header will be
            added, replaced or create if not exists. Default is append.
          type: string
        flowControl:
          $ref: '#/components/schemas/custconfClientRequestModificationFlowControlEnumWrapperValue'
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
        cookieFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfClientRequestModificationFlowControlEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - next
      - break
      type: string
    custconfClientResponseModification:
      example:
        pathFilter: pathFilter
        addHeaders: addHeaders
        headerPattern: headerPattern
        statusCodeRewrite: 2.3021358869347655
        headerRewrite: headerRewrite
        methodFilter: methodFilter
        headerFilter: headerFilter
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        statusCodeRewrite:
          format: int64
          type: number
        headerPattern:
          type: string
        headerRewrite:
          type: string
        addHeaders:
          description: String of values delimited by a '|' character. This is the
            static HTTP header you want inserted into the CDN response. Start value
            with "append:", "replace:" or "create:" which defines if Header will be
            added, replaced or create if not exists. Default is append.
          type: string
        flowControl:
          $ref: '#/components/schemas/custconfClientResponseModificationFlowControlEnumWrapperValue'
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfClientResponseModificationFlowControlEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - next
      - break
      type: string
    custconfCompression:
      description: The compression policy allows you to provide a list of file extensions
        you want the CDN caching servers to automatically compress before delivering
        content to end users. This policy is typically used when your origin server
        does not support compression or you are unable to configure your origin to
        compress your files. If your origin is configured to already compress files,
        you should consider adding the Compressed Origin Pull policy to your host,
        which will enable the CDN caching server to request compressed (gzip) version
        of your assets. The compressed origin pull policy can be found in the Origin
        Pull policies list. Please note that our caching servers schedule the compression
        of files, and typically you do not see the compressed delivery until the file
        has been requested several times. Typically, this list is comprised of text
        files like javascript, html and CSS files. You should not include file extensions
        that match media files (images, videos, or audio files) or any other file
        format that includes a built in compression algorithm. Attempting to further
        compress these types of files usually results in a larger file being delivered
        to end users.
      example:
        level: level
        mime: mime
        gzip: gzip
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        gzip:
          description: String of values delimited by a ',' character. The list of
            file extensions you want the caching servers to use to identify the content
            you want compressed before delivering it to end users
          type: string
        mime:
          description: String of values delimited by a ',' character. A list of rules
            based on MIME types you want the caching servers to use to identify content
            you want compressed before delivering it to end users.
          type: string
        level:
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfConfiguration:
      description: Advanced configuration options
      example:
        responseHeader:
          http: http
          enableETag: true
          id: id
          enabled: true
        originPullCacheExtension:
          expiredCacheExtension: 3
          originUnreachableCacheExtension: 2
          id: id
          enabled: true
        accessLogsConfig:
          extraLogFields: extraLogFields
          id: id
          enabled: true
        fileSegmentation:
          id: id
          enabled: true
        awsSignedOriginPullV4:
        - accessKeyId: accessKeyId
          expireTimeSeconds: 1.4894159098541704
          awsRegion: awsRegion
          methodFilter: methodFilter
          signedHeaders: signedHeaders
          bucketIdentifier: bucketIdentifier
          enabled: true
          secretAccessKey: secretAccessKey
          pathFilter: pathFilter
          headerFilter: headerFilter
          id: id
          awsService: awsService
        - accessKeyId: accessKeyId
          expireTimeSeconds: 1.4894159098541704
          awsRegion: awsRegion
          methodFilter: methodFilter
          signedHeaders: signedHeaders
          bucketIdentifier: bucketIdentifier
          enabled: true
          secretAccessKey: secretAccessKey
          pathFilter: pathFilter
          headerFilter: headerFilter
          id: id
          awsService: awsService
        authUrlSignHmacTlu:
        - pathFilter: pathFilter
          expireParameterName: expireParameterName
          digestParameterName: digestParameterName
          keyIdParameterName: keyIdParameterName
          algorithmIdParameterName: algorithmIdParameterName
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          symmetricKeyIdMap:
            key: symmetricKeyIdMap
          enabled: true
          algorithmIdMap: {}
        - pathFilter: pathFilter
          expireParameterName: expireParameterName
          digestParameterName: digestParameterName
          keyIdParameterName: keyIdParameterName
          algorithmIdParameterName: algorithmIdParameterName
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          symmetricKeyIdMap:
            key: symmetricKeyIdMap
          enabled: true
          algorithmIdMap: {}
        originPullResumeDownload:
        - pathFilter: pathFilter
          maximumAttempts: 1.0246457001441578
          minimumBodyBytesConsumed: minimumBodyBytesConsumed
          requireOriginRangeSupport: true
          headerFilter: headerFilter
          id: id
          enabled: true
          originalStatusCodeMatch: originalStatusCodeMatch
        - pathFilter: pathFilter
          maximumAttempts: 1.0246457001441578
          minimumBodyBytesConsumed: minimumBodyBytesConsumed
          requireOriginRangeSupport: true
          headerFilter: headerFilter
          id: id
          enabled: true
          originalStatusCodeMatch: originalStatusCodeMatch
        gzipOriginPull:
          id: id
          enabled: true
        awsSignedS3PostV4:
        - accessKeyId: accessKeyId
          expireTimeSeconds: 6.84685269835264
          awsRegion: awsRegion
          methodFilter: methodFilter
          signedHeaders: signedHeaders
          bucketIdentifier: bucketIdentifier
          enabled: true
          secretAccessKey: secretAccessKey
          pathFilter: pathFilter
          headerFilter: headerFilter
          id: id
          awsService: awsService
        - accessKeyId: accessKeyId
          expireTimeSeconds: 6.84685269835264
          awsRegion: awsRegion
          methodFilter: methodFilter
          signedHeaders: signedHeaders
          bucketIdentifier: bucketIdentifier
          enabled: true
          secretAccessKey: secretAccessKey
          pathFilter: pathFilter
          headerFilter: headerFilter
          id: id
          awsService: awsService
        bandwidthRateLimit:
          pathFilter: pathFilter
          sustainedRateName: sustainedRateName
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          initialBurstName: initialBurstName
          enabled: true
        vHost:
        - domain: domain
          id: id
          enabled: true
        - domain: domain
          id: id
          enabled: true
        originRequestModification:
        - pathFilter: pathFilter
          addHeaders: addHeaders
          cookieFilter: cookieFilter
          headerPattern: headerPattern
          headerRewrite: headerRewrite
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          urlPattern: urlPattern
          flowControl: flowControl
          urlRewrite: urlRewrite
          enabled: true
        - pathFilter: pathFilter
          addHeaders: addHeaders
          cookieFilter: cookieFilter
          headerPattern: headerPattern
          headerRewrite: headerRewrite
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          urlPattern: urlPattern
          flowControl: flowControl
          urlRewrite: urlRewrite
          enabled: true
        customHeader:
          xForwardedForOrigin: xForwardedForOrigin
          xForwardedForAuth: xForwardedForAuth
          id: id
          enabled: true
        originPull:
          noQSParams: true
          id: id
          retryMethods: retryMethods
          enabled: true
        robotsTxt:
        - cacheControlHeader: cacheControlHeader
          pathFilter: pathFilter
          file: file
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
        - cacheControlHeader: cacheControlHeader
          pathFilter: pathFilter
          file: file
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
        originPullLogsConfig:
          extraLogFields: extraLogFields
          id: id
          enabled: true
        cacheControl:
        - statusCodeMatch: statusCodeMatch
          maxAge: 5
          id: id
          override: override
          mustRevalidate: true
          synchronizeMaxAge: true
          enabled: true
        - statusCodeMatch: statusCodeMatch
          maxAge: 5
          id: id
          override: override
          mustRevalidate: true
          synchronizeMaxAge: true
          enabled: true
        originPullHost:
        - pathFilter: pathFilter
          password: password
          originUrl: originUrl
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          userName: userName
        - pathFilter: pathFilter
          password: password
          originUrl: originUrl
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          userName: userName
        authACL:
        - header: header
          id: id
          ipList: ipList
          enabled: true
        - header: header
          id: id
          ipList: ipList
          enabled: true
        originPullLogs:
          id: id
          enabled: true
        redirectExceptions:
          redirectAgentCode: redirectAgentCode
          id: id
          enabled: true
        compression:
          level: level
          mime: mime
          gzip: gzip
          id: id
          enabled: true
        authUrlAsymmetricSignTlu:
        - pathFilter: pathFilter
          expireParameterName: expireParameterName
          publicKeyIdMap:
            key: publicKeyIdMap
          digestParameterName: digestParameterName
          keyIdParameterName: keyIdParameterName
          algorithmIdParameterName: algorithmIdParameterName
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
          algorithmIdMap: {}
        - pathFilter: pathFilter
          expireParameterName: expireParameterName
          publicKeyIdMap:
            key: publicKeyIdMap
          digestParameterName: digestParameterName
          keyIdParameterName: keyIdParameterName
          algorithmIdParameterName: algorithmIdParameterName
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
          algorithmIdMap: {}
        failSafeOriginPull:
          pathFilter: pathFilter
          statusCodeMatch: statusCodeMatch
          id: id
          enabled: true
        origin:
        - originPullHeaders: originPullHeaders
          host: host
          id: id
          originCacheHeaders: originCacheHeaders
        - originPullHeaders: originPullHeaders
          host: host
          id: id
          originCacheHeaders: originCacheHeaders
        authUrlSignIq:
        - pathFilter: pathFilter
          secretKey: secretKey
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
        - pathFilter: pathFilter
          secretKey: secretKey
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
        authUrlSign:
        - uriLengthField: uriLengthField
          tokenField: tokenField
          expiresField: expiresField
          methodFilter: methodFilter
          passPhraseField: passPhraseField
          enabled: true
          pathFilter: pathFilter
          userAgentField: userAgentField
          headerFilter: headerFilter
          id: id
          ipAddressField: ipAddressField
          ignoreFieldsAfterToken: true
          passPhrase: passPhrase
        - uriLengthField: uriLengthField
          tokenField: tokenField
          expiresField: expiresField
          methodFilter: methodFilter
          passPhraseField: passPhraseField
          enabled: true
          pathFilter: pathFilter
          userAgentField: userAgentField
          headerFilter: headerFilter
          id: id
          ipAddressField: ipAddressField
          ignoreFieldsAfterToken: true
          passPhrase: passPhrase
        originPullProtocol:
          enableSNI: true
          id: id
        clientResponseModification:
        - pathFilter: pathFilter
          addHeaders: addHeaders
          headerPattern: headerPattern
          statusCodeRewrite: 2.3021358869347655
          headerRewrite: headerRewrite
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
        - pathFilter: pathFilter
          addHeaders: addHeaders
          headerPattern: headerPattern
          statusCodeRewrite: 2.3021358869347655
          headerRewrite: headerRewrite
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
        dynamicContent:
        - pathFilter: pathFilter
          queryParams: queryParams
          methodFilter: methodFilter
          headerFields: headerFields
          headerFilter: headerFilter
          id: id
          enabled: true
        - pathFilter: pathFilter
          queryParams: queryParams
          methodFilter: methodFilter
          headerFields: headerFields
          headerFilter: headerFilter
          id: id
          enabled: true
        contentDispositionByHeader:
        - pathFilter: pathFilter
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          overrideOriginHeader: true
          headerFieldName: headerFieldName
          headerValueMatch: headerValueMatch
          enabled: true
        - pathFilter: pathFilter
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          overrideOriginHeader: true
          headerFieldName: headerFieldName
          headerValueMatch: headerValueMatch
          enabled: true
        clientRequestModification:
        - pathFilter: pathFilter
          addHeaders: addHeaders
          cookieFilter: cookieFilter
          headerPattern: headerPattern
          headerRewrite: headerRewrite
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          urlPattern: urlPattern
          urlRewrite: urlRewrite
          enabled: true
        - pathFilter: pathFilter
          addHeaders: addHeaders
          cookieFilter: cookieFilter
          headerPattern: headerPattern
          headerRewrite: headerRewrite
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          urlPattern: urlPattern
          urlRewrite: urlRewrite
          enabled: true
        contentDispositionByURL:
          dispositionTypeQSParam: dispositionTypeQSParam
          dispositionNameQSParam: dispositionNameQSParam
          id: id
          dispositionOverrideQSParam: dispositionOverrideQSParam
          overrideOriginHeader: true
          enabled: true
        accessLogs:
          id: id
          enabled: true
        staticHeader:
        - pathFilter: pathFilter
          originPull: originPull
          methodFilter: methodFilter
          http: http
          headerFilter: headerFilter
          id: id
          enabled: true
          clientRequest: clientRequest
        - pathFilter: pathFilter
          originPull: originPull
          methodFilter: methodFilter
          http: http
          headerFilter: headerFilter
          id: id
          enabled: true
          clientRequest: clientRequest
        farAheadRangeProxy:
          id: id
          thresholdBytes: 9.301444243932576
          enabled: true
        flvPseudoStreaming:
          jumpToByteInitialBytesParam: jumpToByteInitialBytesParam
          id: id
          jumpToByteStartOffsetParam: jumpToByteStartOffsetParam
          enabled: true
        originPersistentConnections:
          id: id
          enabled: true
        authHttpBasic:
          realm: realm
          id: id
          bindingPoint: bindingPoint
          ttl: 0.8008281904610115
          enabled: true
        httpMethods:
          passThru: passThru
          id: id
          enabled: true
        cacheKeyModification:
          normalizeKeyPathToLowerCase: true
          id: id
          enabled: true
        originResponseModification:
        - pathFilter: pathFilter
          addHeaders: addHeaders
          headerPattern: headerPattern
          statusCodeRewrite: 7.386281948385884
          headerRewrite: headerRewrite
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
        - pathFilter: pathFilter
          addHeaders: addHeaders
          headerPattern: headerPattern
          statusCodeRewrite: 7.386281948385884
          headerRewrite: headerRewrite
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
        http2Support:
          id: id
          enabled: true
        customMimeType:
        - pathFilter: pathFilter
          code: code
          extensionMap: extensionMap
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
        - pathFilter: pathFilter
          code: code
          extensionMap: extensionMap
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
        originPullPolicy:
        - updateHttpHeadersOn304Response: true
          honorMustRevalidate: true
          methodFilter: methodFilter
          honorSMaxAge: true
          httpHeaders: httpHeaders
          enabled: true
          pathFilter: pathFilter
          statusCodeMatch: statusCodeMatch
          forceBypassCache: true
          honorNoCache: true
          mustRevalidateToNoCache: true
          bypassCacheIdentifier: bypassCacheIdentifier
          honorPrivate: true
          expireSeconds: 4
          headerFilter: headerFilter
          id: id
          honorNoStore: true
          contentTypeFilter: contentTypeFilter
          maxAgeZeroToNoCache: true
        - updateHttpHeadersOn304Response: true
          honorMustRevalidate: true
          methodFilter: methodFilter
          honorSMaxAge: true
          httpHeaders: httpHeaders
          enabled: true
          pathFilter: pathFilter
          statusCodeMatch: statusCodeMatch
          forceBypassCache: true
          honorNoCache: true
          mustRevalidateToNoCache: true
          bypassCacheIdentifier: bypassCacheIdentifier
          honorPrivate: true
          expireSeconds: 4
          headerFilter: headerFilter
          id: id
          honorNoStore: true
          contentTypeFilter: contentTypeFilter
          maxAgeZeroToNoCache: true
        receiptLogsConfig:
          extraLogFields: extraLogFields
          id: id
          enabled: true
        authUrlSignAliCloudB:
        - pathFilter: pathFilter
          expirationExtension: 1.4658129805029452
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
          passPhrase: passPhrase
        - pathFilter: pathFilter
          expirationExtension: 1.4658129805029452
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
          passPhrase: passPhrase
        authUrlSignAliCloudA:
        - pathFilter: pathFilter
          expirationExtension: 6.027456183070403
          includeParamsBeforeToken: true
          tokenField: tokenField
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
          passPhrase: passPhrase
        - pathFilter: pathFilter
          expirationExtension: 6.027456183070403
          includeParamsBeforeToken: true
          tokenField: tokenField
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
          passPhrase: passPhrase
        dynamicCacheRule:
        - pathFilter: pathFilter
          headers: headers
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
          statusCode: 7.061401241503109
        - pathFilter: pathFilter
          headers: headers
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
          statusCode: 7.061401241503109
        bandWidthLimit:
          values: values
          rule: rule
          id: id
          enabled: true
        bypassCache:
        - pathFilter: pathFilter
          cookieFilter: cookieFilter
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
        - pathFilter: pathFilter
          cookieFilter: cookieFilter
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
        redirectMappings:
        - pathFilter: pathFilter
          code: 1.2315135367772556
          redirectURL: redirectURL
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          replacementToken: replacementToken
          enabled: true
        - pathFilter: pathFilter
          code: 1.2315135367772556
          redirectURL: redirectURL
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          replacementToken: replacementToken
          enabled: true
        timePseudoStreaming:
          jumpToTimeStartParam: jumpToTimeStartParam
          jumpToTimeEndParam: jumpToTimeEndParam
          id: id
          enabled: true
        queryStrParam:
          dispositionOverride: dispositionOverride
          dispositionType: dispositionType
          jumpToTimeEnd: jumpToTimeEnd
          rateLimitInitial: rateLimitInitial
          jumpToByteInitialBytes: jumpToByteInitialBytes
          jumpToByteStartOffset: jumpToByteStartOffset
          jumpToTimeStart: jumpToTimeStart
          id: id
          rateLimitSustained: rateLimitSustained
          enabled: true
          dispositionName: dispositionName
        authUrlSignAliCloudC:
        - pathFilter: pathFilter
          expirationExtension: 5.962133916683182
          expireField: expireField
          tokenField: tokenField
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
          passPhrase: passPhrase
        - pathFilter: pathFilter
          expirationExtension: 5.962133916683182
          expireField: expireField
          tokenField: tokenField
          methodFilter: methodFilter
          headerFilter: headerFilter
          id: id
          enabled: true
          passPhrase: passPhrase
        authGeo:
        - values: values
          id: id
          enabled: true
        - values: values
          id: id
          enabled: true
        authReferer:
          referer: referer
          id: id
          enabled: true
        customer:
          opLogFields: opLogFields
          accessLogFields: accessLogFields
          id: id
          receiptLogFields: receiptLogFields
      properties:
        accessLogs:
          $ref: '#/components/schemas/custconfAccessLogs'
        accessLogsConfig:
          $ref: '#/components/schemas/custconfAccessLogsConfig'
        authACL:
          description: IP address restrictions allow you to configure your CDN container
            to grant or deny a specific IP addresses or range of IP addresses from
            accessing content cached in a directory in your CDN container.
          items:
            $ref: '#/components/schemas/custconfAuthACL'
          type: array
        authGeo:
          description: Geographic restrictions allow you to restrict content to end
            users in specific locations. The IP address of incoming requests is checked
            against a current list of IP allocations to countries and to states within
            the US. If an end user's IP address is not found in the list, they are
            allowed access to the content by default. The feature has both an Include
            and an Exclude list which are used to target the allowed audience.
          items:
            $ref: '#/components/schemas/custconfAuthGeo'
          type: array
        authHttpBasic:
          $ref: '#/components/schemas/custconfAuthHttpBasic'
        authReferer:
          $ref: '#/components/schemas/custconfAuthReferer'
        authUrlSign:
          description: URL Signing policies allow you to restrict access to your content
            by configuring a "shared secret" with StackPath. This "shared secret"
            is used to apply an MD5 hashing algorithm on the URL to validate the signature
            supplied on the request. Since the "shared secret" is only known by the
            publisher and StackPath, URL signatures cannot be generated by unauthorized
            users.
          items:
            $ref: '#/components/schemas/custconfAuthUrlSign'
          type: array
        authUrlSignAliCloudA:
          items:
            $ref: '#/components/schemas/custconfAuthUrlSignAliCloudA'
          type: array
        authUrlSignAliCloudB:
          items:
            $ref: '#/components/schemas/custconfAuthUrlSignAliCloudB'
          type: array
        authUrlSignAliCloudC:
          items:
            $ref: '#/components/schemas/custconfAuthUrlSignAliCloudC'
          type: array
        authUrlSignHmacTlu:
          items:
            $ref: '#/components/schemas/custconfAuthUrlSignHmacTlu'
          type: array
        authUrlSignIq:
          items:
            $ref: '#/components/schemas/custconfAuthUrlSignIq'
          type: array
        authUrlAsymmetricSignTlu:
          items:
            $ref: '#/components/schemas/custconfAuthUrlAsymmetricSignTlu'
          type: array
        bandWidthLimit:
          $ref: '#/components/schemas/custconfBandWidthLimit'
        bandwidthRateLimit:
          $ref: '#/components/schemas/custconfBandwidthRateLimit'
        bypassCache:
          description: Bypass content caching on filter match
          items:
            $ref: '#/components/schemas/custconfBypassCache'
          type: array
        cacheControl:
          description: The browser caching policy allows you to control the browser
            caching behavior of your assets independently from the CDN cache. For
            example, this policy allows you to set lower or higher TTLs for the browser
            than those of the CDN cache.
          items:
            $ref: '#/components/schemas/custconfCacheControl'
          type: array
        cacheKeyModification:
          $ref: '#/components/schemas/custconfCacheKeyModification'
        clientRequestModification:
          items:
            $ref: '#/components/schemas/custconfClientRequestModification'
          type: array
        clientResponseModification:
          items:
            $ref: '#/components/schemas/custconfClientResponseModification'
          type: array
        compression:
          $ref: '#/components/schemas/custconfCompression'
        contentDispositionByURL:
          $ref: '#/components/schemas/custconfContentDispositionByURL'
        contentDispositionByHeader:
          description: The content disposition by HTTP header match policy allows
            you to control the Content-Disposition delivered by the CDN using a pattern
            match against the value of any HTTP header present in the request. If
            you are using URL query string parameters to control the Content-Disposition
            header (using the Content Disposition by URL policy) then the Content-Disposition
            header generated by this policy will not be used on that specific request.
            A typical use case for this policy is to set a different Content-Disposition
            header based on the User-Agent in the request.
          items:
            $ref: '#/components/schemas/custconfContentDispositionByHeader'
          type: array
        customer:
          $ref: '#/components/schemas/custconfCustomer'
        customHeader:
          $ref: '#/components/schemas/custconfCustomHeader'
        customMimeType:
          description: The custom mime type policy allows you to map file extensions
            to specific mime types for the CDN caching servers to use when delivering
            assets. The mime types you map using this policy may also be limited to
            specific response codes to address scenarios in which the mime type changes
            based on the response code.
          items:
            $ref: '#/components/schemas/custconfCustomMimeType'
          type: array
        dynamicCacheRule:
          description: Client response based on Rules.
          items:
            $ref: '#/components/schemas/custconfDynamicCacheRule'
          type: array
        dynamicContent:
          description: The dynamic content caching policy allows you to specify a
            set of query string and/or HTTP header key/value pairs that should create
            a unique cache entry for a given URL. This policy is useful when your
            origin returns unique content for the same URL based on a set of query
            string parameters provided in the request.
          items:
            $ref: '#/components/schemas/custconfDynamicContent'
          type: array
        failSafeOriginPull:
          $ref: '#/components/schemas/custconfFailSafeOriginPull'
        farAheadRangeProxy:
          $ref: '#/components/schemas/custconfFarAheadRangeProxy'
        fileSegmentation:
          $ref: '#/components/schemas/custconfFileSegmentation'
        flvPseudoStreaming:
          $ref: '#/components/schemas/custconfFlvPseudoStreaming'
        gzipOriginPull:
          $ref: '#/components/schemas/custconfGzipOriginPull'
        httpMethods:
          $ref: '#/components/schemas/custconfHttpMethods'
        origin:
          items:
            $ref: '#/components/schemas/cdncustconfOrigin'
          type: array
        originPersistentConnections:
          $ref: '#/components/schemas/custconfOriginPersistentConnections'
        originPull:
          $ref: '#/components/schemas/custconfOriginPull'
        originPullCacheExtension:
          $ref: '#/components/schemas/custconfOriginPullCacheExtension'
        originPullHost:
          items:
            $ref: '#/components/schemas/custconfOriginPullHost'
          type: array
        originPullProtocol:
          $ref: '#/components/schemas/custconfOriginPullProtocol'
        originPullLogs:
          $ref: '#/components/schemas/custconfOriginPullLogs'
        originPullLogsConfig:
          $ref: '#/components/schemas/custconfOriginPullLogsConfig'
        originPullPolicy:
          description: The CDN caching policy allows you to control how your origin's
            content is cached on the CDN.
          items:
            $ref: '#/components/schemas/custconfOriginPullPolicy'
          type: array
        originRequestModification:
          items:
            $ref: '#/components/schemas/custconfOriginRequestModification'
          type: array
        originResponseModification:
          items:
            $ref: '#/components/schemas/custconfOriginResponseModification'
          type: array
        queryStrParam:
          $ref: '#/components/schemas/custconfQueryStrParam'
        receiptLogsConfig:
          $ref: '#/components/schemas/custconfReceiptLogsConfig'
        redirectExceptions:
          $ref: '#/components/schemas/custconfRedirectExceptions'
        redirectMappings:
          description: The response code redirection policy allows you to map cache
            response codes to an HTTP redirect response. When this policy is applied
            to a host, the caching servers will redirect clients to the URL specified
            in this policy instead of delivering the response code you mapped in the
            policy.
          items:
            $ref: '#/components/schemas/custconfRedirectMappings'
          type: array
        responseHeader:
          $ref: '#/components/schemas/custconfResponseHeader'
        originPullResumeDownload:
          description: The CDN attempts to resume downloading Origin Pulls once it
            successfully reads all the headers of a positive response under certain
            conditions by sending subsequent origin range requests for the remaining
            body. The response must be a 2xx to a GET request for the full file or
            a single range (not multi-range). The response must contain the Last-Modified
            and ETag headers.
          items:
            $ref: '#/components/schemas/custconfOriginPullResumeDownload'
          type: array
        robotsTxt:
          items:
            $ref: '#/components/schemas/custconfRobotsTxt'
          type: array
        awsSignedOriginPullV4:
          items:
            $ref: '#/components/schemas/custconfAwsSignedOriginPullV4'
          type: array
        awsSignedS3PostV4:
          items:
            $ref: '#/components/schemas/custconfAwsSignedS3PostV4'
          type: array
        staticHeader:
          description: The static header injection policy allows you to insert headers
            into the CDN request and response processor.
          items:
            $ref: '#/components/schemas/custconfStaticHeader'
          type: array
        timePseudoStreaming:
          $ref: '#/components/schemas/custconfTimePseudoStreaming'
        http2Support:
          $ref: '#/components/schemas/custconfHttp2Support'
        vHost:
          description: A hostname policy allows you to specify an alternate domain
            name that you want to use to access content from your CDN container.
          items:
            $ref: '#/components/schemas/custconfVHost'
          type: array
      type: object
    custconfContentDispositionByHeader:
      description: The content disposition by HTTP header match policy allows you
        to control the Content-Disposition delivered by the CDN using a pattern match
        against the value of any HTTP header present in the request. If you are using
        URL query string parameters to control the Content-Disposition header (using
        the Content Disposition by URL policy) then the Content-Disposition header
        generated by this policy will not be used on that specific request. A typical
        use case for this policy is to set a different Content-Disposition header
        based on the User-Agent in the request.
      example:
        pathFilter: pathFilter
        methodFilter: methodFilter
        headerFilter: headerFilter
        id: id
        overrideOriginHeader: true
        headerFieldName: headerFieldName
        headerValueMatch: headerValueMatch
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        headerFieldName:
          description: The setting allows you to specify the name of the HTTP header
            you'd like to use in the pattern match for this policy.
          type: string
        headerValueMatch:
          description: String of values delimited by a ',' character. A list of glob
            patterns that apply this policy if any of them match against the value
            of the header specified.
          type: string
        defaultType:
          $ref: '#/components/schemas/ContentDispositionByHeaderDefaultTypeEnumWrapperValue'
        overrideOriginHeader:
          description: This setting allows you to force the Content-Disposition generated
            by the CDN for this policy to override the Content-Disposition header
            cached from your origin.
          format: boolean
          type: boolean
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfContentDispositionByURL:
      description: The content disposition by URL policy allows you to control Content-Disposition
        HTTP header delivered by the CDN caching servers. The policy gives you control
        over each of the header directives and allows you to specify a URL pattern
        match for determining when to apply the policy. Please note this policy takes
        precedence over all the other content disposition policies.
      example:
        dispositionTypeQSParam: dispositionTypeQSParam
        dispositionNameQSParam: dispositionNameQSParam
        id: id
        dispositionOverrideQSParam: dispositionOverrideQSParam
        overrideOriginHeader: true
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        dispositionNameQSParam:
          description: This is the name of the query string parameter which contains
            the file name to use in the Content-Disposition header. This setting is
            typically used by customers to configure a "friendly name" for URLs that
            have obfuscated file names.
          type: string
        dispositionTypeQSParam:
          description: This is the name of the query string parameter which contains
            the disposition type to use in the Content-Disposition header. Typically,
            this value is set to attachment if you want the browser to present the
            user with a "File Download" dialog box and set to inline if you want the
            browser to render the content inline (play an audio/video file instead
            of downloading it).
          type: string
        dispositionOverrideQSParam:
          description: This setting allows you to define a query string parameter
            that when present in the URL contains a string that should be used for
            the Content-Disposition header. The string specified in the URL will completely
            replace the value the CDN would have used based on other policies defined
            for the Content-Disposition header.
          type: string
        overrideOriginHeader:
          description: This setting allows you to force the Content-Disposition generated
            by the CDN for this policy to override the Content-Disposition header
            cached from your origin.
          format: boolean
          type: boolean
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfCustomHeader:
      description: The X-Forwarded-For header policy allows you to override the name
        of the X-Forwarded-For header the CDN sends to your origin.
      example:
        xForwardedForOrigin: xForwardedForOrigin
        xForwardedForAuth: xForwardedForAuth
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        xForwardedForAuth:
          description: This is the name of the X-Forwarded-For header you want the
            CDN to use when making requests to your basic authorization server.
          type: string
        xForwardedForOrigin:
          description: This is the name of the X-Forwarded-For header you want the
            CDN to use when making requests to your origin server.
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfCustomMimeType:
      description: The custom mime type policy allows you to map file extensions to
        specific mime types for the CDN caching servers to use when delivering assets.
        The mime types you map using this policy may also be limited to specific response
        codes to address scenarios in which the mime type changes based on the response
        code.
      example:
        pathFilter: pathFilter
        code: code
        extensionMap: extensionMap
        methodFilter: methodFilter
        headerFilter: headerFilter
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        code:
          description: String of values delimited by a ',' character. A comma separated
            list of status codes that apply to this policy
          type: string
        extensionMap:
          description: 'String of values delimited by a '','' character. This is a
            comma separated list of file extension and mime type pairs that describe
            the mime type mapping for the CDN caching servers. The file extension
            and mime type values should be delimited by a colon (:). For example,
            to map files ending with jpg to the image/jpeg mime type and files ending
            with png to image/png, set this value to: jpg:image/jpeg,png:image/png.'
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfCustomer:
      example:
        opLogFields: opLogFields
        accessLogFields: accessLogFields
        id: id
        receiptLogFields: receiptLogFields
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        accessLogFields:
          description: String of values delimited by a ',' character.
          type: string
        opLogFields:
          description: String of values delimited by a ',' character.
          type: string
        receiptLogFields:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfDynamicCacheRule:
      description: Client response based on Rules.
      example:
        pathFilter: pathFilter
        headers: headers
        methodFilter: methodFilter
        headerFilter: headerFilter
        id: id
        enabled: true
        statusCode: 7.061401241503109
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        statusCode:
          description: Status code to return
          format: int64
          type: number
        headers:
          description: String of values delimited by a '|' character. Pipe delimited
            ('|') list of headers to add to response
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfDynamicContent:
      description: The dynamic content caching policy allows you to specify a set
        of query string and/or HTTP header key/value pairs that should create a unique
        cache entry for a given URL. This policy is useful when your origin returns
        unique content for the same URL based on a set of query string parameters
        provided in the request.
      example:
        pathFilter: pathFilter
        queryParams: queryParams
        methodFilter: methodFilter
        headerFields: headerFields
        headerFilter: headerFilter
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        queryParams:
          description: 'String of values delimited by a '','' character. A comma separated
            list of query string parameters you want to include in the cache key generation.
            NOTE: This list is ignored when the Key Location is set to header.'
          type: string
        headerFields:
          description: |-
            String of values delimited by a ',' character. A comma-separated list of glob patterns that represent HTTP request headers you want included in the cache key generation. Via the use of a colon ':', users can define each glob pattern to match a header name only, or the pattern can be used to match both the header name and value. A pattern without a colon ':' is treated as a header name ONLY match. If the pattern matches the header, then all values are used as a part of the cache key. If the pattern contains a colon, the CDN uses the pattern on the left of the colon to match the header. The pattern to the right of the colon is used to match the value. The CDN only uses the header/value as a part of the cache key if both patterns result in a match. Note, no pattern after a colon indicates an empty header (no value).
            See the fnmatch manpage for acceptable glob patterns.
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfFailSafeOriginPull:
      example:
        pathFilter: pathFilter
        statusCodeMatch: statusCodeMatch
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          format: boolean
          type: boolean
        statusCodeMatch:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfFarAheadRangeProxy:
      example:
        id: id
        thresholdBytes: 9.301444243932576
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          format: boolean
          type: boolean
        thresholdBytes:
          format: int64
          type: number
      type: object
    custconfFileSegmentation:
      description: Policy for configuring the feature for downloading and storing
        files in segments rather than a whole entity.
      example:
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          description: Flag for enabling the File Segmentation Feature.
          format: boolean
          type: boolean
      type: object
    custconfFlvPseudoStreaming:
      example:
        jumpToByteInitialBytesParam: jumpToByteInitialBytesParam
        id: id
        jumpToByteStartOffsetParam: jumpToByteStartOffsetParam
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        jumpToByteInitialBytesParam:
          type: string
        jumpToByteStartOffsetParam:
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfGzipOriginPull:
      description: 'The compressed origin pull policy allows you to enable the CDN
        caching servers to request compressed assets from your origin. By enabling
        this policy, the CDN caching servers send your origin the HTTP Accept-Encoding
        header with the gzip code (Accept-Encoding: gzip).'
      example:
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          description: This enables support for compressed origin pull
          format: boolean
          type: boolean
      type: object
    custconfHttp2Support:
      description: Enable support of HTTP2
      example:
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          description: Enable support of HTTP2
          format: boolean
          type: boolean
      type: object
    custconfHttpMethods:
      description: The HTTP methods policy allows you to selectively enable additional
        HTTP methods you want your CDN container to process. A container automatically
        is set up to process HTTP GET and HEAD commands, so they should not be explicitly
        defined in this policy. HTTP methods included in this policy are proxied directly
        to your origin and not cached by the CDN.
      example:
        passThru: passThru
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        passThru:
          description: String of values delimited by a ',' character. This is a comma
            separated list of HTTP methods you want the CDN to proxy to your origin.
            A wildcard can be entered to include all methods (excluding HEAD and GET).
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfOriginPersistentConnections:
      description: The origin persistent connection settings are used to enable persistent
        connections to origins
      example:
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfOriginPull:
      description: The origin pull settings policy contains a list of settings that
        control the behavior of origin pull requests.
      example:
        noQSParams: true
        id: id
        retryMethods: retryMethods
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        redirectAction:
          $ref: '#/components/schemas/OriginPullRedirectActionEnumWrapperValue'
        noQSParams:
          description: GFS sends a path without any query string parameters when making
            external origin requests regardless if any parameters were sent by the
            User-Agent.
          format: boolean
          type: boolean
        retryMethods:
          description: String of values delimited by a ',' character. List of HTTP
            Methods that define types of origin pull requests that can be retried
            if a failure occurs after sending a previous request.
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfOriginPullCacheExtension:
      description: The cache extension policy allows you to define cache revalidation
        exceptions on expired content. This policy is applied by the CDN caching servers
        when they are are unable to revalidate an expired asset with your origin due
        to network connectivity issues or unresponsiveness from your origin.
      example:
        expiredCacheExtension: 3
        originUnreachableCacheExtension: 2
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        expiredCacheExtension:
          description: This is the number of seconds to extend an asset's TTL when
            the origin is unavailable. The CDN will continue to retry the origin up
            to the Origin Unavailable Max TTL.
          format: int32
          type: integer
        originUnreachableCacheExtension:
          description: The origin unavailable max TTL value is used by the caching
            server when your origin is unresponsive or the CDN cannot establish a
            connection to your origin. Under these conditions, the CDN can continue
            to serve expired assets from the cache. The value specified in this field
            establishes a maximum allowable TTL for your expired assets. If your origin
            connectivity or responsiveness is not corrected within your maximum allowable
            TTL, the CDN no longer serves your expired assets.
          format: int32
          type: integer
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfOriginPullHost:
      example:
        pathFilter: pathFilter
        password: password
        originUrl: originUrl
        methodFilter: methodFilter
        headerFilter: headerFilter
        id: id
        userName: userName
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        originUrl:
          type: string
        userName:
          type: string
        password:
          type: string
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfOriginPullLogs:
      description: Enable/Disable Origin Pull Logs
      example:
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfOriginPullLogsConfig:
      description: Origin Pull Log Settings
      example:
        extraLogFields: extraLogFields
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        extraLogFields:
          description: String of values delimited by a ',' character.
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfOriginPullPolicy:
      description: The CDN caching policy allows you to control how your origin's
        content is cached on the CDN.
      example:
        updateHttpHeadersOn304Response: true
        honorMustRevalidate: true
        methodFilter: methodFilter
        honorSMaxAge: true
        httpHeaders: httpHeaders
        enabled: true
        pathFilter: pathFilter
        statusCodeMatch: statusCodeMatch
        forceBypassCache: true
        honorNoCache: true
        mustRevalidateToNoCache: true
        bypassCacheIdentifier: bypassCacheIdentifier
        honorPrivate: true
        expireSeconds: 4
        headerFilter: headerFilter
        id: id
        honorNoStore: true
        contentTypeFilter: contentTypeFilter
        maxAgeZeroToNoCache: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        statusCodeMatch:
          description: String of values delimited by a ',' character. This is a pattern
            match expression for each status code this policy applies to. For example,
            2*, 3* applies this policy to all 200 and 300 level HTTP responses from
            your origin.
          type: string
        expirePolicy:
          $ref: '#/components/schemas/OriginPullPolicyExpirePolicyEnumWrapperValue'
        expireSeconds:
          description: This is the expiration time used for assets pulled from your
            origin. When using Cache-Control headers expiration methods, this value
            is used if your origin doesn't return a max-age directive in the Cache-Control
            HTTP header. Please note that a value of 0 in this fields instructs the
            caching server to retain assets for as long as possible.
          format: int32
          type: integer
        honorNoStore:
          description: This enables the processing of no-store HTTP Cache-Control
            directives on your container. By enabling this option, responses from
            your origin containing the no-store directive are not cached. Be aware
            that requests for non-cacheable assets are always forwarded to your origin
            and may impose a high request and bandwidth load on your origin.
          format: boolean
          type: boolean
        honorNoCache:
          description: This enables the processing of no-cache HTTP Cache-Control
            directives on your container. By enabling this option, responses from
            your origin containing the no-cache directive force the CDN to submit
            every subsequent request to your origin for validation before serving
            the asset stored in the cache.
          format: boolean
          type: boolean
        honorMustRevalidate:
          format: boolean
          type: boolean
        noCacheBehavior:
          $ref: '#/components/schemas/OriginPullPolicyNoCacheBehaviorEnumWrapperValue'
        maxAgeZeroToNoCache:
          description: This enables the CDN to apply the no-cache behavior for assets
            delivered by your origin containing a max-age directive equal to zero.
          format: boolean
          type: boolean
        mustRevalidateToNoCache:
          description: This enables the CDN to apply the no-cache behavior for assets
            delivered by your origin containing the must-revalidate directive.
          format: boolean
          type: boolean
        bypassCacheIdentifier:
          description: This allows you to define a custom directive that, when used
            by your origin in the Cache-Control response headers, forces the CDN to
            proxy the request to the end user without caching the result.
          type: string
        forceBypassCache:
          description: This forces the CDN to not cache any asset pulled from your
            origin that would otherwise be stored at this location in the cache. Typically
            this policy is used to prevent 4XX and 5XX response codes from overwriting
            a file in the cache when used with corresponding Origin Status Code Match
            setting. If bypass cache behavior is desired for all assets at a scope,
            Origin Pull Queue Behavior in the Origin Pull Settings also needs to be
            set to NOCACHE for that scope.
          format: boolean
          type: boolean
        httpHeaders:
          description: String of values delimited by a ',' character. This is the
            list of your origin's HTTP headers that you want the CDN to cache and
            deliver to end users.
          type: string
        honorPrivate:
          description: This enables the processing of private HTTP Cache-Control directives
            on your container. By enabling this option, responses from your origin
            containing the private directive are not cached. Be aware that requests
            for non-cacheable assets are always forwarded to your origin and may impose
            a high request and bandwidth load on your origin.
          format: boolean
          type: boolean
        honorSMaxAge:
          description: This enables the processing of s-maxage HTTP Cache-Control
            directives on your container. By enabling this option, the s-maxage HTTP
            Cache-Control directive in the responses from your origin takes precedence
            over the max-age directive. If both max-age and s-maxage need to be preserved
            in the client response, the Cache-Control header must be added to the
            "Http Header Caching" setting.
          format: boolean
          type: boolean
        updateHttpHeadersOn304Response:
          format: boolean
          type: boolean
        defaultCacheBehavior:
          $ref: '#/components/schemas/OriginPullPolicyDefaultCacheBehaviorEnumWrapperValue'
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
        contentTypeFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfOriginPullProtocol:
      description: The Origin Pull Protocol allows you to configure the CDN caching
        servers to use secured or non-secured connection to Origin.
      example:
        enableSNI: true
        id: id
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        protocol:
          $ref: '#/components/schemas/custconfOriginPullProtocolProtocolEnumWrapperValue'
        enableSNI:
          description: This key allows you to configure the CDN caching servers to
            use SNI while making Secured Connection to Origin.
          format: boolean
          type: boolean
      type: object
    custconfOriginPullProtocolProtocolEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - http
      - https
      - match
      type: string
    custconfOriginPullResumeDownload:
      description: The CDN attempts to resume downloading Origin Pulls once it successfully
        reads all the headers of a positive response under certain conditions by sending
        subsequent origin range requests for the remaining body. The response must
        be a 2xx to a GET request for the full file or a single range (not multi-range).
        The response must contain the Last-Modified and ETag headers.
      example:
        pathFilter: pathFilter
        maximumAttempts: 1.0246457001441578
        minimumBodyBytesConsumed: minimumBodyBytesConsumed
        requireOriginRangeSupport: true
        headerFilter: headerFilter
        id: id
        enabled: true
        originalStatusCodeMatch: originalStatusCodeMatch
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          format: boolean
          type: boolean
        originalStatusCodeMatch:
          description: String of values delimited by a ',' character. Comma separated
            list of glob patterns that indicate which origin pulls this policy applies
            to based on the status code of the original origin response. This feature
            is limited to 2xx responses, but this policy provides fine control, such
            as permitting resume of 200 responses by not 206, or for adding a 2xx
            response code other than 200 or 206.
          type: string
        minimumBodyBytesConsumed:
          description: Minimum number of body bytes that CDN must have consumed during
            an Origin Pull before encountering an error before it is permitted to
            attempt resuming the download. This value does not include the headers
            bytes.
          type: string
        maximumAttempts:
          description: Maximum number of times beyond the initial request that the
            CDN is permitted to attempt resuming an Origin Pull download.
          format: int64
          type: number
        requireOriginRangeSupport:
          description: The CDN resumes an Origin Pull even if the origin does not
            support range requests. If the origin does not support range requests
            and/or returns a 200 response for the same version given in the original
            response, the CDN fast-forwards (reads and discards bytes) until it reaches
            its previous position in the asset.
          format: boolean
          type: boolean
        etagValidation:
          $ref: '#/components/schemas/OriginPullResumeDownloadEtagValidationEnumWrapperValue'
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfOriginRequestModification:
      example:
        pathFilter: pathFilter
        addHeaders: addHeaders
        cookieFilter: cookieFilter
        headerPattern: headerPattern
        headerRewrite: headerRewrite
        methodFilter: methodFilter
        headerFilter: headerFilter
        id: id
        urlPattern: urlPattern
        flowControl: flowControl
        urlRewrite: urlRewrite
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        urlPattern:
          type: string
        urlRewrite:
          type: string
        headerPattern:
          type: string
        headerRewrite:
          type: string
        addHeaders:
          description: String of values delimited by a '|' character. This is the
            static HTTP header you want inserted into the CDN request. Start value
            with "append:", "replace:" or "create:" which defines if Header will be
            added, replaced or create if not exists. Default is append.
          type: string
        flowControl:
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
        cookieFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfOriginResponseModification:
      example:
        pathFilter: pathFilter
        addHeaders: addHeaders
        headerPattern: headerPattern
        statusCodeRewrite: 7.386281948385884
        headerRewrite: headerRewrite
        methodFilter: methodFilter
        headerFilter: headerFilter
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        statusCodeRewrite:
          format: int64
          type: number
        headerPattern:
          type: string
        headerRewrite:
          type: string
        addHeaders:
          description: String of values delimited by a '|' character. This is the
            static HTTP header you want inserted into the CDN response. Start value
            with "append:", "replace:" or "create:" which defines if Header will be
            added, replaced or create if not exists. Default is append.
          type: string
        flowControl:
          $ref: '#/components/schemas/custconfOriginResponseModificationFlowControlEnumWrapperValue'
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfOriginResponseModificationFlowControlEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - next
      - break
      type: string
    custconfQueryStrParam:
      description: The reserved query string parameters policy describes all the query
        string parameters the StackPath CDN caching server reserves for special processing
        of your requests.
      example:
        dispositionOverride: dispositionOverride
        dispositionType: dispositionType
        jumpToTimeEnd: jumpToTimeEnd
        rateLimitInitial: rateLimitInitial
        jumpToByteInitialBytes: jumpToByteInitialBytes
        jumpToByteStartOffset: jumpToByteStartOffset
        jumpToTimeStart: jumpToTimeStart
        id: id
        rateLimitSustained: rateLimitSustained
        enabled: true
        dispositionName: dispositionName
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        dispositionName:
          description: This is the name of the query string parameter which contains
            the name of the file to specify in the Content-Disposition HTTP response
            header. This setting is typically used by customers to configure a "friendly
            name" for URLs that have obfuscated file names. This setting controls
            the "filename" directive that is part of the Content-Disposition HTTP
            header.
          type: string
        dispositionType:
          description: This is the name of the query string parameter which contains
            the disposition type to use in the Content-Disposition HTTP header. Typically,
            this value is set to "attachment," but you may supply a custom string
            using this setting.
          type: string
        dispositionOverride:
          description: This setting allows you to completely override the Content-Disposition
            HTTP header that the CDN caching servers use on a response.
          type: string
        jumpToTimeStart:
          description: This is the name of the query string parameter that indicates
            to the CDN the start time offset of the video returned. This parameter
            is part of the jump-to-time feature that is initiated on a per request
            basis.
          type: string
        jumpToTimeEnd:
          description: This is the name of the query string parameter that indicates
            to the CDN the end time offset of the video that should be returned. This
            parameter is part of the jump-to-time feature that is initiated on a per
            request basis.
          type: string
        jumpToByteInitialBytes:
          description: This is the  name of the query string parameter that indicates
            to the CDN the initial bytes of a video that should be returned before
            sending the requested byte offset. This parameter is part of the jump-to-byte
            feature that is initiated on a per request basis.
          type: string
        jumpToByteStartOffset:
          description: This is the name of the query string parameter that indicates
            to the CDN the specific offset into the video that is being requested.
            This parameter is part of the jump-to-byte feature that is initiated on
            a per request basis.
          type: string
        rateLimitInitial:
          description: This is the name of the query string parameter that indicates
            to the CDN an initial burst rate to use when delivering a file. This parameter
            is part of the bandwidth limiting feature that is initiated on a per request
            basis.
          type: string
        rateLimitSustained:
          description: This is the name of the query string parameter that indicates
            to the CDN the sustained rate being requested for the delivery of a file.
            This parameter is part of the bandwidth throttling feature that is initiated
            on a per request basis.
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfReceiptLogsConfig:
      description: Delivery receipt log settings
      example:
        extraLogFields: extraLogFields
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        extraLogFields:
          description: String of values delimited by a ',' character.
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfRedirectExceptions:
      description: The redirect response codes policy allows you to specify the HTTP
        redirect status code the CDN caching server should use when the CDN issues
        a redirect. Using this policy, you can assign different redirect codes to
        user agents requesting content.
      example:
        redirectAgentCode: redirectAgentCode
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        redirectAgentCode:
          description: 'String of values delimited by a '','' character. This is a
            comma separated list of user agents and redirect code pairs. The user
            agent and redirect code values are separated by a colon (:), and you may
            use wildcards in the user agent field. For example, to map assign a 307
            status code to all Chrome browsers, you would specify: *chrome*:307.'
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfRedirectMappings:
      description: The response code redirection policy allows you to map cache response
        codes to an HTTP redirect response. When this policy is applied to a host,
        the caching servers will redirect clients to the URL specified in this policy
        instead of delivering the response code you mapped in the policy.
      example:
        pathFilter: pathFilter
        code: 1.2315135367772556
        redirectURL: redirectURL
        methodFilter: methodFilter
        headerFilter: headerFilter
        id: id
        replacementToken: replacementToken
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        code:
          description: The HTTP cache response code that applies to this policy.
          format: int64
          type: number
        redirectURL:
          description: The URL that clients would be redirected to when applying this
            policy.
          type: string
        replacementToken:
          description: A token that will be replaced by the caching server with the
            URL of the request that triggered the policy. This token can be positioned
            anywhere in the redirect URL.
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfResponseHeader:
      description: The custom HTTP response headers policy allows you to specify a
        list of HTTP headers you want the CDN caching servers to include in the response
        to clients.
      example:
        http: http
        enableETag: true
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        http:
          description: 'A pipe delimited list of rules that instructs the CDN caching
            servers to include a content-disposition header. The rules included in
            this setting must be entered in the following format: Content-Disposition:<User
            Agent>:<file extension 1>, <file extension 2>. For example, to send the
            Content-Disposition header for all Mozilla browsers on the delivery of
            mp3, exe, tar, zip, gz and rar files, you would enter the following in
            the field: Content-Disposition:Mozilla*:mp3,exe,tar,zip,gz,rar'
          type: string
        enableETag:
          description: This gives the ability to disable the ETag header on the response.
          format: boolean
          type: boolean
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfRobotsTxt:
      example:
        cacheControlHeader: cacheControlHeader
        pathFilter: pathFilter
        file: file
        methodFilter: methodFilter
        headerFilter: headerFilter
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        file:
          format: base64
          type: string
        cacheControlHeader:
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfStaticHeader:
      description: The static header injection policy allows you to insert headers
        into the CDN request and response processor.
      example:
        pathFilter: pathFilter
        originPull: originPull
        methodFilter: methodFilter
        http: http
        headerFilter: headerFilter
        id: id
        enabled: true
        clientRequest: clientRequest
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        clientRequest:
          description: This is the static HTTP header you want inserted into the CDN
            request.
          type: string
        http:
          description: This is the static HTTP header you want inserted into the CDN
            response.
          type: string
        originPull:
          description: This is the HTTP header you want inserted into the origin pull
            request.
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfTimePseudoStreaming:
      description: The HTTP pseudo-streaming policy enables Flash based video players
        to support seeking to random locations within a MP4 or FLV file without having
        to download the entire video. Flash players such as Flowplayer and JWPlayer
        can be configured to send a query string parameter that indicates to the server
        the time offset the user advanced the video to. Typically a query string parameter
        called "start" is used by these players.
      example:
        jumpToTimeStartParam: jumpToTimeStartParam
        jumpToTimeEndParam: jumpToTimeEndParam
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        jumpToTimeStartParam:
          description: The name of the query string parameter that indicates to the
            CDN the specific time interval of the video that is being requested.
          type: string
        jumpToTimeEndParam:
          description: The name of the query string parameter that indicates to the
            CDN the end time of the video that should be returned.
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfVHost:
      description: A hostname policy allows you to specify an alternate domain name
        that you want to use to access content from your CDN container.
      example:
        domain: domain
        id: id
        enabled: true
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        domain:
          description: 'This is the hostname you want to enable in this policy. Note:
            You must configure your container''s CNAME record with your DNS provider
            to enable this hostname to deliver content.'
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    paginationPageInfo:
      description: |-
        Information about a paginated response

        This is modeled after the GraphQL Relay spec to support both cursor based pagination and traditional offset based pagination.
      example:
        hasNextPage: true
        hasPreviousPage: true
        endCursor: endCursor
        totalCount: totalCount
        startCursor: startCursor
      properties:
        totalCount:
          description: The total number of items in the dataset
          type: string
        hasPreviousPage:
          description: Whether or not a previous page of data exists
          format: boolean
          type: boolean
        hasNextPage:
          description: Whether or not another page of data is available
          format: boolean
          type: boolean
        startCursor:
          description: The cursor for the first item in the set of data returned
          type: string
        endCursor:
          description: The cursor for the last item in the set of data returned
          type: string
      type: object
    schemacdnOrigin:
      description: |-
        A CDN site's origin

        Origins are the original sources of the data that is cached by the CDN on request.
      example:
        securePort: 1
        path: path
        dedicated: true
        hostname: hostname
        port: 6
        siteId: siteId
        id: id
      properties:
        id:
          description: An origin's unique identifier
          type: string
        path:
          description: |-
            An origin's path

            Paths default to "/"
          type: string
        hostname:
          description: An origin's hostname or IP address
          type: string
        port:
          description: The HTTP port to connect to the origin
          format: int32
          type: integer
        securePort:
          description: The HTTPS port to connect to the origin
          format: int32
          type: integer
        dedicated:
          description: |-
            Whether or not an origin is dedicated to a CDN site

            Dedicated origins cannot be used by any site other than that to which it is dedicated.
          format: boolean
          type: boolean
        siteId:
          description: The ID of the CDN site to which an origin is dedicated
          type: string
      type: object
    stackpath.rpc.BadRequest:
      allOf:
      - $ref: '#/components/schemas/apiStatusDetail'
      - $ref: '#/components/schemas/stackpath_rpc_BadRequest_allOf'
    stackpath.rpc.BadRequest.FieldViolation:
      properties:
        field:
          type: string
        description:
          type: string
      type: object
    stackpath.rpc.Help:
      allOf:
      - $ref: '#/components/schemas/apiStatusDetail'
      - $ref: '#/components/schemas/stackpath_rpc_Help_allOf'
    stackpath.rpc.Help.Link:
      properties:
        description:
          type: string
        url:
          type: string
      type: object
    stackpath.rpc.LocalizedMessage:
      allOf:
      - $ref: '#/components/schemas/apiStatusDetail'
      - $ref: '#/components/schemas/stackpath_rpc_LocalizedMessage_allOf'
    stackpath.rpc.PreconditionFailure:
      allOf:
      - $ref: '#/components/schemas/apiStatusDetail'
      - $ref: '#/components/schemas/stackpath_rpc_PreconditionFailure_allOf'
    stackpath.rpc.PreconditionFailure.Violation:
      properties:
        type:
          type: string
        subject:
          type: string
        description:
          type: string
      type: object
    stackpath.rpc.QuotaFailure:
      allOf:
      - $ref: '#/components/schemas/apiStatusDetail'
      - $ref: '#/components/schemas/stackpath_rpc_QuotaFailure_allOf'
    stackpath.rpc.QuotaFailure.Violation:
      properties:
        subject:
          type: string
        description:
          type: string
      type: object
    stackpath.rpc.RequestInfo:
      allOf:
      - $ref: '#/components/schemas/apiStatusDetail'
      - $ref: '#/components/schemas/stackpath_rpc_RequestInfo_allOf'
    stackpath.rpc.ResourceInfo:
      allOf:
      - $ref: '#/components/schemas/apiStatusDetail'
      - $ref: '#/components/schemas/stackpath_rpc_ResourceInfo_allOf'
    stackpath.rpc.RetryInfo:
      allOf:
      - $ref: '#/components/schemas/apiStatusDetail'
      - $ref: '#/components/schemas/stackpath_rpc_RetryInfo_allOf'
    stackpath_rpc_BadRequest_allOf:
      properties:
        fieldViolations:
          items:
            $ref: '#/components/schemas/stackpath.rpc.BadRequest.FieldViolation'
          type: array
    stackpath_rpc_Help_allOf:
      properties:
        links:
          items:
            $ref: '#/components/schemas/stackpath.rpc.Help.Link'
          type: array
    stackpath_rpc_LocalizedMessage_allOf:
      properties:
        locale:
          type: string
        message:
          type: string
    stackpath_rpc_PreconditionFailure_allOf:
      properties:
        violations:
          items:
            $ref: '#/components/schemas/stackpath.rpc.PreconditionFailure.Violation'
          type: array
    stackpath_rpc_QuotaFailure_allOf:
      properties:
        violations:
          items:
            $ref: '#/components/schemas/stackpath.rpc.QuotaFailure.Violation'
          type: array
    stackpath_rpc_RequestInfo_allOf:
      properties:
        requestId:
          type: string
        servingData:
          type: string
    stackpath_rpc_ResourceInfo_allOf:
      properties:
        resourceType:
          type: string
        resourceName:
          type: string
        owner:
          type: string
        description:
          type: string
    stackpath_rpc_RetryInfo_allOf:
      properties:
        retryDelay:
          type: string
  securitySchemes:
    oauth2:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: https://gateway.stackpath.com/identity/v1/oauth2/token
      type: oauth2
x-explorer-enabled: true
x-proxy-enabled: true
x-samples-enabled: true
x-samples-languages:
- curl
- node
- ruby
- javascript
- python
