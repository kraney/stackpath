/*
 * Content Delivery Network
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cdn

import (
	"encoding/json"
	"time"
)

// CdnSiteScript A serverless script  Serverless scripts are hosted and executed on StackPath's edge nodes.
type CdnSiteScript struct {
	// A serverless script's unique identifier
	Id *string `json:"id,omitempty"`
	// The ID of the stack to which a serverless script's site belongs
	StackId *string `json:"stackId,omitempty"`
	// The ID of the site to which a serverless script belongs
	SiteId *string `json:"siteId,omitempty"`
	// A serverless script's name
	Name *string `json:"name,omitempty"`
	// A serverless script's version number  Version numbers start at 1 and are incremented every time the script is updated.
	Version *string `json:"version,omitempty"`
	// Base64 encoded contents of a serverless script
	Code *string `json:"code,omitempty"`
	// The URL paths that incoming requests should answer with a serverless script  Every serverless script needs at least one path, and paths must be unique.
	Paths *[]string `json:"paths,omitempty"`
	// The date a serverless script was created
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// The date a serverless script was last updated
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewCdnSiteScript instantiates a new CdnSiteScript object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdnSiteScript() *CdnSiteScript {
	this := CdnSiteScript{}
	return &this
}

// NewCdnSiteScriptWithDefaults instantiates a new CdnSiteScript object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdnSiteScriptWithDefaults() *CdnSiteScript {
	this := CdnSiteScript{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CdnSiteScript) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnSiteScript) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CdnSiteScript) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CdnSiteScript) SetId(v string) {
	o.Id = &v
}

// GetStackId returns the StackId field value if set, zero value otherwise.
func (o *CdnSiteScript) GetStackId() string {
	if o == nil || o.StackId == nil {
		var ret string
		return ret
	}
	return *o.StackId
}

// GetStackIdOk returns a tuple with the StackId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnSiteScript) GetStackIdOk() (*string, bool) {
	if o == nil || o.StackId == nil {
		return nil, false
	}
	return o.StackId, true
}

// HasStackId returns a boolean if a field has been set.
func (o *CdnSiteScript) HasStackId() bool {
	if o != nil && o.StackId != nil {
		return true
	}

	return false
}

// SetStackId gets a reference to the given string and assigns it to the StackId field.
func (o *CdnSiteScript) SetStackId(v string) {
	o.StackId = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *CdnSiteScript) GetSiteId() string {
	if o == nil || o.SiteId == nil {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnSiteScript) GetSiteIdOk() (*string, bool) {
	if o == nil || o.SiteId == nil {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *CdnSiteScript) HasSiteId() bool {
	if o != nil && o.SiteId != nil {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *CdnSiteScript) SetSiteId(v string) {
	o.SiteId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CdnSiteScript) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnSiteScript) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CdnSiteScript) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CdnSiteScript) SetName(v string) {
	o.Name = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CdnSiteScript) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnSiteScript) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CdnSiteScript) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *CdnSiteScript) SetVersion(v string) {
	o.Version = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *CdnSiteScript) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnSiteScript) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *CdnSiteScript) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *CdnSiteScript) SetCode(v string) {
	o.Code = &v
}

// GetPaths returns the Paths field value if set, zero value otherwise.
func (o *CdnSiteScript) GetPaths() []string {
	if o == nil || o.Paths == nil {
		var ret []string
		return ret
	}
	return *o.Paths
}

// GetPathsOk returns a tuple with the Paths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnSiteScript) GetPathsOk() (*[]string, bool) {
	if o == nil || o.Paths == nil {
		return nil, false
	}
	return o.Paths, true
}

// HasPaths returns a boolean if a field has been set.
func (o *CdnSiteScript) HasPaths() bool {
	if o != nil && o.Paths != nil {
		return true
	}

	return false
}

// SetPaths gets a reference to the given []string and assigns it to the Paths field.
func (o *CdnSiteScript) SetPaths(v []string) {
	o.Paths = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CdnSiteScript) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnSiteScript) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CdnSiteScript) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *CdnSiteScript) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CdnSiteScript) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnSiteScript) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CdnSiteScript) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *CdnSiteScript) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o CdnSiteScript) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.StackId != nil {
		toSerialize["stackId"] = o.StackId
	}
	if o.SiteId != nil {
		toSerialize["siteId"] = o.SiteId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Paths != nil {
		toSerialize["paths"] = o.Paths
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableCdnSiteScript struct {
	value *CdnSiteScript
	isSet bool
}

func (v NullableCdnSiteScript) Get() *CdnSiteScript {
	return v.value
}

func (v *NullableCdnSiteScript) Set(val *CdnSiteScript) {
	v.value = val
	v.isSet = true
}

func (v NullableCdnSiteScript) IsSet() bool {
	return v.isSet
}

func (v *NullableCdnSiteScript) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdnSiteScript(val *CdnSiteScript) *NullableCdnSiteScript {
	return &NullableCdnSiteScript{value: val, isSet: true}
}

func (v NullableCdnSiteScript) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdnSiteScript) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
