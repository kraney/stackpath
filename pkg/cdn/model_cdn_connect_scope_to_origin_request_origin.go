/*
 * Content Delivery Network
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cdn

import (
	"encoding/json"
)

// CdnConnectScopeToOriginRequestOrigin A new origin
type CdnConnectScopeToOriginRequestOrigin struct {
	// The origin's path  Paths default to \"/\"
	Path *string `json:"path,omitempty"`
	// The origin's hostname or IP address
	Hostname *string `json:"hostname,omitempty"`
	// The HTTP port to connect to the origin
	Port *int32 `json:"port,omitempty"`
	// The HTTPS port to connect to the origin
	SecurePort *int32 `json:"securePort,omitempty"`
}

// NewCdnConnectScopeToOriginRequestOrigin instantiates a new CdnConnectScopeToOriginRequestOrigin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdnConnectScopeToOriginRequestOrigin() *CdnConnectScopeToOriginRequestOrigin {
	this := CdnConnectScopeToOriginRequestOrigin{}
	return &this
}

// NewCdnConnectScopeToOriginRequestOriginWithDefaults instantiates a new CdnConnectScopeToOriginRequestOrigin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdnConnectScopeToOriginRequestOriginWithDefaults() *CdnConnectScopeToOriginRequestOrigin {
	this := CdnConnectScopeToOriginRequestOrigin{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *CdnConnectScopeToOriginRequestOrigin) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnConnectScopeToOriginRequestOrigin) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *CdnConnectScopeToOriginRequestOrigin) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *CdnConnectScopeToOriginRequestOrigin) SetPath(v string) {
	o.Path = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *CdnConnectScopeToOriginRequestOrigin) GetHostname() string {
	if o == nil || o.Hostname == nil {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnConnectScopeToOriginRequestOrigin) GetHostnameOk() (*string, bool) {
	if o == nil || o.Hostname == nil {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *CdnConnectScopeToOriginRequestOrigin) HasHostname() bool {
	if o != nil && o.Hostname != nil {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *CdnConnectScopeToOriginRequestOrigin) SetHostname(v string) {
	o.Hostname = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *CdnConnectScopeToOriginRequestOrigin) GetPort() int32 {
	if o == nil || o.Port == nil {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnConnectScopeToOriginRequestOrigin) GetPortOk() (*int32, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *CdnConnectScopeToOriginRequestOrigin) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *CdnConnectScopeToOriginRequestOrigin) SetPort(v int32) {
	o.Port = &v
}

// GetSecurePort returns the SecurePort field value if set, zero value otherwise.
func (o *CdnConnectScopeToOriginRequestOrigin) GetSecurePort() int32 {
	if o == nil || o.SecurePort == nil {
		var ret int32
		return ret
	}
	return *o.SecurePort
}

// GetSecurePortOk returns a tuple with the SecurePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnConnectScopeToOriginRequestOrigin) GetSecurePortOk() (*int32, bool) {
	if o == nil || o.SecurePort == nil {
		return nil, false
	}
	return o.SecurePort, true
}

// HasSecurePort returns a boolean if a field has been set.
func (o *CdnConnectScopeToOriginRequestOrigin) HasSecurePort() bool {
	if o != nil && o.SecurePort != nil {
		return true
	}

	return false
}

// SetSecurePort gets a reference to the given int32 and assigns it to the SecurePort field.
func (o *CdnConnectScopeToOriginRequestOrigin) SetSecurePort(v int32) {
	o.SecurePort = &v
}

func (o CdnConnectScopeToOriginRequestOrigin) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.Hostname != nil {
		toSerialize["hostname"] = o.Hostname
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.SecurePort != nil {
		toSerialize["securePort"] = o.SecurePort
	}
	return json.Marshal(toSerialize)
}

type NullableCdnConnectScopeToOriginRequestOrigin struct {
	value *CdnConnectScopeToOriginRequestOrigin
	isSet bool
}

func (v NullableCdnConnectScopeToOriginRequestOrigin) Get() *CdnConnectScopeToOriginRequestOrigin {
	return v.value
}

func (v *NullableCdnConnectScopeToOriginRequestOrigin) Set(val *CdnConnectScopeToOriginRequestOrigin) {
	v.value = val
	v.isSet = true
}

func (v NullableCdnConnectScopeToOriginRequestOrigin) IsSet() bool {
	return v.isSet
}

func (v *NullableCdnConnectScopeToOriginRequestOrigin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdnConnectScopeToOriginRequestOrigin(val *CdnConnectScopeToOriginRequestOrigin) *NullableCdnConnectScopeToOriginRequestOrigin {
	return &NullableCdnConnectScopeToOriginRequestOrigin{value: val, isSet: true}
}

func (v NullableCdnConnectScopeToOriginRequestOrigin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdnConnectScopeToOriginRequestOrigin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
