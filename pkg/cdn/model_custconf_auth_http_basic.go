/*
 * Content Delivery Network
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cdn

import (
	"encoding/json"
)

// CustconfAuthHttpBasic HTTP basic authentication policies allow you to control access to your content by requiring the end user to enter a valid username and password before gaining access to content.
type CustconfAuthHttpBasic struct {
	// This is used by the API to perform conflict checking
	Id *string `json:"id,omitempty"`
	// This is a URL to a resource on the authentication server responsible for authentication of users.
	BindingPoint *string `json:"bindingPoint,omitempty"`
	// This is the authentication realm given back to the user on requests which do not contain the authentication credentials. Browsers typically display this value to the user when the login credentials are requested.
	Realm *string `json:"realm,omitempty"`
	// This is the number of seconds the authentication session will be cached by the browsers. After this time, browsers will be asked to present the user credentials again for re-authentication.
	Ttl *float32 `json:"ttl,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
}

// NewCustconfAuthHttpBasic instantiates a new CustconfAuthHttpBasic object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustconfAuthHttpBasic() *CustconfAuthHttpBasic {
	this := CustconfAuthHttpBasic{}
	return &this
}

// NewCustconfAuthHttpBasicWithDefaults instantiates a new CustconfAuthHttpBasic object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustconfAuthHttpBasicWithDefaults() *CustconfAuthHttpBasic {
	this := CustconfAuthHttpBasic{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustconfAuthHttpBasic) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfAuthHttpBasic) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustconfAuthHttpBasic) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CustconfAuthHttpBasic) SetId(v string) {
	o.Id = &v
}

// GetBindingPoint returns the BindingPoint field value if set, zero value otherwise.
func (o *CustconfAuthHttpBasic) GetBindingPoint() string {
	if o == nil || o.BindingPoint == nil {
		var ret string
		return ret
	}
	return *o.BindingPoint
}

// GetBindingPointOk returns a tuple with the BindingPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfAuthHttpBasic) GetBindingPointOk() (*string, bool) {
	if o == nil || o.BindingPoint == nil {
		return nil, false
	}
	return o.BindingPoint, true
}

// HasBindingPoint returns a boolean if a field has been set.
func (o *CustconfAuthHttpBasic) HasBindingPoint() bool {
	if o != nil && o.BindingPoint != nil {
		return true
	}

	return false
}

// SetBindingPoint gets a reference to the given string and assigns it to the BindingPoint field.
func (o *CustconfAuthHttpBasic) SetBindingPoint(v string) {
	o.BindingPoint = &v
}

// GetRealm returns the Realm field value if set, zero value otherwise.
func (o *CustconfAuthHttpBasic) GetRealm() string {
	if o == nil || o.Realm == nil {
		var ret string
		return ret
	}
	return *o.Realm
}

// GetRealmOk returns a tuple with the Realm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfAuthHttpBasic) GetRealmOk() (*string, bool) {
	if o == nil || o.Realm == nil {
		return nil, false
	}
	return o.Realm, true
}

// HasRealm returns a boolean if a field has been set.
func (o *CustconfAuthHttpBasic) HasRealm() bool {
	if o != nil && o.Realm != nil {
		return true
	}

	return false
}

// SetRealm gets a reference to the given string and assigns it to the Realm field.
func (o *CustconfAuthHttpBasic) SetRealm(v string) {
	o.Realm = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *CustconfAuthHttpBasic) GetTtl() float32 {
	if o == nil || o.Ttl == nil {
		var ret float32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfAuthHttpBasic) GetTtlOk() (*float32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *CustconfAuthHttpBasic) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given float32 and assigns it to the Ttl field.
func (o *CustconfAuthHttpBasic) SetTtl(v float32) {
	o.Ttl = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *CustconfAuthHttpBasic) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfAuthHttpBasic) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *CustconfAuthHttpBasic) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *CustconfAuthHttpBasic) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o CustconfAuthHttpBasic) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.BindingPoint != nil {
		toSerialize["bindingPoint"] = o.BindingPoint
	}
	if o.Realm != nil {
		toSerialize["realm"] = o.Realm
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableCustconfAuthHttpBasic struct {
	value *CustconfAuthHttpBasic
	isSet bool
}

func (v NullableCustconfAuthHttpBasic) Get() *CustconfAuthHttpBasic {
	return v.value
}

func (v *NullableCustconfAuthHttpBasic) Set(val *CustconfAuthHttpBasic) {
	v.value = val
	v.isSet = true
}

func (v NullableCustconfAuthHttpBasic) IsSet() bool {
	return v.isSet
}

func (v *NullableCustconfAuthHttpBasic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustconfAuthHttpBasic(val *CustconfAuthHttpBasic) *NullableCustconfAuthHttpBasic {
	return &NullableCustconfAuthHttpBasic{value: val, isSet: true}
}

func (v NullableCustconfAuthHttpBasic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustconfAuthHttpBasic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
