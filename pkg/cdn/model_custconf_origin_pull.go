/*
 * Content Delivery Network
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cdn

import (
	"encoding/json"
)

// CustconfOriginPull The origin pull settings policy contains a list of settings that control the behavior of origin pull requests.
type CustconfOriginPull struct {
	// This is used by the API to perform conflict checking
	Id *string `json:"id,omitempty"`
	RedirectAction *OriginPullRedirectActionEnumWrapperValue `json:"redirectAction,omitempty"`
	// GFS sends a path without any query string parameters when making external origin requests regardless if any parameters were sent by the User-Agent.
	NoQSParams *bool `json:"noQSParams,omitempty"`
	// String of values delimited by a ',' character. List of HTTP Methods that define types of origin pull requests that can be retried if a failure occurs after sending a previous request.
	RetryMethods *string `json:"retryMethods,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
}

// NewCustconfOriginPull instantiates a new CustconfOriginPull object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustconfOriginPull() *CustconfOriginPull {
	this := CustconfOriginPull{}
	var redirectAction OriginPullRedirectActionEnumWrapperValue = "UNKNOWN"
	this.RedirectAction = &redirectAction
	return &this
}

// NewCustconfOriginPullWithDefaults instantiates a new CustconfOriginPull object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustconfOriginPullWithDefaults() *CustconfOriginPull {
	this := CustconfOriginPull{}
	var redirectAction OriginPullRedirectActionEnumWrapperValue = "UNKNOWN"
	this.RedirectAction = &redirectAction
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustconfOriginPull) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfOriginPull) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustconfOriginPull) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CustconfOriginPull) SetId(v string) {
	o.Id = &v
}

// GetRedirectAction returns the RedirectAction field value if set, zero value otherwise.
func (o *CustconfOriginPull) GetRedirectAction() OriginPullRedirectActionEnumWrapperValue {
	if o == nil || o.RedirectAction == nil {
		var ret OriginPullRedirectActionEnumWrapperValue
		return ret
	}
	return *o.RedirectAction
}

// GetRedirectActionOk returns a tuple with the RedirectAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfOriginPull) GetRedirectActionOk() (*OriginPullRedirectActionEnumWrapperValue, bool) {
	if o == nil || o.RedirectAction == nil {
		return nil, false
	}
	return o.RedirectAction, true
}

// HasRedirectAction returns a boolean if a field has been set.
func (o *CustconfOriginPull) HasRedirectAction() bool {
	if o != nil && o.RedirectAction != nil {
		return true
	}

	return false
}

// SetRedirectAction gets a reference to the given OriginPullRedirectActionEnumWrapperValue and assigns it to the RedirectAction field.
func (o *CustconfOriginPull) SetRedirectAction(v OriginPullRedirectActionEnumWrapperValue) {
	o.RedirectAction = &v
}

// GetNoQSParams returns the NoQSParams field value if set, zero value otherwise.
func (o *CustconfOriginPull) GetNoQSParams() bool {
	if o == nil || o.NoQSParams == nil {
		var ret bool
		return ret
	}
	return *o.NoQSParams
}

// GetNoQSParamsOk returns a tuple with the NoQSParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfOriginPull) GetNoQSParamsOk() (*bool, bool) {
	if o == nil || o.NoQSParams == nil {
		return nil, false
	}
	return o.NoQSParams, true
}

// HasNoQSParams returns a boolean if a field has been set.
func (o *CustconfOriginPull) HasNoQSParams() bool {
	if o != nil && o.NoQSParams != nil {
		return true
	}

	return false
}

// SetNoQSParams gets a reference to the given bool and assigns it to the NoQSParams field.
func (o *CustconfOriginPull) SetNoQSParams(v bool) {
	o.NoQSParams = &v
}

// GetRetryMethods returns the RetryMethods field value if set, zero value otherwise.
func (o *CustconfOriginPull) GetRetryMethods() string {
	if o == nil || o.RetryMethods == nil {
		var ret string
		return ret
	}
	return *o.RetryMethods
}

// GetRetryMethodsOk returns a tuple with the RetryMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfOriginPull) GetRetryMethodsOk() (*string, bool) {
	if o == nil || o.RetryMethods == nil {
		return nil, false
	}
	return o.RetryMethods, true
}

// HasRetryMethods returns a boolean if a field has been set.
func (o *CustconfOriginPull) HasRetryMethods() bool {
	if o != nil && o.RetryMethods != nil {
		return true
	}

	return false
}

// SetRetryMethods gets a reference to the given string and assigns it to the RetryMethods field.
func (o *CustconfOriginPull) SetRetryMethods(v string) {
	o.RetryMethods = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *CustconfOriginPull) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfOriginPull) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *CustconfOriginPull) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *CustconfOriginPull) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o CustconfOriginPull) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.RedirectAction != nil {
		toSerialize["redirectAction"] = o.RedirectAction
	}
	if o.NoQSParams != nil {
		toSerialize["noQSParams"] = o.NoQSParams
	}
	if o.RetryMethods != nil {
		toSerialize["retryMethods"] = o.RetryMethods
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableCustconfOriginPull struct {
	value *CustconfOriginPull
	isSet bool
}

func (v NullableCustconfOriginPull) Get() *CustconfOriginPull {
	return v.value
}

func (v *NullableCustconfOriginPull) Set(val *CustconfOriginPull) {
	v.value = val
	v.isSet = true
}

func (v NullableCustconfOriginPull) IsSet() bool {
	return v.isSet
}

func (v *NullableCustconfOriginPull) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustconfOriginPull(val *CustconfOriginPull) *NullableCustconfOriginPull {
	return &NullableCustconfOriginPull{value: val, isSet: true}
}

func (v NullableCustconfOriginPull) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustconfOriginPull) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
