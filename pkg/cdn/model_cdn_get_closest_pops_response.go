/*
 * Content Delivery Network
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cdn

import (
	"encoding/json"
)

// CdnGetClosestPopsResponse The response from a request to scan a URL from the StackPath edge network
type CdnGetClosestPopsResponse struct {
	// Results of the scan
	Result *[]CdnPopScanReport `json:"result,omitempty"`
}

// NewCdnGetClosestPopsResponse instantiates a new CdnGetClosestPopsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdnGetClosestPopsResponse() *CdnGetClosestPopsResponse {
	this := CdnGetClosestPopsResponse{}
	return &this
}

// NewCdnGetClosestPopsResponseWithDefaults instantiates a new CdnGetClosestPopsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdnGetClosestPopsResponseWithDefaults() *CdnGetClosestPopsResponse {
	this := CdnGetClosestPopsResponse{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *CdnGetClosestPopsResponse) GetResult() []CdnPopScanReport {
	if o == nil || o.Result == nil {
		var ret []CdnPopScanReport
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnGetClosestPopsResponse) GetResultOk() (*[]CdnPopScanReport, bool) {
	if o == nil || o.Result == nil {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *CdnGetClosestPopsResponse) HasResult() bool {
	if o != nil && o.Result != nil {
		return true
	}

	return false
}

// SetResult gets a reference to the given []CdnPopScanReport and assigns it to the Result field.
func (o *CdnGetClosestPopsResponse) SetResult(v []CdnPopScanReport) {
	o.Result = &v
}

func (o CdnGetClosestPopsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Result != nil {
		toSerialize["result"] = o.Result
	}
	return json.Marshal(toSerialize)
}

type NullableCdnGetClosestPopsResponse struct {
	value *CdnGetClosestPopsResponse
	isSet bool
}

func (v NullableCdnGetClosestPopsResponse) Get() *CdnGetClosestPopsResponse {
	return v.value
}

func (v *NullableCdnGetClosestPopsResponse) Set(val *CdnGetClosestPopsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCdnGetClosestPopsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCdnGetClosestPopsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdnGetClosestPopsResponse(val *CdnGetClosestPopsResponse) *NullableCdnGetClosestPopsResponse {
	return &NullableCdnGetClosestPopsResponse{value: val, isSet: true}
}

func (v NullableCdnGetClosestPopsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdnGetClosestPopsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
