/*
 * Content Delivery Network
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cdn

import (
	"encoding/json"
)

// CdnRequestCertificateResponse The response from a request to provision an SSL certificate for a CDN site
type CdnRequestCertificateResponse struct {
	Certificate *CdnCertificate `json:"certificate,omitempty"`
	// The certificate's verification requirements
	VerificationRequirements *[]CdnVerificationRequirements `json:"verificationRequirements,omitempty"`
}

// NewCdnRequestCertificateResponse instantiates a new CdnRequestCertificateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdnRequestCertificateResponse() *CdnRequestCertificateResponse {
	this := CdnRequestCertificateResponse{}
	return &this
}

// NewCdnRequestCertificateResponseWithDefaults instantiates a new CdnRequestCertificateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdnRequestCertificateResponseWithDefaults() *CdnRequestCertificateResponse {
	this := CdnRequestCertificateResponse{}
	return &this
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *CdnRequestCertificateResponse) GetCertificate() CdnCertificate {
	if o == nil || o.Certificate == nil {
		var ret CdnCertificate
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnRequestCertificateResponse) GetCertificateOk() (*CdnCertificate, bool) {
	if o == nil || o.Certificate == nil {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *CdnRequestCertificateResponse) HasCertificate() bool {
	if o != nil && o.Certificate != nil {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given CdnCertificate and assigns it to the Certificate field.
func (o *CdnRequestCertificateResponse) SetCertificate(v CdnCertificate) {
	o.Certificate = &v
}

// GetVerificationRequirements returns the VerificationRequirements field value if set, zero value otherwise.
func (o *CdnRequestCertificateResponse) GetVerificationRequirements() []CdnVerificationRequirements {
	if o == nil || o.VerificationRequirements == nil {
		var ret []CdnVerificationRequirements
		return ret
	}
	return *o.VerificationRequirements
}

// GetVerificationRequirementsOk returns a tuple with the VerificationRequirements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnRequestCertificateResponse) GetVerificationRequirementsOk() (*[]CdnVerificationRequirements, bool) {
	if o == nil || o.VerificationRequirements == nil {
		return nil, false
	}
	return o.VerificationRequirements, true
}

// HasVerificationRequirements returns a boolean if a field has been set.
func (o *CdnRequestCertificateResponse) HasVerificationRequirements() bool {
	if o != nil && o.VerificationRequirements != nil {
		return true
	}

	return false
}

// SetVerificationRequirements gets a reference to the given []CdnVerificationRequirements and assigns it to the VerificationRequirements field.
func (o *CdnRequestCertificateResponse) SetVerificationRequirements(v []CdnVerificationRequirements) {
	o.VerificationRequirements = &v
}

func (o CdnRequestCertificateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Certificate != nil {
		toSerialize["certificate"] = o.Certificate
	}
	if o.VerificationRequirements != nil {
		toSerialize["verificationRequirements"] = o.VerificationRequirements
	}
	return json.Marshal(toSerialize)
}

type NullableCdnRequestCertificateResponse struct {
	value *CdnRequestCertificateResponse
	isSet bool
}

func (v NullableCdnRequestCertificateResponse) Get() *CdnRequestCertificateResponse {
	return v.value
}

func (v *NullableCdnRequestCertificateResponse) Set(val *CdnRequestCertificateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCdnRequestCertificateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCdnRequestCertificateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdnRequestCertificateResponse(val *CdnRequestCertificateResponse) *NullableCdnRequestCertificateResponse {
	return &NullableCdnRequestCertificateResponse{value: val, isSet: true}
}

func (v NullableCdnRequestCertificateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdnRequestCertificateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
