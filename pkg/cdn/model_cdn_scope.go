/*
 * Content Delivery Network
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cdn

import (
	"encoding/json"
)

// CdnScope A CDN site scope  Scopes hold a CDN site's configuration. Every site has at least one \"root\" scope that handles primary configuration.
type CdnScope struct {
	// A CDN site scope's unique identifier
	Id *string `json:"id,omitempty"`
	// A CDN site scope's platform  Scope platforms are used internally by StackPath for metrics collection and billing purposes. Typically, most site scope platforms have the value \"CDS\".
	Platform *string `json:"platform,omitempty"`
	// The HTTP request path that is handled by a scope
	Path *string `json:"path,omitempty"`
}

// NewCdnScope instantiates a new CdnScope object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdnScope() *CdnScope {
	this := CdnScope{}
	return &this
}

// NewCdnScopeWithDefaults instantiates a new CdnScope object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdnScopeWithDefaults() *CdnScope {
	this := CdnScope{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CdnScope) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnScope) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CdnScope) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CdnScope) SetId(v string) {
	o.Id = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *CdnScope) GetPlatform() string {
	if o == nil || o.Platform == nil {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnScope) GetPlatformOk() (*string, bool) {
	if o == nil || o.Platform == nil {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *CdnScope) HasPlatform() bool {
	if o != nil && o.Platform != nil {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *CdnScope) SetPlatform(v string) {
	o.Platform = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *CdnScope) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnScope) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *CdnScope) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *CdnScope) SetPath(v string) {
	o.Path = &v
}

func (o CdnScope) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Platform != nil {
		toSerialize["platform"] = o.Platform
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	return json.Marshal(toSerialize)
}

type NullableCdnScope struct {
	value *CdnScope
	isSet bool
}

func (v NullableCdnScope) Get() *CdnScope {
	return v.value
}

func (v *NullableCdnScope) Set(val *CdnScope) {
	v.value = val
	v.isSet = true
}

func (v NullableCdnScope) IsSet() bool {
	return v.isSet
}

func (v *NullableCdnScope) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdnScope(val *CdnScope) *NullableCdnScope {
	return &NullableCdnScope{value: val, isSet: true}
}

func (v NullableCdnScope) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdnScope) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
