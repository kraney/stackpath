/*
 * Content Delivery Network
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cdn

import (
	"encoding/json"
)

// CustconfOriginPullLogs Enable/Disable Origin Pull Logs
type CustconfOriginPullLogs struct {
	// This is used by the API to perform conflict checking
	Id *string `json:"id,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
}

// NewCustconfOriginPullLogs instantiates a new CustconfOriginPullLogs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustconfOriginPullLogs() *CustconfOriginPullLogs {
	this := CustconfOriginPullLogs{}
	return &this
}

// NewCustconfOriginPullLogsWithDefaults instantiates a new CustconfOriginPullLogs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustconfOriginPullLogsWithDefaults() *CustconfOriginPullLogs {
	this := CustconfOriginPullLogs{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustconfOriginPullLogs) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfOriginPullLogs) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustconfOriginPullLogs) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CustconfOriginPullLogs) SetId(v string) {
	o.Id = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *CustconfOriginPullLogs) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfOriginPullLogs) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *CustconfOriginPullLogs) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *CustconfOriginPullLogs) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o CustconfOriginPullLogs) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableCustconfOriginPullLogs struct {
	value *CustconfOriginPullLogs
	isSet bool
}

func (v NullableCustconfOriginPullLogs) Get() *CustconfOriginPullLogs {
	return v.value
}

func (v *NullableCustconfOriginPullLogs) Set(val *CustconfOriginPullLogs) {
	v.value = val
	v.isSet = true
}

func (v NullableCustconfOriginPullLogs) IsSet() bool {
	return v.isSet
}

func (v *NullableCustconfOriginPullLogs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustconfOriginPullLogs(val *CustconfOriginPullLogs) *NullableCustconfOriginPullLogs {
	return &NullableCustconfOriginPullLogs{value: val, isSet: true}
}

func (v NullableCustconfOriginPullLogs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustconfOriginPullLogs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
