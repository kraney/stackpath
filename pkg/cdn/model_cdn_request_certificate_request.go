/*
 * Content Delivery Network
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package cdn

import (
	"encoding/json"
)

// CdnRequestCertificateRequest struct for CdnRequestCertificateRequest
type CdnRequestCertificateRequest struct {
	// An optional list of delivery domains that will be included as subject alternative names on the certificate  If no hosts are provided, all delivery domains on the site will be included with the first one in the list being used as the common name.  If hosts are provided, the first entry will be used as the common name.  All entries in the list are validated against the existing delivery domains for the provided site.
	Hosts *[]string `json:"hosts,omitempty"`
	VerificationMethod *CdnCertificateVerificationMethod `json:"verificationMethod,omitempty"`
}

// NewCdnRequestCertificateRequest instantiates a new CdnRequestCertificateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdnRequestCertificateRequest() *CdnRequestCertificateRequest {
	this := CdnRequestCertificateRequest{}
	var verificationMethod CdnCertificateVerificationMethod = "DNS"
	this.VerificationMethod = &verificationMethod
	return &this
}

// NewCdnRequestCertificateRequestWithDefaults instantiates a new CdnRequestCertificateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdnRequestCertificateRequestWithDefaults() *CdnRequestCertificateRequest {
	this := CdnRequestCertificateRequest{}
	var verificationMethod CdnCertificateVerificationMethod = "DNS"
	this.VerificationMethod = &verificationMethod
	return &this
}

// GetHosts returns the Hosts field value if set, zero value otherwise.
func (o *CdnRequestCertificateRequest) GetHosts() []string {
	if o == nil || o.Hosts == nil {
		var ret []string
		return ret
	}
	return *o.Hosts
}

// GetHostsOk returns a tuple with the Hosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnRequestCertificateRequest) GetHostsOk() (*[]string, bool) {
	if o == nil || o.Hosts == nil {
		return nil, false
	}
	return o.Hosts, true
}

// HasHosts returns a boolean if a field has been set.
func (o *CdnRequestCertificateRequest) HasHosts() bool {
	if o != nil && o.Hosts != nil {
		return true
	}

	return false
}

// SetHosts gets a reference to the given []string and assigns it to the Hosts field.
func (o *CdnRequestCertificateRequest) SetHosts(v []string) {
	o.Hosts = &v
}

// GetVerificationMethod returns the VerificationMethod field value if set, zero value otherwise.
func (o *CdnRequestCertificateRequest) GetVerificationMethod() CdnCertificateVerificationMethod {
	if o == nil || o.VerificationMethod == nil {
		var ret CdnCertificateVerificationMethod
		return ret
	}
	return *o.VerificationMethod
}

// GetVerificationMethodOk returns a tuple with the VerificationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnRequestCertificateRequest) GetVerificationMethodOk() (*CdnCertificateVerificationMethod, bool) {
	if o == nil || o.VerificationMethod == nil {
		return nil, false
	}
	return o.VerificationMethod, true
}

// HasVerificationMethod returns a boolean if a field has been set.
func (o *CdnRequestCertificateRequest) HasVerificationMethod() bool {
	if o != nil && o.VerificationMethod != nil {
		return true
	}

	return false
}

// SetVerificationMethod gets a reference to the given CdnCertificateVerificationMethod and assigns it to the VerificationMethod field.
func (o *CdnRequestCertificateRequest) SetVerificationMethod(v CdnCertificateVerificationMethod) {
	o.VerificationMethod = &v
}

func (o CdnRequestCertificateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Hosts != nil {
		toSerialize["hosts"] = o.Hosts
	}
	if o.VerificationMethod != nil {
		toSerialize["verificationMethod"] = o.VerificationMethod
	}
	return json.Marshal(toSerialize)
}

type NullableCdnRequestCertificateRequest struct {
	value *CdnRequestCertificateRequest
	isSet bool
}

func (v NullableCdnRequestCertificateRequest) Get() *CdnRequestCertificateRequest {
	return v.value
}

func (v *NullableCdnRequestCertificateRequest) Set(val *CdnRequestCertificateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCdnRequestCertificateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCdnRequestCertificateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdnRequestCertificateRequest(val *CdnRequestCertificateRequest) *NullableCdnRequestCertificateRequest {
	return &NullableCdnRequestCertificateRequest{value: val, isSet: true}
}

func (v NullableCdnRequestCertificateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdnRequestCertificateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
