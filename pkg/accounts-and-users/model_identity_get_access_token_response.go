/*
 * Accounts and Users
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package accounts-and-users

import (
	"encoding/json"
)

// IdentityGetAccessTokenResponse A response from a request to generate an OAuth2 access token from API credentials  Use the resulting token to authorize subsequest StackPath API calls
type IdentityGetAccessTokenResponse struct {
	// The access token to be provided as a Bearer token in the Authorization header to API calls
	AccessToken *string `json:"access_token,omitempty"`
	// The token's type  Currently, only bearer tokens are supported
	TokenType *string `json:"token_type,omitempty"`
	// The token's expiration time, measured in seconds
	ExpiresIn *int32 `json:"expires_in,omitempty"`
}

// NewIdentityGetAccessTokenResponse instantiates a new IdentityGetAccessTokenResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityGetAccessTokenResponse() *IdentityGetAccessTokenResponse {
	this := IdentityGetAccessTokenResponse{}
	return &this
}

// NewIdentityGetAccessTokenResponseWithDefaults instantiates a new IdentityGetAccessTokenResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityGetAccessTokenResponseWithDefaults() *IdentityGetAccessTokenResponse {
	this := IdentityGetAccessTokenResponse{}
	return &this
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *IdentityGetAccessTokenResponse) GetAccessToken() string {
	if o == nil || o.AccessToken == nil {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGetAccessTokenResponse) GetAccessTokenOk() (*string, bool) {
	if o == nil || o.AccessToken == nil {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *IdentityGetAccessTokenResponse) HasAccessToken() bool {
	if o != nil && o.AccessToken != nil {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *IdentityGetAccessTokenResponse) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *IdentityGetAccessTokenResponse) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGetAccessTokenResponse) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *IdentityGetAccessTokenResponse) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *IdentityGetAccessTokenResponse) SetTokenType(v string) {
	o.TokenType = &v
}

// GetExpiresIn returns the ExpiresIn field value if set, zero value otherwise.
func (o *IdentityGetAccessTokenResponse) GetExpiresIn() int32 {
	if o == nil || o.ExpiresIn == nil {
		var ret int32
		return ret
	}
	return *o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityGetAccessTokenResponse) GetExpiresInOk() (*int32, bool) {
	if o == nil || o.ExpiresIn == nil {
		return nil, false
	}
	return o.ExpiresIn, true
}

// HasExpiresIn returns a boolean if a field has been set.
func (o *IdentityGetAccessTokenResponse) HasExpiresIn() bool {
	if o != nil && o.ExpiresIn != nil {
		return true
	}

	return false
}

// SetExpiresIn gets a reference to the given int32 and assigns it to the ExpiresIn field.
func (o *IdentityGetAccessTokenResponse) SetExpiresIn(v int32) {
	o.ExpiresIn = &v
}

func (o IdentityGetAccessTokenResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessToken != nil {
		toSerialize["access_token"] = o.AccessToken
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	if o.ExpiresIn != nil {
		toSerialize["expires_in"] = o.ExpiresIn
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityGetAccessTokenResponse struct {
	value *IdentityGetAccessTokenResponse
	isSet bool
}

func (v NullableIdentityGetAccessTokenResponse) Get() *IdentityGetAccessTokenResponse {
	return v.value
}

func (v *NullableIdentityGetAccessTokenResponse) Set(val *IdentityGetAccessTokenResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityGetAccessTokenResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityGetAccessTokenResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityGetAccessTokenResponse(val *IdentityGetAccessTokenResponse) *NullableIdentityGetAccessTokenResponse {
	return &NullableIdentityGetAccessTokenResponse{value: val, isSet: true}
}

func (v NullableIdentityGetAccessTokenResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityGetAccessTokenResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
