/*
 * Accounts and Users
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package accounts-and-users

import (
	"encoding/json"
)

// IdentityChangeUserEmailRequest struct for IdentityChangeUserEmailRequest
type IdentityChangeUserEmailRequest struct {
	// The user's new email address
	Email *string `json:"email,omitempty"`
	// The user's login password
	Password *string `json:"password,omitempty"`
}

// NewIdentityChangeUserEmailRequest instantiates a new IdentityChangeUserEmailRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityChangeUserEmailRequest() *IdentityChangeUserEmailRequest {
	this := IdentityChangeUserEmailRequest{}
	return &this
}

// NewIdentityChangeUserEmailRequestWithDefaults instantiates a new IdentityChangeUserEmailRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityChangeUserEmailRequestWithDefaults() *IdentityChangeUserEmailRequest {
	this := IdentityChangeUserEmailRequest{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *IdentityChangeUserEmailRequest) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityChangeUserEmailRequest) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *IdentityChangeUserEmailRequest) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *IdentityChangeUserEmailRequest) SetEmail(v string) {
	o.Email = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *IdentityChangeUserEmailRequest) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityChangeUserEmailRequest) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *IdentityChangeUserEmailRequest) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *IdentityChangeUserEmailRequest) SetPassword(v string) {
	o.Password = &v
}

func (o IdentityChangeUserEmailRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityChangeUserEmailRequest struct {
	value *IdentityChangeUserEmailRequest
	isSet bool
}

func (v NullableIdentityChangeUserEmailRequest) Get() *IdentityChangeUserEmailRequest {
	return v.value
}

func (v *NullableIdentityChangeUserEmailRequest) Set(val *IdentityChangeUserEmailRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityChangeUserEmailRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityChangeUserEmailRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityChangeUserEmailRequest(val *IdentityChangeUserEmailRequest) *NullableIdentityChangeUserEmailRequest {
	return &NullableIdentityChangeUserEmailRequest{value: val, isSet: true}
}

func (v NullableIdentityChangeUserEmailRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityChangeUserEmailRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
