/*
 * Web Application Firewall
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package waf

import (
	"encoding/json"
)

// WafPolicyGroup A group of WAF policies with similar effect
type WafPolicyGroup struct {
	// A policy group's ID
	Id *string `json:"id,omitempty"`
	// A policy group's name
	Name *string `json:"name,omitempty"`
	// A list of the policies in a policy group
	Policies *[]SchemawafPolicy `json:"policies,omitempty"`
}

// NewWafPolicyGroup instantiates a new WafPolicyGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWafPolicyGroup() *WafPolicyGroup {
	this := WafPolicyGroup{}
	return &this
}

// NewWafPolicyGroupWithDefaults instantiates a new WafPolicyGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWafPolicyGroupWithDefaults() *WafPolicyGroup {
	this := WafPolicyGroup{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WafPolicyGroup) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WafPolicyGroup) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WafPolicyGroup) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WafPolicyGroup) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WafPolicyGroup) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WafPolicyGroup) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WafPolicyGroup) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WafPolicyGroup) SetName(v string) {
	o.Name = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *WafPolicyGroup) GetPolicies() []SchemawafPolicy {
	if o == nil || o.Policies == nil {
		var ret []SchemawafPolicy
		return ret
	}
	return *o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WafPolicyGroup) GetPoliciesOk() (*[]SchemawafPolicy, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *WafPolicyGroup) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []SchemawafPolicy and assigns it to the Policies field.
func (o *WafPolicyGroup) SetPolicies(v []SchemawafPolicy) {
	o.Policies = &v
}

func (o WafPolicyGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	return json.Marshal(toSerialize)
}

type NullableWafPolicyGroup struct {
	value *WafPolicyGroup
	isSet bool
}

func (v NullableWafPolicyGroup) Get() *WafPolicyGroup {
	return v.value
}

func (v *NullableWafPolicyGroup) Set(val *WafPolicyGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableWafPolicyGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableWafPolicyGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWafPolicyGroup(val *WafPolicyGroup) *NullableWafPolicyGroup {
	return &NullableWafPolicyGroup{value: val, isSet: true}
}

func (v NullableWafPolicyGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWafPolicyGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
