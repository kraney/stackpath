/*
 * Web Application Firewall
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package waf

import (
	"encoding/json"
	"time"
)

// SchemawafRequest struct for SchemawafRequest
type SchemawafRequest struct {
	// A request's unique identifier
	Id *string `json:"id,omitempty"`
	// The path of the requested URL
	Path *string `json:"path,omitempty"`
	// The originating IP address
	ClientIp *string `json:"clientIp,omitempty"`
	Method *WafHttpMethod `json:"method,omitempty"`
	// The name of the WAF rule triggered by the request
	RuleName *string `json:"ruleName,omitempty"`
	// The ISO 3166-1 alpha-2 code of the country where the request originated from
	Country *string `json:"country,omitempty"`
	Action *WafRequestAction `json:"action,omitempty"`
	// The unique ID of the WAF rule that triggered the action against the request
	RuleId *string `json:"ruleId,omitempty"`
	// The full user agent string for the request
	UserAgent *string `json:"userAgent,omitempty"`
	// The name of the requesting client, typically the name of the requesting web browser
	UserAgentClient *string `json:"userAgentClient,omitempty"`
	// The organization that owns the request's originating IP address according to a WHOIS lookup
	Organization *string `json:"organization,omitempty"`
	// When the request occurred
	RequestTime *time.Time `json:"requestTime,omitempty"`
	// The request's user-facing identifier  Reference IDs are displayed to the end user when the WAF blocks a request to a site. Please note that a request's ID and reference ID are different.
	ReferenceId *string `json:"referenceId,omitempty"`
}

// NewSchemawafRequest instantiates a new SchemawafRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchemawafRequest() *SchemawafRequest {
	this := SchemawafRequest{}
	var method WafHttpMethod = "METHOD_UNSPECIFIED"
	this.Method = &method
	var action WafRequestAction = "ACTION_UNSPECIFIED"
	this.Action = &action
	return &this
}

// NewSchemawafRequestWithDefaults instantiates a new SchemawafRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchemawafRequestWithDefaults() *SchemawafRequest {
	this := SchemawafRequest{}
	var method WafHttpMethod = "METHOD_UNSPECIFIED"
	this.Method = &method
	var action WafRequestAction = "ACTION_UNSPECIFIED"
	this.Action = &action
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SchemawafRequest) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemawafRequest) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SchemawafRequest) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SchemawafRequest) SetId(v string) {
	o.Id = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *SchemawafRequest) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemawafRequest) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *SchemawafRequest) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *SchemawafRequest) SetPath(v string) {
	o.Path = &v
}

// GetClientIp returns the ClientIp field value if set, zero value otherwise.
func (o *SchemawafRequest) GetClientIp() string {
	if o == nil || o.ClientIp == nil {
		var ret string
		return ret
	}
	return *o.ClientIp
}

// GetClientIpOk returns a tuple with the ClientIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemawafRequest) GetClientIpOk() (*string, bool) {
	if o == nil || o.ClientIp == nil {
		return nil, false
	}
	return o.ClientIp, true
}

// HasClientIp returns a boolean if a field has been set.
func (o *SchemawafRequest) HasClientIp() bool {
	if o != nil && o.ClientIp != nil {
		return true
	}

	return false
}

// SetClientIp gets a reference to the given string and assigns it to the ClientIp field.
func (o *SchemawafRequest) SetClientIp(v string) {
	o.ClientIp = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *SchemawafRequest) GetMethod() WafHttpMethod {
	if o == nil || o.Method == nil {
		var ret WafHttpMethod
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemawafRequest) GetMethodOk() (*WafHttpMethod, bool) {
	if o == nil || o.Method == nil {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *SchemawafRequest) HasMethod() bool {
	if o != nil && o.Method != nil {
		return true
	}

	return false
}

// SetMethod gets a reference to the given WafHttpMethod and assigns it to the Method field.
func (o *SchemawafRequest) SetMethod(v WafHttpMethod) {
	o.Method = &v
}

// GetRuleName returns the RuleName field value if set, zero value otherwise.
func (o *SchemawafRequest) GetRuleName() string {
	if o == nil || o.RuleName == nil {
		var ret string
		return ret
	}
	return *o.RuleName
}

// GetRuleNameOk returns a tuple with the RuleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemawafRequest) GetRuleNameOk() (*string, bool) {
	if o == nil || o.RuleName == nil {
		return nil, false
	}
	return o.RuleName, true
}

// HasRuleName returns a boolean if a field has been set.
func (o *SchemawafRequest) HasRuleName() bool {
	if o != nil && o.RuleName != nil {
		return true
	}

	return false
}

// SetRuleName gets a reference to the given string and assigns it to the RuleName field.
func (o *SchemawafRequest) SetRuleName(v string) {
	o.RuleName = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *SchemawafRequest) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemawafRequest) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *SchemawafRequest) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *SchemawafRequest) SetCountry(v string) {
	o.Country = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *SchemawafRequest) GetAction() WafRequestAction {
	if o == nil || o.Action == nil {
		var ret WafRequestAction
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemawafRequest) GetActionOk() (*WafRequestAction, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *SchemawafRequest) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given WafRequestAction and assigns it to the Action field.
func (o *SchemawafRequest) SetAction(v WafRequestAction) {
	o.Action = &v
}

// GetRuleId returns the RuleId field value if set, zero value otherwise.
func (o *SchemawafRequest) GetRuleId() string {
	if o == nil || o.RuleId == nil {
		var ret string
		return ret
	}
	return *o.RuleId
}

// GetRuleIdOk returns a tuple with the RuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemawafRequest) GetRuleIdOk() (*string, bool) {
	if o == nil || o.RuleId == nil {
		return nil, false
	}
	return o.RuleId, true
}

// HasRuleId returns a boolean if a field has been set.
func (o *SchemawafRequest) HasRuleId() bool {
	if o != nil && o.RuleId != nil {
		return true
	}

	return false
}

// SetRuleId gets a reference to the given string and assigns it to the RuleId field.
func (o *SchemawafRequest) SetRuleId(v string) {
	o.RuleId = &v
}

// GetUserAgent returns the UserAgent field value if set, zero value otherwise.
func (o *SchemawafRequest) GetUserAgent() string {
	if o == nil || o.UserAgent == nil {
		var ret string
		return ret
	}
	return *o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemawafRequest) GetUserAgentOk() (*string, bool) {
	if o == nil || o.UserAgent == nil {
		return nil, false
	}
	return o.UserAgent, true
}

// HasUserAgent returns a boolean if a field has been set.
func (o *SchemawafRequest) HasUserAgent() bool {
	if o != nil && o.UserAgent != nil {
		return true
	}

	return false
}

// SetUserAgent gets a reference to the given string and assigns it to the UserAgent field.
func (o *SchemawafRequest) SetUserAgent(v string) {
	o.UserAgent = &v
}

// GetUserAgentClient returns the UserAgentClient field value if set, zero value otherwise.
func (o *SchemawafRequest) GetUserAgentClient() string {
	if o == nil || o.UserAgentClient == nil {
		var ret string
		return ret
	}
	return *o.UserAgentClient
}

// GetUserAgentClientOk returns a tuple with the UserAgentClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemawafRequest) GetUserAgentClientOk() (*string, bool) {
	if o == nil || o.UserAgentClient == nil {
		return nil, false
	}
	return o.UserAgentClient, true
}

// HasUserAgentClient returns a boolean if a field has been set.
func (o *SchemawafRequest) HasUserAgentClient() bool {
	if o != nil && o.UserAgentClient != nil {
		return true
	}

	return false
}

// SetUserAgentClient gets a reference to the given string and assigns it to the UserAgentClient field.
func (o *SchemawafRequest) SetUserAgentClient(v string) {
	o.UserAgentClient = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *SchemawafRequest) GetOrganization() string {
	if o == nil || o.Organization == nil {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemawafRequest) GetOrganizationOk() (*string, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *SchemawafRequest) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *SchemawafRequest) SetOrganization(v string) {
	o.Organization = &v
}

// GetRequestTime returns the RequestTime field value if set, zero value otherwise.
func (o *SchemawafRequest) GetRequestTime() time.Time {
	if o == nil || o.RequestTime == nil {
		var ret time.Time
		return ret
	}
	return *o.RequestTime
}

// GetRequestTimeOk returns a tuple with the RequestTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemawafRequest) GetRequestTimeOk() (*time.Time, bool) {
	if o == nil || o.RequestTime == nil {
		return nil, false
	}
	return o.RequestTime, true
}

// HasRequestTime returns a boolean if a field has been set.
func (o *SchemawafRequest) HasRequestTime() bool {
	if o != nil && o.RequestTime != nil {
		return true
	}

	return false
}

// SetRequestTime gets a reference to the given time.Time and assigns it to the RequestTime field.
func (o *SchemawafRequest) SetRequestTime(v time.Time) {
	o.RequestTime = &v
}

// GetReferenceId returns the ReferenceId field value if set, zero value otherwise.
func (o *SchemawafRequest) GetReferenceId() string {
	if o == nil || o.ReferenceId == nil {
		var ret string
		return ret
	}
	return *o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemawafRequest) GetReferenceIdOk() (*string, bool) {
	if o == nil || o.ReferenceId == nil {
		return nil, false
	}
	return o.ReferenceId, true
}

// HasReferenceId returns a boolean if a field has been set.
func (o *SchemawafRequest) HasReferenceId() bool {
	if o != nil && o.ReferenceId != nil {
		return true
	}

	return false
}

// SetReferenceId gets a reference to the given string and assigns it to the ReferenceId field.
func (o *SchemawafRequest) SetReferenceId(v string) {
	o.ReferenceId = &v
}

func (o SchemawafRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.ClientIp != nil {
		toSerialize["clientIp"] = o.ClientIp
	}
	if o.Method != nil {
		toSerialize["method"] = o.Method
	}
	if o.RuleName != nil {
		toSerialize["ruleName"] = o.RuleName
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.RuleId != nil {
		toSerialize["ruleId"] = o.RuleId
	}
	if o.UserAgent != nil {
		toSerialize["userAgent"] = o.UserAgent
	}
	if o.UserAgentClient != nil {
		toSerialize["userAgentClient"] = o.UserAgentClient
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.RequestTime != nil {
		toSerialize["requestTime"] = o.RequestTime
	}
	if o.ReferenceId != nil {
		toSerialize["referenceId"] = o.ReferenceId
	}
	return json.Marshal(toSerialize)
}

type NullableSchemawafRequest struct {
	value *SchemawafRequest
	isSet bool
}

func (v NullableSchemawafRequest) Get() *SchemawafRequest {
	return v.value
}

func (v *NullableSchemawafRequest) Set(val *SchemawafRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemawafRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemawafRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemawafRequest(val *SchemawafRequest) *NullableSchemawafRequest {
	return &NullableSchemawafRequest{value: val, isSet: true}
}

func (v NullableSchemawafRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemawafRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
