/*
 * Web Application Firewall
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package waf

import (
	"encoding/json"
)

// ConditionResponseHeaderExistsCondition Match when a response header is present
type ConditionResponseHeaderExistsCondition struct {
	// The response header name
	Header *string `json:"header,omitempty"`
}

// NewConditionResponseHeaderExistsCondition instantiates a new ConditionResponseHeaderExistsCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConditionResponseHeaderExistsCondition() *ConditionResponseHeaderExistsCondition {
	this := ConditionResponseHeaderExistsCondition{}
	return &this
}

// NewConditionResponseHeaderExistsConditionWithDefaults instantiates a new ConditionResponseHeaderExistsCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConditionResponseHeaderExistsConditionWithDefaults() *ConditionResponseHeaderExistsCondition {
	this := ConditionResponseHeaderExistsCondition{}
	return &this
}

// GetHeader returns the Header field value if set, zero value otherwise.
func (o *ConditionResponseHeaderExistsCondition) GetHeader() string {
	if o == nil || o.Header == nil {
		var ret string
		return ret
	}
	return *o.Header
}

// GetHeaderOk returns a tuple with the Header field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConditionResponseHeaderExistsCondition) GetHeaderOk() (*string, bool) {
	if o == nil || o.Header == nil {
		return nil, false
	}
	return o.Header, true
}

// HasHeader returns a boolean if a field has been set.
func (o *ConditionResponseHeaderExistsCondition) HasHeader() bool {
	if o != nil && o.Header != nil {
		return true
	}

	return false
}

// SetHeader gets a reference to the given string and assigns it to the Header field.
func (o *ConditionResponseHeaderExistsCondition) SetHeader(v string) {
	o.Header = &v
}

func (o ConditionResponseHeaderExistsCondition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Header != nil {
		toSerialize["header"] = o.Header
	}
	return json.Marshal(toSerialize)
}

type NullableConditionResponseHeaderExistsCondition struct {
	value *ConditionResponseHeaderExistsCondition
	isSet bool
}

func (v NullableConditionResponseHeaderExistsCondition) Get() *ConditionResponseHeaderExistsCondition {
	return v.value
}

func (v *NullableConditionResponseHeaderExistsCondition) Set(val *ConditionResponseHeaderExistsCondition) {
	v.value = val
	v.isSet = true
}

func (v NullableConditionResponseHeaderExistsCondition) IsSet() bool {
	return v.isSet
}

func (v *NullableConditionResponseHeaderExistsCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConditionResponseHeaderExistsCondition(val *ConditionResponseHeaderExistsCondition) *NullableConditionResponseHeaderExistsCondition {
	return &NullableConditionResponseHeaderExistsCondition{value: val, isSet: true}
}

func (v NullableConditionResponseHeaderExistsCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConditionResponseHeaderExistsCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
