/*
 * Web Application Firewall
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package waf

import (
	"encoding/json"
)

// WafCreateRuleResponse The results from a request to create a WAF rule
type WafCreateRuleResponse struct {
	Rule *WafRule `json:"rule,omitempty"`
}

// NewWafCreateRuleResponse instantiates a new WafCreateRuleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWafCreateRuleResponse() *WafCreateRuleResponse {
	this := WafCreateRuleResponse{}
	return &this
}

// NewWafCreateRuleResponseWithDefaults instantiates a new WafCreateRuleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWafCreateRuleResponseWithDefaults() *WafCreateRuleResponse {
	this := WafCreateRuleResponse{}
	return &this
}

// GetRule returns the Rule field value if set, zero value otherwise.
func (o *WafCreateRuleResponse) GetRule() WafRule {
	if o == nil || o.Rule == nil {
		var ret WafRule
		return ret
	}
	return *o.Rule
}

// GetRuleOk returns a tuple with the Rule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WafCreateRuleResponse) GetRuleOk() (*WafRule, bool) {
	if o == nil || o.Rule == nil {
		return nil, false
	}
	return o.Rule, true
}

// HasRule returns a boolean if a field has been set.
func (o *WafCreateRuleResponse) HasRule() bool {
	if o != nil && o.Rule != nil {
		return true
	}

	return false
}

// SetRule gets a reference to the given WafRule and assigns it to the Rule field.
func (o *WafCreateRuleResponse) SetRule(v WafRule) {
	o.Rule = &v
}

func (o WafCreateRuleResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Rule != nil {
		toSerialize["rule"] = o.Rule
	}
	return json.Marshal(toSerialize)
}

type NullableWafCreateRuleResponse struct {
	value *WafCreateRuleResponse
	isSet bool
}

func (v NullableWafCreateRuleResponse) Get() *WafCreateRuleResponse {
	return v.value
}

func (v *NullableWafCreateRuleResponse) Set(val *WafCreateRuleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWafCreateRuleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWafCreateRuleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWafCreateRuleResponse(val *WafCreateRuleResponse) *NullableWafCreateRuleResponse {
	return &NullableWafCreateRuleResponse{value: val, isSet: true}
}

func (v NullableWafCreateRuleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWafCreateRuleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
