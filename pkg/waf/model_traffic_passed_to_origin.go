/*
 * Web Application Firewall
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package waf

import (
	"encoding/json"
)

// TrafficPassedToOrigin Aspects of legitimate WAF traffic
type TrafficPassedToOrigin struct {
	// The number of requests that passed all policies and rules and were sent to the origin
	LegitimateRequest *string `json:"legitimateRequest,omitempty"`
	// The number of requests allowed by whitelist
	Whitelisted *string `json:"whitelisted,omitempty"`
	// The number of requests allowed by allow search bot policies
	AllowedSearchEngine *string `json:"allowedSearchEngine,omitempty"`
	// The number of requests for static content that was not analyzed by the WAF
	StaticContent *string `json:"staticContent,omitempty"`
	// All uncategorized requests that the WAF passed to the origin
	Uncategorized *string `json:"uncategorized,omitempty"`
}

// NewTrafficPassedToOrigin instantiates a new TrafficPassedToOrigin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrafficPassedToOrigin() *TrafficPassedToOrigin {
	this := TrafficPassedToOrigin{}
	return &this
}

// NewTrafficPassedToOriginWithDefaults instantiates a new TrafficPassedToOrigin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrafficPassedToOriginWithDefaults() *TrafficPassedToOrigin {
	this := TrafficPassedToOrigin{}
	return &this
}

// GetLegitimateRequest returns the LegitimateRequest field value if set, zero value otherwise.
func (o *TrafficPassedToOrigin) GetLegitimateRequest() string {
	if o == nil || o.LegitimateRequest == nil {
		var ret string
		return ret
	}
	return *o.LegitimateRequest
}

// GetLegitimateRequestOk returns a tuple with the LegitimateRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficPassedToOrigin) GetLegitimateRequestOk() (*string, bool) {
	if o == nil || o.LegitimateRequest == nil {
		return nil, false
	}
	return o.LegitimateRequest, true
}

// HasLegitimateRequest returns a boolean if a field has been set.
func (o *TrafficPassedToOrigin) HasLegitimateRequest() bool {
	if o != nil && o.LegitimateRequest != nil {
		return true
	}

	return false
}

// SetLegitimateRequest gets a reference to the given string and assigns it to the LegitimateRequest field.
func (o *TrafficPassedToOrigin) SetLegitimateRequest(v string) {
	o.LegitimateRequest = &v
}

// GetWhitelisted returns the Whitelisted field value if set, zero value otherwise.
func (o *TrafficPassedToOrigin) GetWhitelisted() string {
	if o == nil || o.Whitelisted == nil {
		var ret string
		return ret
	}
	return *o.Whitelisted
}

// GetWhitelistedOk returns a tuple with the Whitelisted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficPassedToOrigin) GetWhitelistedOk() (*string, bool) {
	if o == nil || o.Whitelisted == nil {
		return nil, false
	}
	return o.Whitelisted, true
}

// HasWhitelisted returns a boolean if a field has been set.
func (o *TrafficPassedToOrigin) HasWhitelisted() bool {
	if o != nil && o.Whitelisted != nil {
		return true
	}

	return false
}

// SetWhitelisted gets a reference to the given string and assigns it to the Whitelisted field.
func (o *TrafficPassedToOrigin) SetWhitelisted(v string) {
	o.Whitelisted = &v
}

// GetAllowedSearchEngine returns the AllowedSearchEngine field value if set, zero value otherwise.
func (o *TrafficPassedToOrigin) GetAllowedSearchEngine() string {
	if o == nil || o.AllowedSearchEngine == nil {
		var ret string
		return ret
	}
	return *o.AllowedSearchEngine
}

// GetAllowedSearchEngineOk returns a tuple with the AllowedSearchEngine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficPassedToOrigin) GetAllowedSearchEngineOk() (*string, bool) {
	if o == nil || o.AllowedSearchEngine == nil {
		return nil, false
	}
	return o.AllowedSearchEngine, true
}

// HasAllowedSearchEngine returns a boolean if a field has been set.
func (o *TrafficPassedToOrigin) HasAllowedSearchEngine() bool {
	if o != nil && o.AllowedSearchEngine != nil {
		return true
	}

	return false
}

// SetAllowedSearchEngine gets a reference to the given string and assigns it to the AllowedSearchEngine field.
func (o *TrafficPassedToOrigin) SetAllowedSearchEngine(v string) {
	o.AllowedSearchEngine = &v
}

// GetStaticContent returns the StaticContent field value if set, zero value otherwise.
func (o *TrafficPassedToOrigin) GetStaticContent() string {
	if o == nil || o.StaticContent == nil {
		var ret string
		return ret
	}
	return *o.StaticContent
}

// GetStaticContentOk returns a tuple with the StaticContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficPassedToOrigin) GetStaticContentOk() (*string, bool) {
	if o == nil || o.StaticContent == nil {
		return nil, false
	}
	return o.StaticContent, true
}

// HasStaticContent returns a boolean if a field has been set.
func (o *TrafficPassedToOrigin) HasStaticContent() bool {
	if o != nil && o.StaticContent != nil {
		return true
	}

	return false
}

// SetStaticContent gets a reference to the given string and assigns it to the StaticContent field.
func (o *TrafficPassedToOrigin) SetStaticContent(v string) {
	o.StaticContent = &v
}

// GetUncategorized returns the Uncategorized field value if set, zero value otherwise.
func (o *TrafficPassedToOrigin) GetUncategorized() string {
	if o == nil || o.Uncategorized == nil {
		var ret string
		return ret
	}
	return *o.Uncategorized
}

// GetUncategorizedOk returns a tuple with the Uncategorized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficPassedToOrigin) GetUncategorizedOk() (*string, bool) {
	if o == nil || o.Uncategorized == nil {
		return nil, false
	}
	return o.Uncategorized, true
}

// HasUncategorized returns a boolean if a field has been set.
func (o *TrafficPassedToOrigin) HasUncategorized() bool {
	if o != nil && o.Uncategorized != nil {
		return true
	}

	return false
}

// SetUncategorized gets a reference to the given string and assigns it to the Uncategorized field.
func (o *TrafficPassedToOrigin) SetUncategorized(v string) {
	o.Uncategorized = &v
}

func (o TrafficPassedToOrigin) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LegitimateRequest != nil {
		toSerialize["legitimateRequest"] = o.LegitimateRequest
	}
	if o.Whitelisted != nil {
		toSerialize["whitelisted"] = o.Whitelisted
	}
	if o.AllowedSearchEngine != nil {
		toSerialize["allowedSearchEngine"] = o.AllowedSearchEngine
	}
	if o.StaticContent != nil {
		toSerialize["staticContent"] = o.StaticContent
	}
	if o.Uncategorized != nil {
		toSerialize["uncategorized"] = o.Uncategorized
	}
	return json.Marshal(toSerialize)
}

type NullableTrafficPassedToOrigin struct {
	value *TrafficPassedToOrigin
	isSet bool
}

func (v NullableTrafficPassedToOrigin) Get() *TrafficPassedToOrigin {
	return v.value
}

func (v *NullableTrafficPassedToOrigin) Set(val *TrafficPassedToOrigin) {
	v.value = val
	v.isSet = true
}

func (v NullableTrafficPassedToOrigin) IsSet() bool {
	return v.isSet
}

func (v *NullableTrafficPassedToOrigin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrafficPassedToOrigin(val *TrafficPassedToOrigin) *NullableTrafficPassedToOrigin {
	return &NullableTrafficPassedToOrigin{value: val, isSet: true}
}

func (v NullableTrafficPassedToOrigin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrafficPassedToOrigin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
