/*
 * Web Application Firewall
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package waf

import (
	"encoding/json"
)

// WafVerificationRequirements Conditions that must be met to verify ownership of a domain for SSL certificate provisioning
type WafVerificationRequirements struct {
	DnsVerificationDetails *WafDnsVerificationDetails `json:"dnsVerificationDetails,omitempty"`
	HttpVerificationDetails *WafHttpVerificationDetails `json:"httpVerificationDetails,omitempty"`
	VerificationMethod *WafCertificateVerificationMethod `json:"verificationMethod,omitempty"`
}

// NewWafVerificationRequirements instantiates a new WafVerificationRequirements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWafVerificationRequirements() *WafVerificationRequirements {
	this := WafVerificationRequirements{}
	var verificationMethod WafCertificateVerificationMethod = "DNS"
	this.VerificationMethod = &verificationMethod
	return &this
}

// NewWafVerificationRequirementsWithDefaults instantiates a new WafVerificationRequirements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWafVerificationRequirementsWithDefaults() *WafVerificationRequirements {
	this := WafVerificationRequirements{}
	var verificationMethod WafCertificateVerificationMethod = "DNS"
	this.VerificationMethod = &verificationMethod
	return &this
}

// GetDnsVerificationDetails returns the DnsVerificationDetails field value if set, zero value otherwise.
func (o *WafVerificationRequirements) GetDnsVerificationDetails() WafDnsVerificationDetails {
	if o == nil || o.DnsVerificationDetails == nil {
		var ret WafDnsVerificationDetails
		return ret
	}
	return *o.DnsVerificationDetails
}

// GetDnsVerificationDetailsOk returns a tuple with the DnsVerificationDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WafVerificationRequirements) GetDnsVerificationDetailsOk() (*WafDnsVerificationDetails, bool) {
	if o == nil || o.DnsVerificationDetails == nil {
		return nil, false
	}
	return o.DnsVerificationDetails, true
}

// HasDnsVerificationDetails returns a boolean if a field has been set.
func (o *WafVerificationRequirements) HasDnsVerificationDetails() bool {
	if o != nil && o.DnsVerificationDetails != nil {
		return true
	}

	return false
}

// SetDnsVerificationDetails gets a reference to the given WafDnsVerificationDetails and assigns it to the DnsVerificationDetails field.
func (o *WafVerificationRequirements) SetDnsVerificationDetails(v WafDnsVerificationDetails) {
	o.DnsVerificationDetails = &v
}

// GetHttpVerificationDetails returns the HttpVerificationDetails field value if set, zero value otherwise.
func (o *WafVerificationRequirements) GetHttpVerificationDetails() WafHttpVerificationDetails {
	if o == nil || o.HttpVerificationDetails == nil {
		var ret WafHttpVerificationDetails
		return ret
	}
	return *o.HttpVerificationDetails
}

// GetHttpVerificationDetailsOk returns a tuple with the HttpVerificationDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WafVerificationRequirements) GetHttpVerificationDetailsOk() (*WafHttpVerificationDetails, bool) {
	if o == nil || o.HttpVerificationDetails == nil {
		return nil, false
	}
	return o.HttpVerificationDetails, true
}

// HasHttpVerificationDetails returns a boolean if a field has been set.
func (o *WafVerificationRequirements) HasHttpVerificationDetails() bool {
	if o != nil && o.HttpVerificationDetails != nil {
		return true
	}

	return false
}

// SetHttpVerificationDetails gets a reference to the given WafHttpVerificationDetails and assigns it to the HttpVerificationDetails field.
func (o *WafVerificationRequirements) SetHttpVerificationDetails(v WafHttpVerificationDetails) {
	o.HttpVerificationDetails = &v
}

// GetVerificationMethod returns the VerificationMethod field value if set, zero value otherwise.
func (o *WafVerificationRequirements) GetVerificationMethod() WafCertificateVerificationMethod {
	if o == nil || o.VerificationMethod == nil {
		var ret WafCertificateVerificationMethod
		return ret
	}
	return *o.VerificationMethod
}

// GetVerificationMethodOk returns a tuple with the VerificationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WafVerificationRequirements) GetVerificationMethodOk() (*WafCertificateVerificationMethod, bool) {
	if o == nil || o.VerificationMethod == nil {
		return nil, false
	}
	return o.VerificationMethod, true
}

// HasVerificationMethod returns a boolean if a field has been set.
func (o *WafVerificationRequirements) HasVerificationMethod() bool {
	if o != nil && o.VerificationMethod != nil {
		return true
	}

	return false
}

// SetVerificationMethod gets a reference to the given WafCertificateVerificationMethod and assigns it to the VerificationMethod field.
func (o *WafVerificationRequirements) SetVerificationMethod(v WafCertificateVerificationMethod) {
	o.VerificationMethod = &v
}

func (o WafVerificationRequirements) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DnsVerificationDetails != nil {
		toSerialize["dnsVerificationDetails"] = o.DnsVerificationDetails
	}
	if o.HttpVerificationDetails != nil {
		toSerialize["httpVerificationDetails"] = o.HttpVerificationDetails
	}
	if o.VerificationMethod != nil {
		toSerialize["verificationMethod"] = o.VerificationMethod
	}
	return json.Marshal(toSerialize)
}

type NullableWafVerificationRequirements struct {
	value *WafVerificationRequirements
	isSet bool
}

func (v NullableWafVerificationRequirements) Get() *WafVerificationRequirements {
	return v.value
}

func (v *NullableWafVerificationRequirements) Set(val *WafVerificationRequirements) {
	v.value = val
	v.isSet = true
}

func (v NullableWafVerificationRequirements) IsSet() bool {
	return v.isSet
}

func (v *NullableWafVerificationRequirements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWafVerificationRequirements(val *WafVerificationRequirements) *NullableWafVerificationRequirements {
	return &NullableWafVerificationRequirements{value: val, isSet: true}
}

func (v NullableWafVerificationRequirements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWafVerificationRequirements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
