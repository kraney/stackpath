/*
 * Web Application Firewall
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package waf

import (
	"encoding/json"
)

// ConditionUserAgentCondition Match the user agent making the request
type ConditionUserAgentCondition struct {
	// The user agent value to match
	UserAgent *string `json:"userAgent,omitempty"`
	// Whether to perform an exact match or a string contains match of the user agent
	ExactMatch *bool `json:"exactMatch,omitempty"`
}

// NewConditionUserAgentCondition instantiates a new ConditionUserAgentCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConditionUserAgentCondition() *ConditionUserAgentCondition {
	this := ConditionUserAgentCondition{}
	return &this
}

// NewConditionUserAgentConditionWithDefaults instantiates a new ConditionUserAgentCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConditionUserAgentConditionWithDefaults() *ConditionUserAgentCondition {
	this := ConditionUserAgentCondition{}
	return &this
}

// GetUserAgent returns the UserAgent field value if set, zero value otherwise.
func (o *ConditionUserAgentCondition) GetUserAgent() string {
	if o == nil || o.UserAgent == nil {
		var ret string
		return ret
	}
	return *o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConditionUserAgentCondition) GetUserAgentOk() (*string, bool) {
	if o == nil || o.UserAgent == nil {
		return nil, false
	}
	return o.UserAgent, true
}

// HasUserAgent returns a boolean if a field has been set.
func (o *ConditionUserAgentCondition) HasUserAgent() bool {
	if o != nil && o.UserAgent != nil {
		return true
	}

	return false
}

// SetUserAgent gets a reference to the given string and assigns it to the UserAgent field.
func (o *ConditionUserAgentCondition) SetUserAgent(v string) {
	o.UserAgent = &v
}

// GetExactMatch returns the ExactMatch field value if set, zero value otherwise.
func (o *ConditionUserAgentCondition) GetExactMatch() bool {
	if o == nil || o.ExactMatch == nil {
		var ret bool
		return ret
	}
	return *o.ExactMatch
}

// GetExactMatchOk returns a tuple with the ExactMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConditionUserAgentCondition) GetExactMatchOk() (*bool, bool) {
	if o == nil || o.ExactMatch == nil {
		return nil, false
	}
	return o.ExactMatch, true
}

// HasExactMatch returns a boolean if a field has been set.
func (o *ConditionUserAgentCondition) HasExactMatch() bool {
	if o != nil && o.ExactMatch != nil {
		return true
	}

	return false
}

// SetExactMatch gets a reference to the given bool and assigns it to the ExactMatch field.
func (o *ConditionUserAgentCondition) SetExactMatch(v bool) {
	o.ExactMatch = &v
}

func (o ConditionUserAgentCondition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserAgent != nil {
		toSerialize["userAgent"] = o.UserAgent
	}
	if o.ExactMatch != nil {
		toSerialize["exactMatch"] = o.ExactMatch
	}
	return json.Marshal(toSerialize)
}

type NullableConditionUserAgentCondition struct {
	value *ConditionUserAgentCondition
	isSet bool
}

func (v NullableConditionUserAgentCondition) Get() *ConditionUserAgentCondition {
	return v.value
}

func (v *NullableConditionUserAgentCondition) Set(val *ConditionUserAgentCondition) {
	v.value = val
	v.isSet = true
}

func (v NullableConditionUserAgentCondition) IsSet() bool {
	return v.isSet
}

func (v *NullableConditionUserAgentCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConditionUserAgentCondition(val *ConditionUserAgentCondition) *NullableConditionUserAgentCondition {
	return &NullableConditionUserAgentCondition{value: val, isSet: true}
}

func (v NullableConditionUserAgentCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConditionUserAgentCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
