/*
 * Web Application Firewall
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package waf

import (
	"encoding/json"
)

// ConditionOwnerTypeCondition Match the type of organization that owns the IP address making an incoming request
type ConditionOwnerTypeCondition struct {
	// The owner value to match against
	OwnerTypes *[]OwnerTypeConditionOwnerType `json:"ownerTypes,omitempty"`
}

// NewConditionOwnerTypeCondition instantiates a new ConditionOwnerTypeCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConditionOwnerTypeCondition() *ConditionOwnerTypeCondition {
	this := ConditionOwnerTypeCondition{}
	return &this
}

// NewConditionOwnerTypeConditionWithDefaults instantiates a new ConditionOwnerTypeCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConditionOwnerTypeConditionWithDefaults() *ConditionOwnerTypeCondition {
	this := ConditionOwnerTypeCondition{}
	return &this
}

// GetOwnerTypes returns the OwnerTypes field value if set, zero value otherwise.
func (o *ConditionOwnerTypeCondition) GetOwnerTypes() []OwnerTypeConditionOwnerType {
	if o == nil || o.OwnerTypes == nil {
		var ret []OwnerTypeConditionOwnerType
		return ret
	}
	return *o.OwnerTypes
}

// GetOwnerTypesOk returns a tuple with the OwnerTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConditionOwnerTypeCondition) GetOwnerTypesOk() (*[]OwnerTypeConditionOwnerType, bool) {
	if o == nil || o.OwnerTypes == nil {
		return nil, false
	}
	return o.OwnerTypes, true
}

// HasOwnerTypes returns a boolean if a field has been set.
func (o *ConditionOwnerTypeCondition) HasOwnerTypes() bool {
	if o != nil && o.OwnerTypes != nil {
		return true
	}

	return false
}

// SetOwnerTypes gets a reference to the given []OwnerTypeConditionOwnerType and assigns it to the OwnerTypes field.
func (o *ConditionOwnerTypeCondition) SetOwnerTypes(v []OwnerTypeConditionOwnerType) {
	o.OwnerTypes = &v
}

func (o ConditionOwnerTypeCondition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OwnerTypes != nil {
		toSerialize["ownerTypes"] = o.OwnerTypes
	}
	return json.Marshal(toSerialize)
}

type NullableConditionOwnerTypeCondition struct {
	value *ConditionOwnerTypeCondition
	isSet bool
}

func (v NullableConditionOwnerTypeCondition) Get() *ConditionOwnerTypeCondition {
	return v.value
}

func (v *NullableConditionOwnerTypeCondition) Set(val *ConditionOwnerTypeCondition) {
	v.value = val
	v.isSet = true
}

func (v NullableConditionOwnerTypeCondition) IsSet() bool {
	return v.isSet
}

func (v *NullableConditionOwnerTypeCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConditionOwnerTypeCondition(val *ConditionOwnerTypeCondition) *NullableConditionOwnerTypeCondition {
	return &NullableConditionOwnerTypeCondition{value: val, isSet: true}
}

func (v NullableConditionOwnerTypeCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConditionOwnerTypeCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
