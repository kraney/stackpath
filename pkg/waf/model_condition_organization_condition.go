/*
 * Web Application Firewall
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package waf

import (
	"encoding/json"
)

// ConditionOrganizationCondition Match the organization the request originated from, as determined by a WHOIS lookup of the requesting IP
type ConditionOrganizationCondition struct {
	// The organization to match against
	Organization *string `json:"organization,omitempty"`
}

// NewConditionOrganizationCondition instantiates a new ConditionOrganizationCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConditionOrganizationCondition() *ConditionOrganizationCondition {
	this := ConditionOrganizationCondition{}
	return &this
}

// NewConditionOrganizationConditionWithDefaults instantiates a new ConditionOrganizationCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConditionOrganizationConditionWithDefaults() *ConditionOrganizationCondition {
	this := ConditionOrganizationCondition{}
	return &this
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *ConditionOrganizationCondition) GetOrganization() string {
	if o == nil || o.Organization == nil {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConditionOrganizationCondition) GetOrganizationOk() (*string, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *ConditionOrganizationCondition) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *ConditionOrganizationCondition) SetOrganization(v string) {
	o.Organization = &v
}

func (o ConditionOrganizationCondition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	return json.Marshal(toSerialize)
}

type NullableConditionOrganizationCondition struct {
	value *ConditionOrganizationCondition
	isSet bool
}

func (v NullableConditionOrganizationCondition) Get() *ConditionOrganizationCondition {
	return v.value
}

func (v *NullableConditionOrganizationCondition) Set(val *ConditionOrganizationCondition) {
	v.value = val
	v.isSet = true
}

func (v NullableConditionOrganizationCondition) IsSet() bool {
	return v.isSet
}

func (v *NullableConditionOrganizationCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConditionOrganizationCondition(val *ConditionOrganizationCondition) *NullableConditionOrganizationCondition {
	return &NullableConditionOrganizationCondition{value: val, isSet: true}
}

func (v NullableConditionOrganizationCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConditionOrganizationCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
