/*
 * Edge Compute Networking
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package edge-compute-networking

import (
	"encoding/json"
)

// V1Ingress An inbound rule to workload instances
type V1Ingress struct {
	// Detailed summary of what the ingress rule does
	Description *string `json:"description,omitempty"`
	Action *V1Action `json:"action,omitempty"`
	From *V1HostRule `json:"from,omitempty"`
	Protocols *V1Protocols `json:"protocols,omitempty"`
}

// NewV1Ingress instantiates a new V1Ingress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1Ingress() *V1Ingress {
	this := V1Ingress{}
	var action V1Action = "UNDEFINED"
	this.Action = &action
	return &this
}

// NewV1IngressWithDefaults instantiates a new V1Ingress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1IngressWithDefaults() *V1Ingress {
	this := V1Ingress{}
	var action V1Action = "UNDEFINED"
	this.Action = &action
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *V1Ingress) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Ingress) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *V1Ingress) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *V1Ingress) SetDescription(v string) {
	o.Description = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *V1Ingress) GetAction() V1Action {
	if o == nil || o.Action == nil {
		var ret V1Action
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Ingress) GetActionOk() (*V1Action, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *V1Ingress) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given V1Action and assigns it to the Action field.
func (o *V1Ingress) SetAction(v V1Action) {
	o.Action = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *V1Ingress) GetFrom() V1HostRule {
	if o == nil || o.From == nil {
		var ret V1HostRule
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Ingress) GetFromOk() (*V1HostRule, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *V1Ingress) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given V1HostRule and assigns it to the From field.
func (o *V1Ingress) SetFrom(v V1HostRule) {
	o.From = &v
}

// GetProtocols returns the Protocols field value if set, zero value otherwise.
func (o *V1Ingress) GetProtocols() V1Protocols {
	if o == nil || o.Protocols == nil {
		var ret V1Protocols
		return ret
	}
	return *o.Protocols
}

// GetProtocolsOk returns a tuple with the Protocols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Ingress) GetProtocolsOk() (*V1Protocols, bool) {
	if o == nil || o.Protocols == nil {
		return nil, false
	}
	return o.Protocols, true
}

// HasProtocols returns a boolean if a field has been set.
func (o *V1Ingress) HasProtocols() bool {
	if o != nil && o.Protocols != nil {
		return true
	}

	return false
}

// SetProtocols gets a reference to the given V1Protocols and assigns it to the Protocols field.
func (o *V1Ingress) SetProtocols(v V1Protocols) {
	o.Protocols = &v
}

func (o V1Ingress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if o.Protocols != nil {
		toSerialize["protocols"] = o.Protocols
	}
	return json.Marshal(toSerialize)
}

type NullableV1Ingress struct {
	value *V1Ingress
	isSet bool
}

func (v NullableV1Ingress) Get() *V1Ingress {
	return v.value
}

func (v *NullableV1Ingress) Set(val *V1Ingress) {
	v.value = val
	v.isSet = true
}

func (v NullableV1Ingress) IsSet() bool {
	return v.isSet
}

func (v *NullableV1Ingress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1Ingress(val *V1Ingress) *NullableV1Ingress {
	return &NullableV1Ingress{value: val, isSet: true}
}

func (v NullableV1Ingress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1Ingress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
