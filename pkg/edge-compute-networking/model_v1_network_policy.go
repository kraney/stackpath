/*
 * Edge Compute Networking
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package edge-compute-networking

import (
	"encoding/json"
)

// V1NetworkPolicy A network policy  Network policies define an ACL that applies to one or many workload instances
type V1NetworkPolicy struct {
	// The ID of the stack that a network policy belongs to
	StackId *string `json:"stackId,omitempty"`
	// A network policy's unique identifier
	Id *string `json:"id,omitempty"`
	// A network policy's name as it appears in the StackPath portal
	Name *string `json:"name,omitempty"`
	// A network policy's programmatic name  Network policy slugs are used to build its instances names
	Slug *string `json:"slug,omitempty"`
	// Detailed summary of what the policy does
	Description *string `json:"description,omitempty"`
	Metadata *NetworkMetadata `json:"metadata,omitempty"`
	Spec *V1NetworkPolicySpec `json:"spec,omitempty"`
}

// NewV1NetworkPolicy instantiates a new V1NetworkPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1NetworkPolicy() *V1NetworkPolicy {
	this := V1NetworkPolicy{}
	return &this
}

// NewV1NetworkPolicyWithDefaults instantiates a new V1NetworkPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1NetworkPolicyWithDefaults() *V1NetworkPolicy {
	this := V1NetworkPolicy{}
	return &this
}

// GetStackId returns the StackId field value if set, zero value otherwise.
func (o *V1NetworkPolicy) GetStackId() string {
	if o == nil || o.StackId == nil {
		var ret string
		return ret
	}
	return *o.StackId
}

// GetStackIdOk returns a tuple with the StackId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1NetworkPolicy) GetStackIdOk() (*string, bool) {
	if o == nil || o.StackId == nil {
		return nil, false
	}
	return o.StackId, true
}

// HasStackId returns a boolean if a field has been set.
func (o *V1NetworkPolicy) HasStackId() bool {
	if o != nil && o.StackId != nil {
		return true
	}

	return false
}

// SetStackId gets a reference to the given string and assigns it to the StackId field.
func (o *V1NetworkPolicy) SetStackId(v string) {
	o.StackId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V1NetworkPolicy) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1NetworkPolicy) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V1NetworkPolicy) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *V1NetworkPolicy) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1NetworkPolicy) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1NetworkPolicy) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1NetworkPolicy) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1NetworkPolicy) SetName(v string) {
	o.Name = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *V1NetworkPolicy) GetSlug() string {
	if o == nil || o.Slug == nil {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1NetworkPolicy) GetSlugOk() (*string, bool) {
	if o == nil || o.Slug == nil {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *V1NetworkPolicy) HasSlug() bool {
	if o != nil && o.Slug != nil {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *V1NetworkPolicy) SetSlug(v string) {
	o.Slug = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *V1NetworkPolicy) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1NetworkPolicy) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *V1NetworkPolicy) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *V1NetworkPolicy) SetDescription(v string) {
	o.Description = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *V1NetworkPolicy) GetMetadata() NetworkMetadata {
	if o == nil || o.Metadata == nil {
		var ret NetworkMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1NetworkPolicy) GetMetadataOk() (*NetworkMetadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *V1NetworkPolicy) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given NetworkMetadata and assigns it to the Metadata field.
func (o *V1NetworkPolicy) SetMetadata(v NetworkMetadata) {
	o.Metadata = &v
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *V1NetworkPolicy) GetSpec() V1NetworkPolicySpec {
	if o == nil || o.Spec == nil {
		var ret V1NetworkPolicySpec
		return ret
	}
	return *o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1NetworkPolicy) GetSpecOk() (*V1NetworkPolicySpec, bool) {
	if o == nil || o.Spec == nil {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *V1NetworkPolicy) HasSpec() bool {
	if o != nil && o.Spec != nil {
		return true
	}

	return false
}

// SetSpec gets a reference to the given V1NetworkPolicySpec and assigns it to the Spec field.
func (o *V1NetworkPolicy) SetSpec(v V1NetworkPolicySpec) {
	o.Spec = &v
}

func (o V1NetworkPolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StackId != nil {
		toSerialize["stackId"] = o.StackId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Slug != nil {
		toSerialize["slug"] = o.Slug
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Spec != nil {
		toSerialize["spec"] = o.Spec
	}
	return json.Marshal(toSerialize)
}

type NullableV1NetworkPolicy struct {
	value *V1NetworkPolicy
	isSet bool
}

func (v NullableV1NetworkPolicy) Get() *V1NetworkPolicy {
	return v.value
}

func (v *NullableV1NetworkPolicy) Set(val *V1NetworkPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableV1NetworkPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableV1NetworkPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1NetworkPolicy(val *V1NetworkPolicy) *NullableV1NetworkPolicy {
	return &NullableV1NetworkPolicy{value: val, isSet: true}
}

func (v NullableV1NetworkPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1NetworkPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
