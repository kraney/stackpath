/*
 * Monitoring
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package monitoring

import (
	"encoding/json"
)

// V2UpdateAlertConditionResponse A response from a request to update an alert condition.
type V2UpdateAlertConditionResponse struct {
	Record *V2AlertCondition `json:"record,omitempty"`
}

// NewV2UpdateAlertConditionResponse instantiates a new V2UpdateAlertConditionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2UpdateAlertConditionResponse() *V2UpdateAlertConditionResponse {
	this := V2UpdateAlertConditionResponse{}
	return &this
}

// NewV2UpdateAlertConditionResponseWithDefaults instantiates a new V2UpdateAlertConditionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2UpdateAlertConditionResponseWithDefaults() *V2UpdateAlertConditionResponse {
	this := V2UpdateAlertConditionResponse{}
	return &this
}

// GetRecord returns the Record field value if set, zero value otherwise.
func (o *V2UpdateAlertConditionResponse) GetRecord() V2AlertCondition {
	if o == nil || o.Record == nil {
		var ret V2AlertCondition
		return ret
	}
	return *o.Record
}

// GetRecordOk returns a tuple with the Record field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2UpdateAlertConditionResponse) GetRecordOk() (*V2AlertCondition, bool) {
	if o == nil || o.Record == nil {
		return nil, false
	}
	return o.Record, true
}

// HasRecord returns a boolean if a field has been set.
func (o *V2UpdateAlertConditionResponse) HasRecord() bool {
	if o != nil && o.Record != nil {
		return true
	}

	return false
}

// SetRecord gets a reference to the given V2AlertCondition and assigns it to the Record field.
func (o *V2UpdateAlertConditionResponse) SetRecord(v V2AlertCondition) {
	o.Record = &v
}

func (o V2UpdateAlertConditionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Record != nil {
		toSerialize["record"] = o.Record
	}
	return json.Marshal(toSerialize)
}

type NullableV2UpdateAlertConditionResponse struct {
	value *V2UpdateAlertConditionResponse
	isSet bool
}

func (v NullableV2UpdateAlertConditionResponse) Get() *V2UpdateAlertConditionResponse {
	return v.value
}

func (v *NullableV2UpdateAlertConditionResponse) Set(val *V2UpdateAlertConditionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV2UpdateAlertConditionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV2UpdateAlertConditionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2UpdateAlertConditionResponse(val *V2UpdateAlertConditionResponse) *NullableV2UpdateAlertConditionResponse {
	return &NullableV2UpdateAlertConditionResponse{value: val, isSet: true}
}

func (v NullableV2UpdateAlertConditionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2UpdateAlertConditionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
