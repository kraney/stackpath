/*
 * Monitoring
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package monitoring

import (
	"encoding/json"
)

// UpdateMonitorRequestIpVersionValue The value of the IP version for a monitor update request.
type UpdateMonitorRequestIpVersionValue struct {
	Value *V2IpVersion `json:"value,omitempty"`
}

// NewUpdateMonitorRequestIpVersionValue instantiates a new UpdateMonitorRequestIpVersionValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateMonitorRequestIpVersionValue() *UpdateMonitorRequestIpVersionValue {
	this := UpdateMonitorRequestIpVersionValue{}
	var value V2IpVersion = "IPV4"
	this.Value = &value
	return &this
}

// NewUpdateMonitorRequestIpVersionValueWithDefaults instantiates a new UpdateMonitorRequestIpVersionValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateMonitorRequestIpVersionValueWithDefaults() *UpdateMonitorRequestIpVersionValue {
	this := UpdateMonitorRequestIpVersionValue{}
	var value V2IpVersion = "IPV4"
	this.Value = &value
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *UpdateMonitorRequestIpVersionValue) GetValue() V2IpVersion {
	if o == nil || o.Value == nil {
		var ret V2IpVersion
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMonitorRequestIpVersionValue) GetValueOk() (*V2IpVersion, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *UpdateMonitorRequestIpVersionValue) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given V2IpVersion and assigns it to the Value field.
func (o *UpdateMonitorRequestIpVersionValue) SetValue(v V2IpVersion) {
	o.Value = &v
}

func (o UpdateMonitorRequestIpVersionValue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateMonitorRequestIpVersionValue struct {
	value *UpdateMonitorRequestIpVersionValue
	isSet bool
}

func (v NullableUpdateMonitorRequestIpVersionValue) Get() *UpdateMonitorRequestIpVersionValue {
	return v.value
}

func (v *NullableUpdateMonitorRequestIpVersionValue) Set(val *UpdateMonitorRequestIpVersionValue) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMonitorRequestIpVersionValue) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMonitorRequestIpVersionValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMonitorRequestIpVersionValue(val *UpdateMonitorRequestIpVersionValue) *NullableUpdateMonitorRequestIpVersionValue {
	return &NullableUpdateMonitorRequestIpVersionValue{value: val, isSet: true}
}

func (v NullableUpdateMonitorRequestIpVersionValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMonitorRequestIpVersionValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
