/*
 * Monitoring
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package monitoring

import (
	"encoding/json"
)

// UpdateMonitorRequestPatchHttpConfiguration The HTTP configuration for a monitor update request.
type UpdateMonitorRequestPatchHttpConfiguration struct {
	// The URL of the service that will be monitored.  The URL must begin with an HTTP scheme of 'http' or 'https'.
	Url *string `json:"url,omitempty"`
	// The HTTP method used when the monitor makes a request to the service.
	Method *string `json:"method,omitempty"`
	// A base64 encoded HTTP request body to use when a monitor checks the service.
	Body *string `json:"body,omitempty"`
	Headers *PatchHttpConfigurationHeaderValue `json:"headers,omitempty"`
	Basic *UpdateMonitorRequestPatchHttpConfigurationBasicAuth `json:"basic,omitempty"`
	Digest *UpdateMonitorRequestPatchHttpConfigurationDigestAuth `json:"digest,omitempty"`
	ClientCertificate *UpdateMonitorRequestPatchHttpConfigurationClientCertificate `json:"clientCertificate,omitempty"`
	// A flag for validating a service's certificate.
	ValidateCertificate *bool `json:"validateCertificate,omitempty"`
}

// NewUpdateMonitorRequestPatchHttpConfiguration instantiates a new UpdateMonitorRequestPatchHttpConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateMonitorRequestPatchHttpConfiguration() *UpdateMonitorRequestPatchHttpConfiguration {
	this := UpdateMonitorRequestPatchHttpConfiguration{}
	return &this
}

// NewUpdateMonitorRequestPatchHttpConfigurationWithDefaults instantiates a new UpdateMonitorRequestPatchHttpConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateMonitorRequestPatchHttpConfigurationWithDefaults() *UpdateMonitorRequestPatchHttpConfiguration {
	this := UpdateMonitorRequestPatchHttpConfiguration{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *UpdateMonitorRequestPatchHttpConfiguration) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMonitorRequestPatchHttpConfiguration) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *UpdateMonitorRequestPatchHttpConfiguration) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *UpdateMonitorRequestPatchHttpConfiguration) SetUrl(v string) {
	o.Url = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *UpdateMonitorRequestPatchHttpConfiguration) GetMethod() string {
	if o == nil || o.Method == nil {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMonitorRequestPatchHttpConfiguration) GetMethodOk() (*string, bool) {
	if o == nil || o.Method == nil {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *UpdateMonitorRequestPatchHttpConfiguration) HasMethod() bool {
	if o != nil && o.Method != nil {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *UpdateMonitorRequestPatchHttpConfiguration) SetMethod(v string) {
	o.Method = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *UpdateMonitorRequestPatchHttpConfiguration) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMonitorRequestPatchHttpConfiguration) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *UpdateMonitorRequestPatchHttpConfiguration) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *UpdateMonitorRequestPatchHttpConfiguration) SetBody(v string) {
	o.Body = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *UpdateMonitorRequestPatchHttpConfiguration) GetHeaders() PatchHttpConfigurationHeaderValue {
	if o == nil || o.Headers == nil {
		var ret PatchHttpConfigurationHeaderValue
		return ret
	}
	return *o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMonitorRequestPatchHttpConfiguration) GetHeadersOk() (*PatchHttpConfigurationHeaderValue, bool) {
	if o == nil || o.Headers == nil {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *UpdateMonitorRequestPatchHttpConfiguration) HasHeaders() bool {
	if o != nil && o.Headers != nil {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given PatchHttpConfigurationHeaderValue and assigns it to the Headers field.
func (o *UpdateMonitorRequestPatchHttpConfiguration) SetHeaders(v PatchHttpConfigurationHeaderValue) {
	o.Headers = &v
}

// GetBasic returns the Basic field value if set, zero value otherwise.
func (o *UpdateMonitorRequestPatchHttpConfiguration) GetBasic() UpdateMonitorRequestPatchHttpConfigurationBasicAuth {
	if o == nil || o.Basic == nil {
		var ret UpdateMonitorRequestPatchHttpConfigurationBasicAuth
		return ret
	}
	return *o.Basic
}

// GetBasicOk returns a tuple with the Basic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMonitorRequestPatchHttpConfiguration) GetBasicOk() (*UpdateMonitorRequestPatchHttpConfigurationBasicAuth, bool) {
	if o == nil || o.Basic == nil {
		return nil, false
	}
	return o.Basic, true
}

// HasBasic returns a boolean if a field has been set.
func (o *UpdateMonitorRequestPatchHttpConfiguration) HasBasic() bool {
	if o != nil && o.Basic != nil {
		return true
	}

	return false
}

// SetBasic gets a reference to the given UpdateMonitorRequestPatchHttpConfigurationBasicAuth and assigns it to the Basic field.
func (o *UpdateMonitorRequestPatchHttpConfiguration) SetBasic(v UpdateMonitorRequestPatchHttpConfigurationBasicAuth) {
	o.Basic = &v
}

// GetDigest returns the Digest field value if set, zero value otherwise.
func (o *UpdateMonitorRequestPatchHttpConfiguration) GetDigest() UpdateMonitorRequestPatchHttpConfigurationDigestAuth {
	if o == nil || o.Digest == nil {
		var ret UpdateMonitorRequestPatchHttpConfigurationDigestAuth
		return ret
	}
	return *o.Digest
}

// GetDigestOk returns a tuple with the Digest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMonitorRequestPatchHttpConfiguration) GetDigestOk() (*UpdateMonitorRequestPatchHttpConfigurationDigestAuth, bool) {
	if o == nil || o.Digest == nil {
		return nil, false
	}
	return o.Digest, true
}

// HasDigest returns a boolean if a field has been set.
func (o *UpdateMonitorRequestPatchHttpConfiguration) HasDigest() bool {
	if o != nil && o.Digest != nil {
		return true
	}

	return false
}

// SetDigest gets a reference to the given UpdateMonitorRequestPatchHttpConfigurationDigestAuth and assigns it to the Digest field.
func (o *UpdateMonitorRequestPatchHttpConfiguration) SetDigest(v UpdateMonitorRequestPatchHttpConfigurationDigestAuth) {
	o.Digest = &v
}

// GetClientCertificate returns the ClientCertificate field value if set, zero value otherwise.
func (o *UpdateMonitorRequestPatchHttpConfiguration) GetClientCertificate() UpdateMonitorRequestPatchHttpConfigurationClientCertificate {
	if o == nil || o.ClientCertificate == nil {
		var ret UpdateMonitorRequestPatchHttpConfigurationClientCertificate
		return ret
	}
	return *o.ClientCertificate
}

// GetClientCertificateOk returns a tuple with the ClientCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMonitorRequestPatchHttpConfiguration) GetClientCertificateOk() (*UpdateMonitorRequestPatchHttpConfigurationClientCertificate, bool) {
	if o == nil || o.ClientCertificate == nil {
		return nil, false
	}
	return o.ClientCertificate, true
}

// HasClientCertificate returns a boolean if a field has been set.
func (o *UpdateMonitorRequestPatchHttpConfiguration) HasClientCertificate() bool {
	if o != nil && o.ClientCertificate != nil {
		return true
	}

	return false
}

// SetClientCertificate gets a reference to the given UpdateMonitorRequestPatchHttpConfigurationClientCertificate and assigns it to the ClientCertificate field.
func (o *UpdateMonitorRequestPatchHttpConfiguration) SetClientCertificate(v UpdateMonitorRequestPatchHttpConfigurationClientCertificate) {
	o.ClientCertificate = &v
}

// GetValidateCertificate returns the ValidateCertificate field value if set, zero value otherwise.
func (o *UpdateMonitorRequestPatchHttpConfiguration) GetValidateCertificate() bool {
	if o == nil || o.ValidateCertificate == nil {
		var ret bool
		return ret
	}
	return *o.ValidateCertificate
}

// GetValidateCertificateOk returns a tuple with the ValidateCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMonitorRequestPatchHttpConfiguration) GetValidateCertificateOk() (*bool, bool) {
	if o == nil || o.ValidateCertificate == nil {
		return nil, false
	}
	return o.ValidateCertificate, true
}

// HasValidateCertificate returns a boolean if a field has been set.
func (o *UpdateMonitorRequestPatchHttpConfiguration) HasValidateCertificate() bool {
	if o != nil && o.ValidateCertificate != nil {
		return true
	}

	return false
}

// SetValidateCertificate gets a reference to the given bool and assigns it to the ValidateCertificate field.
func (o *UpdateMonitorRequestPatchHttpConfiguration) SetValidateCertificate(v bool) {
	o.ValidateCertificate = &v
}

func (o UpdateMonitorRequestPatchHttpConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Method != nil {
		toSerialize["method"] = o.Method
	}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.Headers != nil {
		toSerialize["headers"] = o.Headers
	}
	if o.Basic != nil {
		toSerialize["basic"] = o.Basic
	}
	if o.Digest != nil {
		toSerialize["digest"] = o.Digest
	}
	if o.ClientCertificate != nil {
		toSerialize["clientCertificate"] = o.ClientCertificate
	}
	if o.ValidateCertificate != nil {
		toSerialize["validateCertificate"] = o.ValidateCertificate
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateMonitorRequestPatchHttpConfiguration struct {
	value *UpdateMonitorRequestPatchHttpConfiguration
	isSet bool
}

func (v NullableUpdateMonitorRequestPatchHttpConfiguration) Get() *UpdateMonitorRequestPatchHttpConfiguration {
	return v.value
}

func (v *NullableUpdateMonitorRequestPatchHttpConfiguration) Set(val *UpdateMonitorRequestPatchHttpConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMonitorRequestPatchHttpConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMonitorRequestPatchHttpConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMonitorRequestPatchHttpConfiguration(val *UpdateMonitorRequestPatchHttpConfiguration) *NullableUpdateMonitorRequestPatchHttpConfiguration {
	return &NullableUpdateMonitorRequestPatchHttpConfiguration{value: val, isSet: true}
}

func (v NullableUpdateMonitorRequestPatchHttpConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMonitorRequestPatchHttpConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
