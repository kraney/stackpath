/*
 * DNS
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package dns

import (
	"encoding/json"
)

// ZoneGetZoneRecordsResponse A response from a request to retrieve a DNS zone's resource records
type ZoneGetZoneRecordsResponse struct {
	PageInfo *PaginationPageInfo `json:"pageInfo,omitempty"`
	// The requested resource records
	Records *[]ZoneZoneRecord `json:"records,omitempty"`
}

// NewZoneGetZoneRecordsResponse instantiates a new ZoneGetZoneRecordsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZoneGetZoneRecordsResponse() *ZoneGetZoneRecordsResponse {
	this := ZoneGetZoneRecordsResponse{}
	return &this
}

// NewZoneGetZoneRecordsResponseWithDefaults instantiates a new ZoneGetZoneRecordsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZoneGetZoneRecordsResponseWithDefaults() *ZoneGetZoneRecordsResponse {
	this := ZoneGetZoneRecordsResponse{}
	return &this
}

// GetPageInfo returns the PageInfo field value if set, zero value otherwise.
func (o *ZoneGetZoneRecordsResponse) GetPageInfo() PaginationPageInfo {
	if o == nil || o.PageInfo == nil {
		var ret PaginationPageInfo
		return ret
	}
	return *o.PageInfo
}

// GetPageInfoOk returns a tuple with the PageInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneGetZoneRecordsResponse) GetPageInfoOk() (*PaginationPageInfo, bool) {
	if o == nil || o.PageInfo == nil {
		return nil, false
	}
	return o.PageInfo, true
}

// HasPageInfo returns a boolean if a field has been set.
func (o *ZoneGetZoneRecordsResponse) HasPageInfo() bool {
	if o != nil && o.PageInfo != nil {
		return true
	}

	return false
}

// SetPageInfo gets a reference to the given PaginationPageInfo and assigns it to the PageInfo field.
func (o *ZoneGetZoneRecordsResponse) SetPageInfo(v PaginationPageInfo) {
	o.PageInfo = &v
}

// GetRecords returns the Records field value if set, zero value otherwise.
func (o *ZoneGetZoneRecordsResponse) GetRecords() []ZoneZoneRecord {
	if o == nil || o.Records == nil {
		var ret []ZoneZoneRecord
		return ret
	}
	return *o.Records
}

// GetRecordsOk returns a tuple with the Records field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneGetZoneRecordsResponse) GetRecordsOk() (*[]ZoneZoneRecord, bool) {
	if o == nil || o.Records == nil {
		return nil, false
	}
	return o.Records, true
}

// HasRecords returns a boolean if a field has been set.
func (o *ZoneGetZoneRecordsResponse) HasRecords() bool {
	if o != nil && o.Records != nil {
		return true
	}

	return false
}

// SetRecords gets a reference to the given []ZoneZoneRecord and assigns it to the Records field.
func (o *ZoneGetZoneRecordsResponse) SetRecords(v []ZoneZoneRecord) {
	o.Records = &v
}

func (o ZoneGetZoneRecordsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PageInfo != nil {
		toSerialize["pageInfo"] = o.PageInfo
	}
	if o.Records != nil {
		toSerialize["records"] = o.Records
	}
	return json.Marshal(toSerialize)
}

type NullableZoneGetZoneRecordsResponse struct {
	value *ZoneGetZoneRecordsResponse
	isSet bool
}

func (v NullableZoneGetZoneRecordsResponse) Get() *ZoneGetZoneRecordsResponse {
	return v.value
}

func (v *NullableZoneGetZoneRecordsResponse) Set(val *ZoneGetZoneRecordsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableZoneGetZoneRecordsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableZoneGetZoneRecordsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZoneGetZoneRecordsResponse(val *ZoneGetZoneRecordsResponse) *NullableZoneGetZoneRecordsResponse {
	return &NullableZoneGetZoneRecordsResponse{value: val, isSet: true}
}

func (v NullableZoneGetZoneRecordsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZoneGetZoneRecordsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
