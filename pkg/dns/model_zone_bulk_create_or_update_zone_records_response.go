/*
 * DNS
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package dns

import (
	"encoding/json"
)

// ZoneBulkCreateOrUpdateZoneRecordsResponse A response from a request to create or update multiple DNS zone resource records
type ZoneBulkCreateOrUpdateZoneRecordsResponse struct {
	// The IDs of the newly created and updated resource records
	ZoneRecordIds *[]string `json:"zoneRecordIds,omitempty"`
}

// NewZoneBulkCreateOrUpdateZoneRecordsResponse instantiates a new ZoneBulkCreateOrUpdateZoneRecordsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZoneBulkCreateOrUpdateZoneRecordsResponse() *ZoneBulkCreateOrUpdateZoneRecordsResponse {
	this := ZoneBulkCreateOrUpdateZoneRecordsResponse{}
	return &this
}

// NewZoneBulkCreateOrUpdateZoneRecordsResponseWithDefaults instantiates a new ZoneBulkCreateOrUpdateZoneRecordsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZoneBulkCreateOrUpdateZoneRecordsResponseWithDefaults() *ZoneBulkCreateOrUpdateZoneRecordsResponse {
	this := ZoneBulkCreateOrUpdateZoneRecordsResponse{}
	return &this
}

// GetZoneRecordIds returns the ZoneRecordIds field value if set, zero value otherwise.
func (o *ZoneBulkCreateOrUpdateZoneRecordsResponse) GetZoneRecordIds() []string {
	if o == nil || o.ZoneRecordIds == nil {
		var ret []string
		return ret
	}
	return *o.ZoneRecordIds
}

// GetZoneRecordIdsOk returns a tuple with the ZoneRecordIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneBulkCreateOrUpdateZoneRecordsResponse) GetZoneRecordIdsOk() (*[]string, bool) {
	if o == nil || o.ZoneRecordIds == nil {
		return nil, false
	}
	return o.ZoneRecordIds, true
}

// HasZoneRecordIds returns a boolean if a field has been set.
func (o *ZoneBulkCreateOrUpdateZoneRecordsResponse) HasZoneRecordIds() bool {
	if o != nil && o.ZoneRecordIds != nil {
		return true
	}

	return false
}

// SetZoneRecordIds gets a reference to the given []string and assigns it to the ZoneRecordIds field.
func (o *ZoneBulkCreateOrUpdateZoneRecordsResponse) SetZoneRecordIds(v []string) {
	o.ZoneRecordIds = &v
}

func (o ZoneBulkCreateOrUpdateZoneRecordsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ZoneRecordIds != nil {
		toSerialize["zoneRecordIds"] = o.ZoneRecordIds
	}
	return json.Marshal(toSerialize)
}

type NullableZoneBulkCreateOrUpdateZoneRecordsResponse struct {
	value *ZoneBulkCreateOrUpdateZoneRecordsResponse
	isSet bool
}

func (v NullableZoneBulkCreateOrUpdateZoneRecordsResponse) Get() *ZoneBulkCreateOrUpdateZoneRecordsResponse {
	return v.value
}

func (v *NullableZoneBulkCreateOrUpdateZoneRecordsResponse) Set(val *ZoneBulkCreateOrUpdateZoneRecordsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableZoneBulkCreateOrUpdateZoneRecordsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableZoneBulkCreateOrUpdateZoneRecordsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZoneBulkCreateOrUpdateZoneRecordsResponse(val *ZoneBulkCreateOrUpdateZoneRecordsResponse) *NullableZoneBulkCreateOrUpdateZoneRecordsResponse {
	return &NullableZoneBulkCreateOrUpdateZoneRecordsResponse{value: val, isSet: true}
}

func (v NullableZoneBulkCreateOrUpdateZoneRecordsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZoneBulkCreateOrUpdateZoneRecordsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
