/*
 * Edge Compute Networking
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package edge_compute_networking

import (
	"encoding/json"
)

// V1Egress An outbound rule from workload instances
type V1Egress struct {
	// Detailed summary of what the egress rule does
	Description *string `json:"description,omitempty"`
	Action *V1Action `json:"action,omitempty"`
	To *V1HostRule `json:"to,omitempty"`
	Protocols *V1Protocols `json:"protocols,omitempty"`
}

// NewV1Egress instantiates a new V1Egress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1Egress() *V1Egress {
	this := V1Egress{}
	var action V1Action = "UNDEFINED"
	this.Action = &action
	return &this
}

// NewV1EgressWithDefaults instantiates a new V1Egress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1EgressWithDefaults() *V1Egress {
	this := V1Egress{}
	var action V1Action = "UNDEFINED"
	this.Action = &action
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *V1Egress) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Egress) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *V1Egress) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *V1Egress) SetDescription(v string) {
	o.Description = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *V1Egress) GetAction() V1Action {
	if o == nil || o.Action == nil {
		var ret V1Action
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Egress) GetActionOk() (*V1Action, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *V1Egress) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given V1Action and assigns it to the Action field.
func (o *V1Egress) SetAction(v V1Action) {
	o.Action = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *V1Egress) GetTo() V1HostRule {
	if o == nil || o.To == nil {
		var ret V1HostRule
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Egress) GetToOk() (*V1HostRule, bool) {
	if o == nil || o.To == nil {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *V1Egress) HasTo() bool {
	if o != nil && o.To != nil {
		return true
	}

	return false
}

// SetTo gets a reference to the given V1HostRule and assigns it to the To field.
func (o *V1Egress) SetTo(v V1HostRule) {
	o.To = &v
}

// GetProtocols returns the Protocols field value if set, zero value otherwise.
func (o *V1Egress) GetProtocols() V1Protocols {
	if o == nil || o.Protocols == nil {
		var ret V1Protocols
		return ret
	}
	return *o.Protocols
}

// GetProtocolsOk returns a tuple with the Protocols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Egress) GetProtocolsOk() (*V1Protocols, bool) {
	if o == nil || o.Protocols == nil {
		return nil, false
	}
	return o.Protocols, true
}

// HasProtocols returns a boolean if a field has been set.
func (o *V1Egress) HasProtocols() bool {
	if o != nil && o.Protocols != nil {
		return true
	}

	return false
}

// SetProtocols gets a reference to the given V1Protocols and assigns it to the Protocols field.
func (o *V1Egress) SetProtocols(v V1Protocols) {
	o.Protocols = &v
}

func (o V1Egress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.To != nil {
		toSerialize["to"] = o.To
	}
	if o.Protocols != nil {
		toSerialize["protocols"] = o.Protocols
	}
	return json.Marshal(toSerialize)
}

type NullableV1Egress struct {
	value *V1Egress
	isSet bool
}

func (v NullableV1Egress) Get() *V1Egress {
	return v.value
}

func (v *NullableV1Egress) Set(val *V1Egress) {
	v.value = val
	v.isSet = true
}

func (v NullableV1Egress) IsSet() bool {
	return v.isSet
}

func (v *NullableV1Egress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1Egress(val *V1Egress) *NullableV1Egress {
	return &NullableV1Egress{value: val, isSet: true}
}

func (v NullableV1Egress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1Egress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
