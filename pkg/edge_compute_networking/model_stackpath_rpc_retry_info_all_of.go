/*
 * Edge Compute Networking
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package edge_compute_networking

import (
	"encoding/json"
)

// StackpathRpcRetryInfoAllOf struct for StackpathRpcRetryInfoAllOf
type StackpathRpcRetryInfoAllOf struct {
	RetryDelay *string `json:"retryDelay,omitempty"`
}

// NewStackpathRpcRetryInfoAllOf instantiates a new StackpathRpcRetryInfoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStackpathRpcRetryInfoAllOf() *StackpathRpcRetryInfoAllOf {
	this := StackpathRpcRetryInfoAllOf{}
	return &this
}

// NewStackpathRpcRetryInfoAllOfWithDefaults instantiates a new StackpathRpcRetryInfoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStackpathRpcRetryInfoAllOfWithDefaults() *StackpathRpcRetryInfoAllOf {
	this := StackpathRpcRetryInfoAllOf{}
	return &this
}

// GetRetryDelay returns the RetryDelay field value if set, zero value otherwise.
func (o *StackpathRpcRetryInfoAllOf) GetRetryDelay() string {
	if o == nil || o.RetryDelay == nil {
		var ret string
		return ret
	}
	return *o.RetryDelay
}

// GetRetryDelayOk returns a tuple with the RetryDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackpathRpcRetryInfoAllOf) GetRetryDelayOk() (*string, bool) {
	if o == nil || o.RetryDelay == nil {
		return nil, false
	}
	return o.RetryDelay, true
}

// HasRetryDelay returns a boolean if a field has been set.
func (o *StackpathRpcRetryInfoAllOf) HasRetryDelay() bool {
	if o != nil && o.RetryDelay != nil {
		return true
	}

	return false
}

// SetRetryDelay gets a reference to the given string and assigns it to the RetryDelay field.
func (o *StackpathRpcRetryInfoAllOf) SetRetryDelay(v string) {
	o.RetryDelay = &v
}

func (o StackpathRpcRetryInfoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RetryDelay != nil {
		toSerialize["retryDelay"] = o.RetryDelay
	}
	return json.Marshal(toSerialize)
}

type NullableStackpathRpcRetryInfoAllOf struct {
	value *StackpathRpcRetryInfoAllOf
	isSet bool
}

func (v NullableStackpathRpcRetryInfoAllOf) Get() *StackpathRpcRetryInfoAllOf {
	return v.value
}

func (v *NullableStackpathRpcRetryInfoAllOf) Set(val *StackpathRpcRetryInfoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableStackpathRpcRetryInfoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableStackpathRpcRetryInfoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStackpathRpcRetryInfoAllOf(val *StackpathRpcRetryInfoAllOf) *NullableStackpathRpcRetryInfoAllOf {
	return &NullableStackpathRpcRetryInfoAllOf{value: val, isSet: true}
}

func (v NullableStackpathRpcRetryInfoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStackpathRpcRetryInfoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
