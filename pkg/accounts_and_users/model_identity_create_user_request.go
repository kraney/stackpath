/*
 * Accounts and Users
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package accounts_and_users

import (
	"encoding/json"
)

// IdentityCreateUserRequest struct for IdentityCreateUserRequest
type IdentityCreateUserRequest struct {
	// The user's email address  The user will use this as their login name at the StackPath customer portal
	Email *string `json:"email,omitempty"`
	// The user's name
	Name *string `json:"name,omitempty"`
	// The user's phone number
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	// A set of application slugs the user should have access to  If no application slugs are applied then the user will have access to the StackPath customer portal and API by default.
	AuthorizedApplications *[]string `json:"authorizedApplications,omitempty"`
}

// NewIdentityCreateUserRequest instantiates a new IdentityCreateUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityCreateUserRequest() *IdentityCreateUserRequest {
	this := IdentityCreateUserRequest{}
	return &this
}

// NewIdentityCreateUserRequestWithDefaults instantiates a new IdentityCreateUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityCreateUserRequestWithDefaults() *IdentityCreateUserRequest {
	this := IdentityCreateUserRequest{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *IdentityCreateUserRequest) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityCreateUserRequest) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *IdentityCreateUserRequest) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *IdentityCreateUserRequest) SetEmail(v string) {
	o.Email = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityCreateUserRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityCreateUserRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityCreateUserRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityCreateUserRequest) SetName(v string) {
	o.Name = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *IdentityCreateUserRequest) GetPhoneNumber() string {
	if o == nil || o.PhoneNumber == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityCreateUserRequest) GetPhoneNumberOk() (*string, bool) {
	if o == nil || o.PhoneNumber == nil {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *IdentityCreateUserRequest) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber != nil {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *IdentityCreateUserRequest) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetAuthorizedApplications returns the AuthorizedApplications field value if set, zero value otherwise.
func (o *IdentityCreateUserRequest) GetAuthorizedApplications() []string {
	if o == nil || o.AuthorizedApplications == nil {
		var ret []string
		return ret
	}
	return *o.AuthorizedApplications
}

// GetAuthorizedApplicationsOk returns a tuple with the AuthorizedApplications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityCreateUserRequest) GetAuthorizedApplicationsOk() (*[]string, bool) {
	if o == nil || o.AuthorizedApplications == nil {
		return nil, false
	}
	return o.AuthorizedApplications, true
}

// HasAuthorizedApplications returns a boolean if a field has been set.
func (o *IdentityCreateUserRequest) HasAuthorizedApplications() bool {
	if o != nil && o.AuthorizedApplications != nil {
		return true
	}

	return false
}

// SetAuthorizedApplications gets a reference to the given []string and assigns it to the AuthorizedApplications field.
func (o *IdentityCreateUserRequest) SetAuthorizedApplications(v []string) {
	o.AuthorizedApplications = &v
}

func (o IdentityCreateUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.PhoneNumber != nil {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if o.AuthorizedApplications != nil {
		toSerialize["authorizedApplications"] = o.AuthorizedApplications
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityCreateUserRequest struct {
	value *IdentityCreateUserRequest
	isSet bool
}

func (v NullableIdentityCreateUserRequest) Get() *IdentityCreateUserRequest {
	return v.value
}

func (v *NullableIdentityCreateUserRequest) Set(val *IdentityCreateUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityCreateUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityCreateUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityCreateUserRequest(val *IdentityCreateUserRequest) *NullableIdentityCreateUserRequest {
	return &NullableIdentityCreateUserRequest{value: val, isSet: true}
}

func (v NullableIdentityCreateUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityCreateUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
