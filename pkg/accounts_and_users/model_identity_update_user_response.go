/*
 * Accounts and Users
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package accounts_and_users

import (
	"encoding/json"
)

// IdentityUpdateUserResponse A response from a request to update a user's non-essential properties (phone number, etc)
type IdentityUpdateUserResponse struct {
	// Whether or not the request was successful
	Success *bool `json:"success,omitempty"`
}

// NewIdentityUpdateUserResponse instantiates a new IdentityUpdateUserResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityUpdateUserResponse() *IdentityUpdateUserResponse {
	this := IdentityUpdateUserResponse{}
	return &this
}

// NewIdentityUpdateUserResponseWithDefaults instantiates a new IdentityUpdateUserResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityUpdateUserResponseWithDefaults() *IdentityUpdateUserResponse {
	this := IdentityUpdateUserResponse{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *IdentityUpdateUserResponse) GetSuccess() bool {
	if o == nil || o.Success == nil {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUpdateUserResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || o.Success == nil {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *IdentityUpdateUserResponse) HasSuccess() bool {
	if o != nil && o.Success != nil {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *IdentityUpdateUserResponse) SetSuccess(v bool) {
	o.Success = &v
}

func (o IdentityUpdateUserResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Success != nil {
		toSerialize["success"] = o.Success
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityUpdateUserResponse struct {
	value *IdentityUpdateUserResponse
	isSet bool
}

func (v NullableIdentityUpdateUserResponse) Get() *IdentityUpdateUserResponse {
	return v.value
}

func (v *NullableIdentityUpdateUserResponse) Set(val *IdentityUpdateUserResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityUpdateUserResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityUpdateUserResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityUpdateUserResponse(val *IdentityUpdateUserResponse) *NullableIdentityUpdateUserResponse {
	return &NullableIdentityUpdateUserResponse{value: val, isSet: true}
}

func (v NullableIdentityUpdateUserResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityUpdateUserResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
