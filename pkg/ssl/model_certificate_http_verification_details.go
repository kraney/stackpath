/*
 * SSL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package ssl

import (
	"encoding/json"
)

// CertificateHttpVerificationDetails struct for CertificateHttpVerificationDetails
type CertificateHttpVerificationDetails struct {
	Path *string `json:"path,omitempty"`
	ContentType *string `json:"contentType,omitempty"`
	Body *string `json:"body,omitempty"`
}

// NewCertificateHttpVerificationDetails instantiates a new CertificateHttpVerificationDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertificateHttpVerificationDetails() *CertificateHttpVerificationDetails {
	this := CertificateHttpVerificationDetails{}
	return &this
}

// NewCertificateHttpVerificationDetailsWithDefaults instantiates a new CertificateHttpVerificationDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertificateHttpVerificationDetailsWithDefaults() *CertificateHttpVerificationDetails {
	this := CertificateHttpVerificationDetails{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *CertificateHttpVerificationDetails) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateHttpVerificationDetails) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *CertificateHttpVerificationDetails) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *CertificateHttpVerificationDetails) SetPath(v string) {
	o.Path = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *CertificateHttpVerificationDetails) GetContentType() string {
	if o == nil || o.ContentType == nil {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateHttpVerificationDetails) GetContentTypeOk() (*string, bool) {
	if o == nil || o.ContentType == nil {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *CertificateHttpVerificationDetails) HasContentType() bool {
	if o != nil && o.ContentType != nil {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *CertificateHttpVerificationDetails) SetContentType(v string) {
	o.ContentType = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *CertificateHttpVerificationDetails) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateHttpVerificationDetails) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *CertificateHttpVerificationDetails) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *CertificateHttpVerificationDetails) SetBody(v string) {
	o.Body = &v
}

func (o CertificateHttpVerificationDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.ContentType != nil {
		toSerialize["contentType"] = o.ContentType
	}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	return json.Marshal(toSerialize)
}

type NullableCertificateHttpVerificationDetails struct {
	value *CertificateHttpVerificationDetails
	isSet bool
}

func (v NullableCertificateHttpVerificationDetails) Get() *CertificateHttpVerificationDetails {
	return v.value
}

func (v *NullableCertificateHttpVerificationDetails) Set(val *CertificateHttpVerificationDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCertificateHttpVerificationDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCertificateHttpVerificationDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertificateHttpVerificationDetails(val *CertificateHttpVerificationDetails) *NullableCertificateHttpVerificationDetails {
	return &NullableCertificateHttpVerificationDetails{value: val, isSet: true}
}

func (v NullableCertificateHttpVerificationDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertificateHttpVerificationDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
