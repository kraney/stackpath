/*
 * SSL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package ssl

import (
	"encoding/json"
)

// CertificateVerificationRequirements struct for CertificateVerificationRequirements
type CertificateVerificationRequirements struct {
	DnsVerificationDetails *CertificateDnsVerificationDetails `json:"dnsVerificationDetails,omitempty"`
	HttpVerificationDetails *CertificateHttpVerificationDetails `json:"httpVerificationDetails,omitempty"`
	VerificationMethod *CertificateCertificateVerificationMethod `json:"verificationMethod,omitempty"`
}

// NewCertificateVerificationRequirements instantiates a new CertificateVerificationRequirements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertificateVerificationRequirements() *CertificateVerificationRequirements {
	this := CertificateVerificationRequirements{}
	var verificationMethod CertificateCertificateVerificationMethod = "DNS"
	this.VerificationMethod = &verificationMethod
	return &this
}

// NewCertificateVerificationRequirementsWithDefaults instantiates a new CertificateVerificationRequirements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertificateVerificationRequirementsWithDefaults() *CertificateVerificationRequirements {
	this := CertificateVerificationRequirements{}
	var verificationMethod CertificateCertificateVerificationMethod = "DNS"
	this.VerificationMethod = &verificationMethod
	return &this
}

// GetDnsVerificationDetails returns the DnsVerificationDetails field value if set, zero value otherwise.
func (o *CertificateVerificationRequirements) GetDnsVerificationDetails() CertificateDnsVerificationDetails {
	if o == nil || o.DnsVerificationDetails == nil {
		var ret CertificateDnsVerificationDetails
		return ret
	}
	return *o.DnsVerificationDetails
}

// GetDnsVerificationDetailsOk returns a tuple with the DnsVerificationDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateVerificationRequirements) GetDnsVerificationDetailsOk() (*CertificateDnsVerificationDetails, bool) {
	if o == nil || o.DnsVerificationDetails == nil {
		return nil, false
	}
	return o.DnsVerificationDetails, true
}

// HasDnsVerificationDetails returns a boolean if a field has been set.
func (o *CertificateVerificationRequirements) HasDnsVerificationDetails() bool {
	if o != nil && o.DnsVerificationDetails != nil {
		return true
	}

	return false
}

// SetDnsVerificationDetails gets a reference to the given CertificateDnsVerificationDetails and assigns it to the DnsVerificationDetails field.
func (o *CertificateVerificationRequirements) SetDnsVerificationDetails(v CertificateDnsVerificationDetails) {
	o.DnsVerificationDetails = &v
}

// GetHttpVerificationDetails returns the HttpVerificationDetails field value if set, zero value otherwise.
func (o *CertificateVerificationRequirements) GetHttpVerificationDetails() CertificateHttpVerificationDetails {
	if o == nil || o.HttpVerificationDetails == nil {
		var ret CertificateHttpVerificationDetails
		return ret
	}
	return *o.HttpVerificationDetails
}

// GetHttpVerificationDetailsOk returns a tuple with the HttpVerificationDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateVerificationRequirements) GetHttpVerificationDetailsOk() (*CertificateHttpVerificationDetails, bool) {
	if o == nil || o.HttpVerificationDetails == nil {
		return nil, false
	}
	return o.HttpVerificationDetails, true
}

// HasHttpVerificationDetails returns a boolean if a field has been set.
func (o *CertificateVerificationRequirements) HasHttpVerificationDetails() bool {
	if o != nil && o.HttpVerificationDetails != nil {
		return true
	}

	return false
}

// SetHttpVerificationDetails gets a reference to the given CertificateHttpVerificationDetails and assigns it to the HttpVerificationDetails field.
func (o *CertificateVerificationRequirements) SetHttpVerificationDetails(v CertificateHttpVerificationDetails) {
	o.HttpVerificationDetails = &v
}

// GetVerificationMethod returns the VerificationMethod field value if set, zero value otherwise.
func (o *CertificateVerificationRequirements) GetVerificationMethod() CertificateCertificateVerificationMethod {
	if o == nil || o.VerificationMethod == nil {
		var ret CertificateCertificateVerificationMethod
		return ret
	}
	return *o.VerificationMethod
}

// GetVerificationMethodOk returns a tuple with the VerificationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateVerificationRequirements) GetVerificationMethodOk() (*CertificateCertificateVerificationMethod, bool) {
	if o == nil || o.VerificationMethod == nil {
		return nil, false
	}
	return o.VerificationMethod, true
}

// HasVerificationMethod returns a boolean if a field has been set.
func (o *CertificateVerificationRequirements) HasVerificationMethod() bool {
	if o != nil && o.VerificationMethod != nil {
		return true
	}

	return false
}

// SetVerificationMethod gets a reference to the given CertificateCertificateVerificationMethod and assigns it to the VerificationMethod field.
func (o *CertificateVerificationRequirements) SetVerificationMethod(v CertificateCertificateVerificationMethod) {
	o.VerificationMethod = &v
}

func (o CertificateVerificationRequirements) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DnsVerificationDetails != nil {
		toSerialize["dnsVerificationDetails"] = o.DnsVerificationDetails
	}
	if o.HttpVerificationDetails != nil {
		toSerialize["httpVerificationDetails"] = o.HttpVerificationDetails
	}
	if o.VerificationMethod != nil {
		toSerialize["verificationMethod"] = o.VerificationMethod
	}
	return json.Marshal(toSerialize)
}

type NullableCertificateVerificationRequirements struct {
	value *CertificateVerificationRequirements
	isSet bool
}

func (v NullableCertificateVerificationRequirements) Get() *CertificateVerificationRequirements {
	return v.value
}

func (v *NullableCertificateVerificationRequirements) Set(val *CertificateVerificationRequirements) {
	v.value = val
	v.isSet = true
}

func (v NullableCertificateVerificationRequirements) IsSet() bool {
	return v.isSet
}

func (v *NullableCertificateVerificationRequirements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertificateVerificationRequirements(val *CertificateVerificationRequirements) *NullableCertificateVerificationRequirements {
	return &NullableCertificateVerificationRequirements{value: val, isSet: true}
}

func (v NullableCertificateVerificationRequirements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertificateVerificationRequirements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
