/*
 * SSL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package ssl

import (
	"encoding/json"
)

// CertificateUpdateCertificateRequest struct for CertificateUpdateCertificateRequest
type CertificateUpdateCertificateRequest struct {
	CommonName *string `json:"commonName,omitempty"`
	Hosts *[]string `json:"hosts,omitempty"`
	Organization *string `json:"organization,omitempty"`
	OrganizationalUnit *string `json:"organizationalUnit,omitempty"`
	Locality *string `json:"locality,omitempty"`
	Province *string `json:"province,omitempty"`
	Country *string `json:"country,omitempty"`
}

// NewCertificateUpdateCertificateRequest instantiates a new CertificateUpdateCertificateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertificateUpdateCertificateRequest() *CertificateUpdateCertificateRequest {
	this := CertificateUpdateCertificateRequest{}
	return &this
}

// NewCertificateUpdateCertificateRequestWithDefaults instantiates a new CertificateUpdateCertificateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertificateUpdateCertificateRequestWithDefaults() *CertificateUpdateCertificateRequest {
	this := CertificateUpdateCertificateRequest{}
	return &this
}

// GetCommonName returns the CommonName field value if set, zero value otherwise.
func (o *CertificateUpdateCertificateRequest) GetCommonName() string {
	if o == nil || o.CommonName == nil {
		var ret string
		return ret
	}
	return *o.CommonName
}

// GetCommonNameOk returns a tuple with the CommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateUpdateCertificateRequest) GetCommonNameOk() (*string, bool) {
	if o == nil || o.CommonName == nil {
		return nil, false
	}
	return o.CommonName, true
}

// HasCommonName returns a boolean if a field has been set.
func (o *CertificateUpdateCertificateRequest) HasCommonName() bool {
	if o != nil && o.CommonName != nil {
		return true
	}

	return false
}

// SetCommonName gets a reference to the given string and assigns it to the CommonName field.
func (o *CertificateUpdateCertificateRequest) SetCommonName(v string) {
	o.CommonName = &v
}

// GetHosts returns the Hosts field value if set, zero value otherwise.
func (o *CertificateUpdateCertificateRequest) GetHosts() []string {
	if o == nil || o.Hosts == nil {
		var ret []string
		return ret
	}
	return *o.Hosts
}

// GetHostsOk returns a tuple with the Hosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateUpdateCertificateRequest) GetHostsOk() (*[]string, bool) {
	if o == nil || o.Hosts == nil {
		return nil, false
	}
	return o.Hosts, true
}

// HasHosts returns a boolean if a field has been set.
func (o *CertificateUpdateCertificateRequest) HasHosts() bool {
	if o != nil && o.Hosts != nil {
		return true
	}

	return false
}

// SetHosts gets a reference to the given []string and assigns it to the Hosts field.
func (o *CertificateUpdateCertificateRequest) SetHosts(v []string) {
	o.Hosts = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *CertificateUpdateCertificateRequest) GetOrganization() string {
	if o == nil || o.Organization == nil {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateUpdateCertificateRequest) GetOrganizationOk() (*string, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *CertificateUpdateCertificateRequest) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *CertificateUpdateCertificateRequest) SetOrganization(v string) {
	o.Organization = &v
}

// GetOrganizationalUnit returns the OrganizationalUnit field value if set, zero value otherwise.
func (o *CertificateUpdateCertificateRequest) GetOrganizationalUnit() string {
	if o == nil || o.OrganizationalUnit == nil {
		var ret string
		return ret
	}
	return *o.OrganizationalUnit
}

// GetOrganizationalUnitOk returns a tuple with the OrganizationalUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateUpdateCertificateRequest) GetOrganizationalUnitOk() (*string, bool) {
	if o == nil || o.OrganizationalUnit == nil {
		return nil, false
	}
	return o.OrganizationalUnit, true
}

// HasOrganizationalUnit returns a boolean if a field has been set.
func (o *CertificateUpdateCertificateRequest) HasOrganizationalUnit() bool {
	if o != nil && o.OrganizationalUnit != nil {
		return true
	}

	return false
}

// SetOrganizationalUnit gets a reference to the given string and assigns it to the OrganizationalUnit field.
func (o *CertificateUpdateCertificateRequest) SetOrganizationalUnit(v string) {
	o.OrganizationalUnit = &v
}

// GetLocality returns the Locality field value if set, zero value otherwise.
func (o *CertificateUpdateCertificateRequest) GetLocality() string {
	if o == nil || o.Locality == nil {
		var ret string
		return ret
	}
	return *o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateUpdateCertificateRequest) GetLocalityOk() (*string, bool) {
	if o == nil || o.Locality == nil {
		return nil, false
	}
	return o.Locality, true
}

// HasLocality returns a boolean if a field has been set.
func (o *CertificateUpdateCertificateRequest) HasLocality() bool {
	if o != nil && o.Locality != nil {
		return true
	}

	return false
}

// SetLocality gets a reference to the given string and assigns it to the Locality field.
func (o *CertificateUpdateCertificateRequest) SetLocality(v string) {
	o.Locality = &v
}

// GetProvince returns the Province field value if set, zero value otherwise.
func (o *CertificateUpdateCertificateRequest) GetProvince() string {
	if o == nil || o.Province == nil {
		var ret string
		return ret
	}
	return *o.Province
}

// GetProvinceOk returns a tuple with the Province field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateUpdateCertificateRequest) GetProvinceOk() (*string, bool) {
	if o == nil || o.Province == nil {
		return nil, false
	}
	return o.Province, true
}

// HasProvince returns a boolean if a field has been set.
func (o *CertificateUpdateCertificateRequest) HasProvince() bool {
	if o != nil && o.Province != nil {
		return true
	}

	return false
}

// SetProvince gets a reference to the given string and assigns it to the Province field.
func (o *CertificateUpdateCertificateRequest) SetProvince(v string) {
	o.Province = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *CertificateUpdateCertificateRequest) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CertificateUpdateCertificateRequest) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *CertificateUpdateCertificateRequest) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *CertificateUpdateCertificateRequest) SetCountry(v string) {
	o.Country = &v
}

func (o CertificateUpdateCertificateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CommonName != nil {
		toSerialize["commonName"] = o.CommonName
	}
	if o.Hosts != nil {
		toSerialize["hosts"] = o.Hosts
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.OrganizationalUnit != nil {
		toSerialize["organizationalUnit"] = o.OrganizationalUnit
	}
	if o.Locality != nil {
		toSerialize["locality"] = o.Locality
	}
	if o.Province != nil {
		toSerialize["province"] = o.Province
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	return json.Marshal(toSerialize)
}

type NullableCertificateUpdateCertificateRequest struct {
	value *CertificateUpdateCertificateRequest
	isSet bool
}

func (v NullableCertificateUpdateCertificateRequest) Get() *CertificateUpdateCertificateRequest {
	return v.value
}

func (v *NullableCertificateUpdateCertificateRequest) Set(val *CertificateUpdateCertificateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCertificateUpdateCertificateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCertificateUpdateCertificateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertificateUpdateCertificateRequest(val *CertificateUpdateCertificateRequest) *NullableCertificateUpdateCertificateRequest {
	return &NullableCertificateUpdateCertificateRequest{value: val, isSet: true}
}

func (v NullableCertificateUpdateCertificateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertificateUpdateCertificateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
