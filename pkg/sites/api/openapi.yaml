openapi: 3.0.0
info:
  contact:
    name: StackPath Support
    url: https://support.stackpath.com/
  title: Sites
  version: 1.0.0
externalDocs:
  description: The StackPath API Reference
  url: https://stackpath.dev/reference
servers:
- url: https://gateway.stackpath.com
security:
- oauth2: []
paths:
  /delivery/v1/stacks/{stack_id}/certificates/{certificate_id}/recheck:
    post:
      description: Re-check a certificate's verification details while it's being
        issued. This applies to Stackpath's free certificates.
      operationId: RecheckCertificateVerification
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A certificate ID
        explode: false
        in: path
        name: certificate_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Default error structure.
      summary: Re-check certificate verification
      tags:
      - SSL
  /delivery/v1/stacks/{stack_id}/metrics:
    get:
      description: The last 24 hours of metrics are retrieved if the start and end
        dates are not provided
      operationId: GetMetrics
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: The starting date to retrieve metrics for.
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The ending date to retrieve metrics for.
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: granularity
        required: false
        schema:
          default: AUTO
          enum:
          - AUTO
          - PT5M
          - PT1H
          - P1D
          - P1M
          type: string
        style: form
      - description: A comma-separated list of 1 digit http status codes categories
          to filter by.
        explode: true
        in: query
        name: status_categories
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A comma-separated list of 3 digit http status codes to filter
          by.
        explode: true
        in: query
        name: status_codes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A comma-separated list of site IDs to filter metrics for.
        explode: true
        in: query
        name: sites
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: group_by
        required: false
        schema:
          default: NONE
          enum:
          - NONE
          - SITE
          - PLATFORM
          - POP
          - REGION
          - STATUS
          - STATUS_CATEGORY
          type: string
        style: form
      - description: A comma-separated list of billing regions to filter metrics for.
        explode: true
        in: query
        name: billing_regions
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A comma-separated list of StackPath point of presence location
          codes to filter metrics for.
        explode: true
        in: query
        name: pops
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A comma-separated list of billing platforms to filter metrics
          for.
        explode: true
        in: query
        name: platforms
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A filter to retrieve metrics by site type.
        explode: true
        in: query
        name: site_type_filter
        required: false
        schema:
          items:
            enum:
            - ALL
            - CDN
            - WAF
            - SERVERLESS_EDGE_ENGINE
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: metric_type
        required: false
        schema:
          default: TRANSFER
          enum:
          - TRANSFER
          - STATUS_CODE
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/prometheusMetrics'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Default error structure.
      summary: Get metrics
      tags:
      - Metrics
  /delivery/v1/stacks/{stack_id}/origins:
    get:
      description: Retrieve all origins associated with a site's stack
      operationId: GetOrigins
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items desired.
        explode: true
        in: query
        name: page_request.first
        required: false
        schema:
          type: string
        style: form
      - description: The cursor value after which data will be returned.
        explode: true
        in: query
        name: page_request.after
        required: false
        schema:
          type: string
        style: form
      - description: SQL-style constraint filters.
        explode: true
        in: query
        name: page_request.filter
        required: false
        schema:
          type: string
        style: form
      - description: Sort the response by the given field.
        explode: true
        in: query
        name: page_request.sort_by
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deliveryGetOriginsResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Default error structure.
      summary: Get all origins
      tags:
      - Origins
  /delivery/v1/stacks/{stack_id}/origins/{origin_id}:
    get:
      operationId: GetOrigin
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: An origin ID
        explode: false
        in: path
        name: origin_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deliveryGetOriginResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Default error structure.
      summary: Get an origin
      tags:
      - Origins
    patch:
      operationId: UpdateOrigin
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: An origin ID
        explode: false
        in: path
        name: origin_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deliveryUpdateOriginRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deliveryUpdateOriginResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Default error structure.
      summary: Update an origin
      tags:
      - Origins
  /delivery/v1/stacks/{stack_id}/sites:
    get:
      operationId: GetSites
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items desired.
        explode: true
        in: query
        name: page_request.first
        required: false
        schema:
          type: string
        style: form
      - description: The cursor value after which data will be returned.
        explode: true
        in: query
        name: page_request.after
        required: false
        schema:
          type: string
        style: form
      - description: SQL-style constraint filters.
        explode: true
        in: query
        name: page_request.filter
        required: false
        schema:
          type: string
        style: form
      - description: Sort the response by the given field.
        explode: true
        in: query
        name: page_request.sort_by
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deliveryGetSitesResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Default error structure.
      summary: Get all sites
      tags:
      - Sites
    post:
      operationId: CreateSite
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deliveryCreateSiteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deliveryCreateSiteResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Default error structure.
      summary: Create a site
      tags:
      - Sites
  /delivery/v1/stacks/{stack_id}/sites/{site_id}:
    delete:
      operationId: DeleteSite
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Default error structure.
      summary: Delete a site
      tags:
      - Sites
    get:
      operationId: GetSite
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deliveryGetSiteResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Default error structure.
      summary: Get a site
      tags:
      - Sites
  /delivery/v1/stacks/{stack_id}/sites/{site_id}/cdn:
    delete:
      operationId: DisableSiteCDN
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Default error structure.
      summary: Disable CDN
      tags:
      - Site Features
    post:
      operationId: EnableSiteCDN
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Default error structure.
      summary: Enable CDN
      tags:
      - Site Features
  /delivery/v1/stacks/{stack_id}/sites/{site_id}/delivery_domains:
    get:
      description: Delivery domains allow the CDN to recognize an HTTP request and
        associate it with a site.
      operationId: GetSiteDeliveryDomains2
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items desired.
        explode: true
        in: query
        name: page_request.first
        required: false
        schema:
          type: string
        style: form
      - description: The cursor value after which data will be returned.
        explode: true
        in: query
        name: page_request.after
        required: false
        schema:
          type: string
        style: form
      - description: SQL-style constraint filters.
        explode: true
        in: query
        name: page_request.filter
        required: false
        schema:
          type: string
        style: form
      - description: Sort the response by the given field.
        explode: true
        in: query
        name: page_request.sort_by
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deliveryGetSiteDeliveryDomainsResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Default error structure.
      summary: Retrieve the delivery domains configured on a site
      tags:
      - Delivery Domains
    post:
      operationId: CreateSiteDeliveryDomain
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deliveryCreateSiteDeliveryDomainRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deliveryCreateSiteDeliveryDomainResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Default error structure.
      summary: Add a delivery domain to a site
      tags:
      - Delivery Domains
  /delivery/v1/stacks/{stack_id}/sites/{site_id}/delivery_domains/{domain}:
    delete:
      operationId: DeleteSiteDeliveryDomain
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: The delivery domain to remove from a site
        explode: false
        in: path
        name: domain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Default error structure.
      summary: Remove a delivery domain from a site
      tags:
      - Delivery Domains
  /delivery/v1/stacks/{stack_id}/sites/{site_id}/scopes/{scope_id}/origins:
    get:
      operationId: GetScopeOrigins
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of items desired.
        explode: true
        in: query
        name: page_request.first
        required: false
        schema:
          type: string
        style: form
      - description: The cursor value after which data will be returned.
        explode: true
        in: query
        name: page_request.after
        required: false
        schema:
          type: string
        style: form
      - description: SQL-style constraint filters.
        explode: true
        in: query
        name: page_request.filter
        required: false
        schema:
          type: string
        style: form
      - description: Sort the response by the given field.
        explode: true
        in: query
        name: page_request.sort_by
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deliveryGetScopeOriginsResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Default error structure.
      summary: Get a scope's origins
      tags:
      - Origins
    post:
      description: The origin is automatically created if necessary. When the request
        contains a priority which an origin already associated with the scope has
        set, the existing origin is disconnected. The priority of an origin already
        associated with a scope can be modified via this endpoint.
      operationId: ConnectScopeToOrigin
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      - description: A scope ID
        explode: false
        in: path
        name: scope_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deliveryConnectScopeToOriginRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deliveryConnectScopeToOriginResponse'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Default error structure.
      summary: Connect an origin to a scope
      tags:
      - Origins
  /delivery/v1/stacks/{stack_id}/sites/{site_id}/scripting:
    delete:
      operationId: DisableSiteEdgeEngine2
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Default error structure.
      summary: Disable serverless scripting
      tags:
      - Site Features
    post:
      operationId: EnableSiteEdgeEngine2
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Default error structure.
      summary: Enable serverless scripting
      tags:
      - Site Features
  /delivery/v1/stacks/{stack_id}/sites/{site_id}/waf:
    delete:
      operationId: DisableSiteWAF
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Default error structure.
      summary: Disable WAF
      tags:
      - Site Features
    post:
      operationId: EnableSiteWAF
      parameters:
      - description: A stack ID or slug
        explode: false
        in: path
        name: stack_id
        required: true
        schema:
          type: string
        style: simple
      - description: A site ID
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deliveryEnableSiteWAFRequest'
        required: true
      responses:
        "204":
          description: No content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Returned when an unauthorized request is attempted.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Internal server error.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stackpathapiStatus'
          description: Default error structure.
      summary: Enable WAF
      tags:
      - Site Features
components:
  schemas:
    AuthACLAccessCodeEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - allow
      - deny
      type: string
    AuthACLClientIPSrcEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - socket
      - header
      type: string
    AuthGeoCodeEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - countryCode
      - region
      - subdivisionCodes
      - city
      - postalCode
      - continentCode
      - timeZone
      - dmaCode
      - areaCode
      type: string
    BandwidthRateLimitInitialBurstUnitsEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - byte
      - kilobyte
      type: string
    BandwidthRateLimitSustainedRateUnitsEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - kilobit
      - kilobyte
      type: string
    ContentDispositionByHeaderDefaultTypeEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - attachment
      - inline
      type: string
    DataMatrix:
      description: A set of time series containing a range of data points over time
        for each time series
      example:
        results:
        - metric:
            key: metric
          values:
          - unixTime: unixTime
            value: value
          - unixTime: unixTime
            value: value
        - metric:
            key: metric
          values:
          - unixTime: unixTime
            value: value
          - unixTime: unixTime
            value: value
      properties:
        results:
          description: A data point's value
          items:
            $ref: '#/components/schemas/DataMatrixResult'
          type: array
      type: object
    DataMatrixResult:
      description: Time series containing a range of data points over time for each
        time series
      example:
        metric:
          key: metric
        values:
        - unixTime: unixTime
          value: value
        - unixTime: unixTime
          value: value
      properties:
        metric:
          additionalProperties:
            type: string
          description: The data points' labels
          type: object
        values:
          description: Time series data point values
          items:
            $ref: '#/components/schemas/MetricsDataValue'
          type: array
      type: object
    DataVector:
      description: A set of time series containing a single sample for each time series,
        all sharing the same timestamp
      example:
        results:
        - metric:
            key: metric
          value:
            unixTime: unixTime
            value: value
        - metric:
            key: metric
          value:
            unixTime: unixTime
            value: value
      properties:
        results:
          description: A data point's value
          items:
            $ref: '#/components/schemas/DataVectorResult'
          type: array
      type: object
    DataVectorResult:
      description: Time series containing a single sample for each time series, all
        sharing the same timestamp
      example:
        metric:
          key: metric
        value:
          unixTime: unixTime
          value: value
      properties:
        metric:
          additionalProperties:
            type: string
          description: The data points' labels
          type: object
        value:
          $ref: '#/components/schemas/MetricsDataValue'
      type: object
    MetricsData:
      description: The data points in a metrics collection
      example:
        vector:
          results:
          - metric:
              key: metric
            value:
              unixTime: unixTime
              value: value
          - metric:
              key: metric
            value:
              unixTime: unixTime
              value: value
        matrix:
          results:
          - metric:
              key: metric
            values:
            - unixTime: unixTime
              value: value
            - unixTime: unixTime
              value: value
          - metric:
              key: metric
            values:
            - unixTime: unixTime
              value: value
            - unixTime: unixTime
              value: value
      properties:
        matrix:
          $ref: '#/components/schemas/DataMatrix'
        vector:
          $ref: '#/components/schemas/DataVector'
      type: object
    MetricsDataValue:
      description: An individual metric data point
      example:
        unixTime: unixTime
        value: value
      properties:
        unixTime:
          description: The time that a data point was recorded
          type: string
        value:
          description: A data point's value
          type: string
      type: object
    OriginPullPolicyDefaultCacheBehaviorEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - bypass
      - ttl
      type: string
    OriginPullPolicyExpirePolicyEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - CACHE_CONTROL
      - INGEST
      - LAST_MODIFY
      - NEVER_EXPIRE
      - DO_NOT_CACHE
      type: string
    OriginPullPolicyNoCacheBehaviorEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - legacy
      - spec
      type: string
    OriginPullRedirectActionEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - follow
      - proxy
      type: string
    OriginPullResumeDownloadEtagValidationEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - DO_NOT_USE
      - OPTIONAL
      - REQUIRED
      type: string
    apiStatusDetail:
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          type: string
      required:
      - '@type'
      type: object
    cdncustconfOrigin:
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        host:
          type: string
        originPullHeaders:
          description: String of values delimited by a '|' character.
          type: string
        originCacheHeaders:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfAccessLogs:
      description: Enable/Disable access logs
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfAccessLogsConfig:
      description: Access log settings
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        extraLogFields:
          description: String of values delimited by a ',' character.
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfAuthACL:
      description: IP address restrictions allow you to configure your CDN container
        to grant or deny a specific IP addresses or range of IP addresses from accessing
        content cached in a directory in your CDN container.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        accessCode:
          $ref: '#/components/schemas/AuthACLAccessCodeEnumWrapperValue'
        ipList:
          description: String of values delimited by a ',' character. This is a list
            of IP addresses considered for this policy.
          type: string
        protocol:
          $ref: '#/components/schemas/custconfAuthACLProtocolEnumWrapperValue'
        clientIPSrc:
          $ref: '#/components/schemas/AuthACLClientIPSrcEnumWrapperValue'
        header:
          description: This allows you to specify the name of a HTTP request header
            which will contain the client IP address to use for this policy.
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfAuthACLProtocolEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - http
      - https
      - both
      type: string
    custconfAuthGeo:
      description: Geographic restrictions allow you to restrict content to end users
        in specific locations. The IP address of incoming requests is checked against
        a current list of IP allocations to countries and to states within the US.
        If an end user's IP address is not found in the list, they are allowed access
        to the content by default. The feature has both an Include and an Exclude
        list which are used to target the allowed audience.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        code:
          $ref: '#/components/schemas/AuthGeoCodeEnumWrapperValue'
        values:
          description: String of values delimited by a ',' character. These are the
            region codes you are targeting for this policy. The values that can be
            supplied within this field are those that are supported by the MaxMind®
            GeoIP database.
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfAuthHttpBasic:
      description: HTTP basic authentication policies allow you to control access
        to your content by requiring the end user to enter a valid username and password
        before gaining access to content.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        bindingPoint:
          description: This is a URL to a resource on the authentication server responsible
            for authentication of users.
          type: string
        realm:
          description: This is the authentication realm given back to the user on
            requests which do not contain the authentication credentials. Browsers
            typically display this value to the user when the login credentials are
            requested.
          type: string
        ttl:
          description: This is the number of seconds the authentication session will
            be cached by the browsers. After this time, browsers will be asked to
            present the user credentials again for re-authentication.
          format: int64
          type: number
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfAuthReferer:
      description: HTTP Referrer restriction policies allow you to limit access to
        your published CDN URLs based on the HTTP Referrer header submitted by the
        browser. This restriction policy prevents your content from being easily distributed
        on unauthorized websites (also known as hot linking or deep linking). Once
        this policy is applied to your CDN container, websites that are not listed
        in this policy will be denied access to the content cached at this location.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        referer:
          description: String of values delimited by a '|' character. This is a list
            of domains authorized to access content from this path in the container.
            You may use wildcards to specify multiple websites hosted on the same
            domain.
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfAuthUrlAsymmetricSignTlu:
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        expireParameterName:
          type: string
        keyIdParameterName:
          type: string
        algorithmIdParameterName:
          type: string
        digestParameterName:
          type: string
        publicKeyIdMap:
          additionalProperties:
            type: string
          type: object
        algorithmIdMap:
          additionalProperties:
            $ref: '#/components/schemas/custconfAuthUrlAsymmetricSignTluAlgorithmIdMapEnumWrapperValue'
          type: object
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfAuthUrlAsymmetricSignTluAlgorithmIdMapEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - hmacsha1
      - hmacsha256
      type: string
    custconfAuthUrlSign:
      description: URL Signing policies allow you to restrict access to your content
        by configuring a "shared secret" with StackPath. This "shared secret" is used
        to apply an MD5 hashing algorithm on the URL to validate the signature supplied
        on the request. Since the "shared secret" is only known by the publisher and
        StackPath, URL signatures cannot be generated by unauthorized users.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        tokenField:
          description: This is the name of the query string parameter that will be
            used by the publisher to specify the signature for the URL.
          type: string
        ignoreFieldsAfterToken:
          description: Select this option if you want StackPath to exclude query string
            parameters specified after the passphrase in the validation process.
          format: boolean
          type: boolean
        passPhraseField:
          description: This is the name of the query string parameter that contains
            the value of the secret. This query string parameter is only used during
            the generation and validation of a URL signature and should not be present
            in the published URL.
          type: string
        passPhrase:
          description: The shared secret used during the signing process. This value
            should only be known by StackPath and systems authorized to sign your
            content.
          type: string
        expiresField:
          description: This is the name of the query string parameter that contains
            the Epoch time after which the URL is considered invalid.
          type: string
        ipAddressField:
          description: This is a query string parameter that contains an IPv4 address
            to which the published URL will be restricted.
          type: string
        uriLengthField:
          description: This is a query string parameter used to limit the number of
            characters in the path that should be considered when validating the URL
            signature. This feature allows you to reuse the same signature on all
            assets stored in the same cache path. Setting this value to 0 will strip
            off the filename in the URL (leaving the trailing slash) when calculating
            the checksum.
          type: string
        userAgentField:
          description: This is a query string parameter used to restrict the published
            URL to a specific user agent. Publishers can use this feature during the
            signing process to ensure that only a specific user agent can access the
            published content. You do not need to specify the user agent on the published
            URL. StackPath will use the HTTP User-Agent header value during signature
            validation.
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfAuthUrlSignAliCloudA:
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        passPhrase:
          type: string
        tokenField:
          type: string
        includeParamsBeforeToken:
          format: boolean
          type: boolean
        expirationExtension:
          format: int64
          type: number
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfAuthUrlSignAliCloudB:
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        passPhrase:
          type: string
        expirationExtension:
          format: int64
          type: number
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfAuthUrlSignAliCloudC:
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        passPhrase:
          type: string
        expirationExtension:
          format: int64
          type: number
        tokenField:
          type: string
        expireField:
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfAuthUrlSignHmacTlu:
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        expireParameterName:
          type: string
        keyIdParameterName:
          type: string
        algorithmIdParameterName:
          type: string
        digestParameterName:
          type: string
        symmetricKeyIdMap:
          additionalProperties:
            type: string
          type: object
        algorithmIdMap:
          additionalProperties:
            $ref: '#/components/schemas/custconfAuthUrlSignHmacTluAlgorithmIdMapEnumWrapperValue'
          type: object
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfAuthUrlSignHmacTluAlgorithmIdMapEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - hmacsha1
      - hmacsha256
      type: string
    custconfAuthUrlSignIq:
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        secretKey:
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfAwsSignedOriginPullV4:
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          format: boolean
          type: boolean
        bucketIdentifier:
          type: string
        accessKeyId:
          type: string
        secretAccessKey:
          type: string
        awsRegion:
          type: string
        awsService:
          type: string
        expireTimeSeconds:
          format: int64
          type: number
        signedHeaders:
          description: String of values delimited by a ',' character.
          type: string
        authenticationType:
          $ref: '#/components/schemas/custconfAwsSignedOriginPullV4AuthenticationTypeEnumWrapperValue'
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfAwsSignedOriginPullV4AuthenticationTypeEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - query
      - header
      type: string
    custconfAwsSignedS3PostV4:
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          format: boolean
          type: boolean
        bucketIdentifier:
          type: string
        accessKeyId:
          type: string
        secretAccessKey:
          type: string
        awsRegion:
          type: string
        awsService:
          type: string
        expireTimeSeconds:
          format: int64
          type: number
        signedHeaders:
          description: String of values delimited by a ',' character.
          type: string
        authenticationType:
          $ref: '#/components/schemas/custconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValue'
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfAwsSignedS3PostV4AuthenticationTypeEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - query
      - header
      type: string
    custconfBandWidthLimit:
      description: 'The pattern based bandwidth throttling policy allows you to limit
        the transfer rate of assets to end users based on a set of rules matching
        the request''s HTTP User-Agent and/or the path. Each rule must be expressed
        in the following format: <User-Agent Pattern>:<path pattern 1, path pattern
        2>. For example, the pattern:  "Mozilla*:*.mp3,*dir*.exe|*IE*:*.jpg,*.zip|*ios
        6*:* " will match all MP3 files and EXE files containing the substring "dir"
        that are requested by a User-Agent containing the substring "Mozilla," all
        JPG and ZIP files requested by a User-Agent containing the substring "IE,"
        and all requests made by User-Agents containing the substring "ios 6."'
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        rule:
          description: String of values delimited by a '|' character. These are pattern
            match rules to use for applying rate limiting on requests.
          type: string
        values:
          description: 'These are the initial bytes (ri) and the sustained rate (rs)
            query string parameters to use for this rule. Example: ri=100,rs=1000'
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfBandwidthRateLimit:
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        initialBurstName:
          type: string
        sustainedRateName:
          type: string
        initialBurstUnits:
          $ref: '#/components/schemas/BandwidthRateLimitInitialBurstUnitsEnumWrapperValue'
        sustainedRateUnits:
          $ref: '#/components/schemas/BandwidthRateLimitSustainedRateUnitsEnumWrapperValue'
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfBypassCache:
      description: Bypass content caching on filter match
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
        cookieFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfCacheControl:
      description: The browser caching policy allows you to control the browser caching
        behavior of your assets independently from the CDN cache. For example, this
        policy allows you to set lower or higher TTLs for the browser than those of
        the CDN cache.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        statusCodeMatch:
          description: String of values delimited by a ',' character.
          type: string
        maxAge:
          description: The client TTL controls the lifetime of the asset in the browser's
            cache. The value entered here will be sent to the browser in the Cache-Control
            max-age directive for HTTP 1.1 clients and the Expires header for HTTP
            1.0 clients.
          format: int32
          type: integer
        mustRevalidate:
          description: Selecting this option instructs the CDN caching servers to
            insert the must-revalidate directive on all HTTP responses sent to clients.
          format: boolean
          type: boolean
        synchronizeMaxAge:
          description: Selecting this option allows the CDN to synchronize the Max-Age
            header it sends to clients with the remaining TTL of the asset in the
            cache. This allows assets to expire from the browser cache at the same
            time they expire from the CDN.
          format: boolean
          type: boolean
        override:
          description: 'This allows you to specify a custom Cache-Control header to
            be used by the CDN on all HTTP responses targeted by this policy. Note:
            Do not include the header name (Cache-Control) in this field. Only the
            value of the header should be specified.'
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfCacheKeyModification:
      description: The Cache Key Modification policy allows for manipulation of the
        way the cache uniquely stores assets.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        normalizeKeyPathToLowerCase:
          description: When set, purges and requests for a file will be case insensitive.
            This setting is useful if you have a case insensitive origin server and
            would like to avoid duplicating assets.
          format: boolean
          type: boolean
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfClientRequestModification:
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        urlPattern:
          type: string
        urlRewrite:
          type: string
        headerPattern:
          type: string
        headerRewrite:
          type: string
        addHeaders:
          description: String of values delimited by a '|' character. This is the
            static HTTP header you want inserted into the CDN request. Start value
            with "append:", "replace:" or "create:" which defines if Header will be
            added, replaced or create if not exists. Default is append.
          type: string
        flowControl:
          $ref: '#/components/schemas/custconfClientRequestModificationFlowControlEnumWrapperValue'
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
        cookieFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfClientRequestModificationFlowControlEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - next
      - break
      type: string
    custconfClientResponseModification:
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        statusCodeRewrite:
          format: int64
          type: number
        headerPattern:
          type: string
        headerRewrite:
          type: string
        addHeaders:
          description: String of values delimited by a '|' character. This is the
            static HTTP header you want inserted into the CDN response. Start value
            with "append:", "replace:" or "create:" which defines if Header will be
            added, replaced or create if not exists. Default is append.
          type: string
        flowControl:
          $ref: '#/components/schemas/custconfClientResponseModificationFlowControlEnumWrapperValue'
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfClientResponseModificationFlowControlEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - next
      - break
      type: string
    custconfCompression:
      description: The compression policy allows you to provide a list of file extensions
        you want the CDN caching servers to automatically compress before delivering
        content to end users. This policy is typically used when your origin server
        does not support compression or you are unable to configure your origin to
        compress your files. If your origin is configured to already compress files,
        you should consider adding the Compressed Origin Pull policy to your host,
        which will enable the CDN caching server to request compressed (gzip) version
        of your assets. The compressed origin pull policy can be found in the Origin
        Pull policies list. Please note that our caching servers schedule the compression
        of files, and typically you do not see the compressed delivery until the file
        has been requested several times. Typically, this list is comprised of text
        files like javascript, html and CSS files. You should not include file extensions
        that match media files (images, videos, or audio files) or any other file
        format that includes a built in compression algorithm. Attempting to further
        compress these types of files usually results in a larger file being delivered
        to end users.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        gzip:
          description: String of values delimited by a ',' character. The list of
            file extensions you want the caching servers to use to identify the content
            you want compressed before delivering it to end users
          type: string
        mime:
          description: String of values delimited by a ',' character. A list of rules
            based on MIME types you want the caching servers to use to identify content
            you want compressed before delivering it to end users.
          type: string
        level:
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfConfiguration:
      description: Advanced configuration options
      properties:
        accessLogs:
          $ref: '#/components/schemas/custconfAccessLogs'
        accessLogsConfig:
          $ref: '#/components/schemas/custconfAccessLogsConfig'
        authACL:
          description: IP address restrictions allow you to configure your CDN container
            to grant or deny a specific IP addresses or range of IP addresses from
            accessing content cached in a directory in your CDN container.
          items:
            $ref: '#/components/schemas/custconfAuthACL'
          type: array
        authGeo:
          description: Geographic restrictions allow you to restrict content to end
            users in specific locations. The IP address of incoming requests is checked
            against a current list of IP allocations to countries and to states within
            the US. If an end user's IP address is not found in the list, they are
            allowed access to the content by default. The feature has both an Include
            and an Exclude list which are used to target the allowed audience.
          items:
            $ref: '#/components/schemas/custconfAuthGeo'
          type: array
        authHttpBasic:
          $ref: '#/components/schemas/custconfAuthHttpBasic'
        authReferer:
          $ref: '#/components/schemas/custconfAuthReferer'
        authUrlSign:
          description: URL Signing policies allow you to restrict access to your content
            by configuring a "shared secret" with StackPath. This "shared secret"
            is used to apply an MD5 hashing algorithm on the URL to validate the signature
            supplied on the request. Since the "shared secret" is only known by the
            publisher and StackPath, URL signatures cannot be generated by unauthorized
            users.
          items:
            $ref: '#/components/schemas/custconfAuthUrlSign'
          type: array
        authUrlSignAliCloudA:
          items:
            $ref: '#/components/schemas/custconfAuthUrlSignAliCloudA'
          type: array
        authUrlSignAliCloudB:
          items:
            $ref: '#/components/schemas/custconfAuthUrlSignAliCloudB'
          type: array
        authUrlSignAliCloudC:
          items:
            $ref: '#/components/schemas/custconfAuthUrlSignAliCloudC'
          type: array
        authUrlSignHmacTlu:
          items:
            $ref: '#/components/schemas/custconfAuthUrlSignHmacTlu'
          type: array
        authUrlSignIq:
          items:
            $ref: '#/components/schemas/custconfAuthUrlSignIq'
          type: array
        authUrlAsymmetricSignTlu:
          items:
            $ref: '#/components/schemas/custconfAuthUrlAsymmetricSignTlu'
          type: array
        bandWidthLimit:
          $ref: '#/components/schemas/custconfBandWidthLimit'
        bandwidthRateLimit:
          $ref: '#/components/schemas/custconfBandwidthRateLimit'
        bypassCache:
          description: Bypass content caching on filter match
          items:
            $ref: '#/components/schemas/custconfBypassCache'
          type: array
        cacheControl:
          description: The browser caching policy allows you to control the browser
            caching behavior of your assets independently from the CDN cache. For
            example, this policy allows you to set lower or higher TTLs for the browser
            than those of the CDN cache.
          items:
            $ref: '#/components/schemas/custconfCacheControl'
          type: array
        cacheKeyModification:
          $ref: '#/components/schemas/custconfCacheKeyModification'
        clientRequestModification:
          items:
            $ref: '#/components/schemas/custconfClientRequestModification'
          type: array
        clientResponseModification:
          items:
            $ref: '#/components/schemas/custconfClientResponseModification'
          type: array
        compression:
          $ref: '#/components/schemas/custconfCompression'
        contentDispositionByURL:
          $ref: '#/components/schemas/custconfContentDispositionByURL'
        contentDispositionByHeader:
          description: The content disposition by HTTP header match policy allows
            you to control the Content-Disposition delivered by the CDN using a pattern
            match against the value of any HTTP header present in the request. If
            you are using URL query string parameters to control the Content-Disposition
            header (using the Content Disposition by URL policy) then the Content-Disposition
            header generated by this policy will not be used on that specific request.
            A typical use case for this policy is to set a different Content-Disposition
            header based on the User-Agent in the request.
          items:
            $ref: '#/components/schemas/custconfContentDispositionByHeader'
          type: array
        customer:
          $ref: '#/components/schemas/custconfCustomer'
        customHeader:
          $ref: '#/components/schemas/custconfCustomHeader'
        customMimeType:
          description: The custom mime type policy allows you to map file extensions
            to specific mime types for the CDN caching servers to use when delivering
            assets. The mime types you map using this policy may also be limited to
            specific response codes to address scenarios in which the mime type changes
            based on the response code.
          items:
            $ref: '#/components/schemas/custconfCustomMimeType'
          type: array
        dynamicCacheRule:
          description: Client response based on Rules.
          items:
            $ref: '#/components/schemas/custconfDynamicCacheRule'
          type: array
        dynamicContent:
          description: The dynamic content caching policy allows you to specify a
            set of query string and/or HTTP header key/value pairs that should create
            a unique cache entry for a given URL. This policy is useful when your
            origin returns unique content for the same URL based on a set of query
            string parameters provided in the request.
          items:
            $ref: '#/components/schemas/custconfDynamicContent'
          type: array
        failSafeOriginPull:
          $ref: '#/components/schemas/custconfFailSafeOriginPull'
        farAheadRangeProxy:
          $ref: '#/components/schemas/custconfFarAheadRangeProxy'
        fileSegmentation:
          $ref: '#/components/schemas/custconfFileSegmentation'
        flvPseudoStreaming:
          $ref: '#/components/schemas/custconfFlvPseudoStreaming'
        gzipOriginPull:
          $ref: '#/components/schemas/custconfGzipOriginPull'
        httpMethods:
          $ref: '#/components/schemas/custconfHttpMethods'
        origin:
          items:
            $ref: '#/components/schemas/cdncustconfOrigin'
          type: array
        originPersistentConnections:
          $ref: '#/components/schemas/custconfOriginPersistentConnections'
        originPull:
          $ref: '#/components/schemas/custconfOriginPull'
        originPullCacheExtension:
          $ref: '#/components/schemas/custconfOriginPullCacheExtension'
        originPullHost:
          items:
            $ref: '#/components/schemas/custconfOriginPullHost'
          type: array
        originPullProtocol:
          $ref: '#/components/schemas/custconfOriginPullProtocol'
        originPullLogs:
          $ref: '#/components/schemas/custconfOriginPullLogs'
        originPullLogsConfig:
          $ref: '#/components/schemas/custconfOriginPullLogsConfig'
        originPullPolicy:
          description: The CDN caching policy allows you to control how your origin's
            content is cached on the CDN.
          items:
            $ref: '#/components/schemas/custconfOriginPullPolicy'
          type: array
        originRequestModification:
          items:
            $ref: '#/components/schemas/custconfOriginRequestModification'
          type: array
        originResponseModification:
          items:
            $ref: '#/components/schemas/custconfOriginResponseModification'
          type: array
        queryStrParam:
          $ref: '#/components/schemas/custconfQueryStrParam'
        receiptLogsConfig:
          $ref: '#/components/schemas/custconfReceiptLogsConfig'
        redirectExceptions:
          $ref: '#/components/schemas/custconfRedirectExceptions'
        redirectMappings:
          description: The response code redirection policy allows you to map cache
            response codes to an HTTP redirect response. When this policy is applied
            to a host, the caching servers will redirect clients to the URL specified
            in this policy instead of delivering the response code you mapped in the
            policy.
          items:
            $ref: '#/components/schemas/custconfRedirectMappings'
          type: array
        responseHeader:
          $ref: '#/components/schemas/custconfResponseHeader'
        originPullResumeDownload:
          description: The CDN attempts to resume downloading Origin Pulls once it
            successfully reads all the headers of a positive response under certain
            conditions by sending subsequent origin range requests for the remaining
            body. The response must be a 2xx to a GET request for the full file or
            a single range (not multi-range). The response must contain the Last-Modified
            and ETag headers.
          items:
            $ref: '#/components/schemas/custconfOriginPullResumeDownload'
          type: array
        robotsTxt:
          items:
            $ref: '#/components/schemas/custconfRobotsTxt'
          type: array
        awsSignedOriginPullV4:
          items:
            $ref: '#/components/schemas/custconfAwsSignedOriginPullV4'
          type: array
        awsSignedS3PostV4:
          items:
            $ref: '#/components/schemas/custconfAwsSignedS3PostV4'
          type: array
        staticHeader:
          description: The static header injection policy allows you to insert headers
            into the CDN request and response processor.
          items:
            $ref: '#/components/schemas/custconfStaticHeader'
          type: array
        timePseudoStreaming:
          $ref: '#/components/schemas/custconfTimePseudoStreaming'
        http2Support:
          $ref: '#/components/schemas/custconfHttp2Support'
        vHost:
          description: A hostname policy allows you to specify an alternate domain
            name that you want to use to access content from your CDN container.
          items:
            $ref: '#/components/schemas/custconfVHost'
          type: array
      type: object
    custconfContentDispositionByHeader:
      description: The content disposition by HTTP header match policy allows you
        to control the Content-Disposition delivered by the CDN using a pattern match
        against the value of any HTTP header present in the request. If you are using
        URL query string parameters to control the Content-Disposition header (using
        the Content Disposition by URL policy) then the Content-Disposition header
        generated by this policy will not be used on that specific request. A typical
        use case for this policy is to set a different Content-Disposition header
        based on the User-Agent in the request.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        headerFieldName:
          description: The setting allows you to specify the name of the HTTP header
            you'd like to use in the pattern match for this policy.
          type: string
        headerValueMatch:
          description: String of values delimited by a ',' character. A list of glob
            patterns that apply this policy if any of them match against the value
            of the header specified.
          type: string
        defaultType:
          $ref: '#/components/schemas/ContentDispositionByHeaderDefaultTypeEnumWrapperValue'
        overrideOriginHeader:
          description: This setting allows you to force the Content-Disposition generated
            by the CDN for this policy to override the Content-Disposition header
            cached from your origin.
          format: boolean
          type: boolean
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfContentDispositionByURL:
      description: The content disposition by URL policy allows you to control Content-Disposition
        HTTP header delivered by the CDN caching servers. The policy gives you control
        over each of the header directives and allows you to specify a URL pattern
        match for determining when to apply the policy. Please note this policy takes
        precedence over all the other content disposition policies.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        dispositionNameQSParam:
          description: This is the name of the query string parameter which contains
            the file name to use in the Content-Disposition header. This setting is
            typically used by customers to configure a "friendly name" for URLs that
            have obfuscated file names.
          type: string
        dispositionTypeQSParam:
          description: This is the name of the query string parameter which contains
            the disposition type to use in the Content-Disposition header. Typically,
            this value is set to attachment if you want the browser to present the
            user with a "File Download" dialog box and set to inline if you want the
            browser to render the content inline (play an audio/video file instead
            of downloading it).
          type: string
        dispositionOverrideQSParam:
          description: This setting allows you to define a query string parameter
            that when present in the URL contains a string that should be used for
            the Content-Disposition header. The string specified in the URL will completely
            replace the value the CDN would have used based on other policies defined
            for the Content-Disposition header.
          type: string
        overrideOriginHeader:
          description: This setting allows you to force the Content-Disposition generated
            by the CDN for this policy to override the Content-Disposition header
            cached from your origin.
          format: boolean
          type: boolean
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfCustomHeader:
      description: The X-Forwarded-For header policy allows you to override the name
        of the X-Forwarded-For header the CDN sends to your origin.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        xForwardedForAuth:
          description: This is the name of the X-Forwarded-For header you want the
            CDN to use when making requests to your basic authorization server.
          type: string
        xForwardedForOrigin:
          description: This is the name of the X-Forwarded-For header you want the
            CDN to use when making requests to your origin server.
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfCustomMimeType:
      description: The custom mime type policy allows you to map file extensions to
        specific mime types for the CDN caching servers to use when delivering assets.
        The mime types you map using this policy may also be limited to specific response
        codes to address scenarios in which the mime type changes based on the response
        code.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        code:
          description: String of values delimited by a ',' character. A comma separated
            list of status codes that apply to this policy
          type: string
        extensionMap:
          description: 'String of values delimited by a '','' character. This is a
            comma separated list of file extension and mime type pairs that describe
            the mime type mapping for the CDN caching servers. The file extension
            and mime type values should be delimited by a colon (:). For example,
            to map files ending with jpg to the image/jpeg mime type and files ending
            with png to image/png, set this value to: jpg:image/jpeg,png:image/png.'
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfCustomer:
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        accessLogFields:
          description: String of values delimited by a ',' character.
          type: string
        opLogFields:
          description: String of values delimited by a ',' character.
          type: string
        receiptLogFields:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfDynamicCacheRule:
      description: Client response based on Rules.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        statusCode:
          description: Status code to return
          format: int64
          type: number
        headers:
          description: String of values delimited by a '|' character. Pipe delimited
            ('|') list of headers to add to response
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfDynamicContent:
      description: The dynamic content caching policy allows you to specify a set
        of query string and/or HTTP header key/value pairs that should create a unique
        cache entry for a given URL. This policy is useful when your origin returns
        unique content for the same URL based on a set of query string parameters
        provided in the request.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        queryParams:
          description: 'String of values delimited by a '','' character. A comma separated
            list of query string parameters you want to include in the cache key generation.
            NOTE: This list is ignored when the Key Location is set to header.'
          type: string
        headerFields:
          description: |-
            String of values delimited by a ',' character. A comma-separated list of glob patterns that represent HTTP request headers you want included in the cache key generation. Via the use of a colon ':', users can define each glob pattern to match a header name only, or the pattern can be used to match both the header name and value. A pattern without a colon ':' is treated as a header name ONLY match. If the pattern matches the header, then all values are used as a part of the cache key. If the pattern contains a colon, the CDN uses the pattern on the left of the colon to match the header. The pattern to the right of the colon is used to match the value. The CDN only uses the header/value as a part of the cache key if both patterns result in a match. Note, no pattern after a colon indicates an empty header (no value).
            See the fnmatch manpage for acceptable glob patterns.
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfFailSafeOriginPull:
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          format: boolean
          type: boolean
        statusCodeMatch:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfFarAheadRangeProxy:
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          format: boolean
          type: boolean
        thresholdBytes:
          format: int64
          type: number
      type: object
    custconfFileSegmentation:
      description: Policy for configuring the feature for downloading and storing
        files in segments rather than a whole entity.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          description: Flag for enabling the File Segmentation Feature.
          format: boolean
          type: boolean
      type: object
    custconfFlvPseudoStreaming:
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        jumpToByteInitialBytesParam:
          type: string
        jumpToByteStartOffsetParam:
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfGzipOriginPull:
      description: 'The compressed origin pull policy allows you to enable the CDN
        caching servers to request compressed assets from your origin. By enabling
        this policy, the CDN caching servers send your origin the HTTP Accept-Encoding
        header with the gzip code (Accept-Encoding: gzip).'
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          description: This enables support for compressed origin pull
          format: boolean
          type: boolean
      type: object
    custconfHttp2Support:
      description: Enable support of HTTP2
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          description: Enable support of HTTP2
          format: boolean
          type: boolean
      type: object
    custconfHttpMethods:
      description: The HTTP methods policy allows you to selectively enable additional
        HTTP methods you want your CDN container to process. A container automatically
        is set up to process HTTP GET and HEAD commands, so they should not be explicitly
        defined in this policy. HTTP methods included in this policy are proxied directly
        to your origin and not cached by the CDN.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        passThru:
          description: String of values delimited by a ',' character. This is a comma
            separated list of HTTP methods you want the CDN to proxy to your origin.
            A wildcard can be entered to include all methods (excluding HEAD and GET).
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfOriginPersistentConnections:
      description: The origin persistent connection settings are used to enable persistent
        connections to origins
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfOriginPull:
      description: The origin pull settings policy contains a list of settings that
        control the behavior of origin pull requests.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        redirectAction:
          $ref: '#/components/schemas/OriginPullRedirectActionEnumWrapperValue'
        noQSParams:
          description: GFS sends a path without any query string parameters when making
            external origin requests regardless if any parameters were sent by the
            User-Agent.
          format: boolean
          type: boolean
        retryMethods:
          description: String of values delimited by a ',' character. List of HTTP
            Methods that define types of origin pull requests that can be retried
            if a failure occurs after sending a previous request.
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfOriginPullCacheExtension:
      description: The cache extension policy allows you to define cache revalidation
        exceptions on expired content. This policy is applied by the CDN caching servers
        when they are are unable to revalidate an expired asset with your origin due
        to network connectivity issues or unresponsiveness from your origin.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        expiredCacheExtension:
          description: This is the number of seconds to extend an asset's TTL when
            the origin is unavailable. The CDN will continue to retry the origin up
            to the Origin Unavailable Max TTL.
          format: int32
          type: integer
        originUnreachableCacheExtension:
          description: The origin unavailable max TTL value is used by the caching
            server when your origin is unresponsive or the CDN cannot establish a
            connection to your origin. Under these conditions, the CDN can continue
            to serve expired assets from the cache. The value specified in this field
            establishes a maximum allowable TTL for your expired assets. If your origin
            connectivity or responsiveness is not corrected within your maximum allowable
            TTL, the CDN no longer serves your expired assets.
          format: int32
          type: integer
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfOriginPullHost:
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        originUrl:
          type: string
        userName:
          type: string
        password:
          type: string
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfOriginPullLogs:
      description: Enable/Disable Origin Pull Logs
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfOriginPullLogsConfig:
      description: Origin Pull Log Settings
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        extraLogFields:
          description: String of values delimited by a ',' character.
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfOriginPullPolicy:
      description: The CDN caching policy allows you to control how your origin's
        content is cached on the CDN.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        statusCodeMatch:
          description: String of values delimited by a ',' character. This is a pattern
            match expression for each status code this policy applies to. For example,
            2*, 3* applies this policy to all 200 and 300 level HTTP responses from
            your origin.
          type: string
        expirePolicy:
          $ref: '#/components/schemas/OriginPullPolicyExpirePolicyEnumWrapperValue'
        expireSeconds:
          description: This is the expiration time used for assets pulled from your
            origin. When using Cache-Control headers expiration methods, this value
            is used if your origin doesn't return a max-age directive in the Cache-Control
            HTTP header. Please note that a value of 0 in this fields instructs the
            caching server to retain assets for as long as possible.
          format: int32
          type: integer
        honorNoStore:
          description: This enables the processing of no-store HTTP Cache-Control
            directives on your container. By enabling this option, responses from
            your origin containing the no-store directive are not cached. Be aware
            that requests for non-cacheable assets are always forwarded to your origin
            and may impose a high request and bandwidth load on your origin.
          format: boolean
          type: boolean
        honorNoCache:
          description: This enables the processing of no-cache HTTP Cache-Control
            directives on your container. By enabling this option, responses from
            your origin containing the no-cache directive force the CDN to submit
            every subsequent request to your origin for validation before serving
            the asset stored in the cache.
          format: boolean
          type: boolean
        honorMustRevalidate:
          format: boolean
          type: boolean
        noCacheBehavior:
          $ref: '#/components/schemas/OriginPullPolicyNoCacheBehaviorEnumWrapperValue'
        maxAgeZeroToNoCache:
          description: This enables the CDN to apply the no-cache behavior for assets
            delivered by your origin containing a max-age directive equal to zero.
          format: boolean
          type: boolean
        mustRevalidateToNoCache:
          description: This enables the CDN to apply the no-cache behavior for assets
            delivered by your origin containing the must-revalidate directive.
          format: boolean
          type: boolean
        bypassCacheIdentifier:
          description: This allows you to define a custom directive that, when used
            by your origin in the Cache-Control response headers, forces the CDN to
            proxy the request to the end user without caching the result.
          type: string
        forceBypassCache:
          description: This forces the CDN to not cache any asset pulled from your
            origin that would otherwise be stored at this location in the cache. Typically
            this policy is used to prevent 4XX and 5XX response codes from overwriting
            a file in the cache when used with corresponding Origin Status Code Match
            setting. If bypass cache behavior is desired for all assets at a scope,
            Origin Pull Queue Behavior in the Origin Pull Settings also needs to be
            set to NOCACHE for that scope.
          format: boolean
          type: boolean
        httpHeaders:
          description: String of values delimited by a ',' character. This is the
            list of your origin's HTTP headers that you want the CDN to cache and
            deliver to end users.
          type: string
        honorPrivate:
          description: This enables the processing of private HTTP Cache-Control directives
            on your container. By enabling this option, responses from your origin
            containing the private directive are not cached. Be aware that requests
            for non-cacheable assets are always forwarded to your origin and may impose
            a high request and bandwidth load on your origin.
          format: boolean
          type: boolean
        honorSMaxAge:
          description: This enables the processing of s-maxage HTTP Cache-Control
            directives on your container. By enabling this option, the s-maxage HTTP
            Cache-Control directive in the responses from your origin takes precedence
            over the max-age directive. If both max-age and s-maxage need to be preserved
            in the client response, the Cache-Control header must be added to the
            "Http Header Caching" setting.
          format: boolean
          type: boolean
        updateHttpHeadersOn304Response:
          format: boolean
          type: boolean
        defaultCacheBehavior:
          $ref: '#/components/schemas/OriginPullPolicyDefaultCacheBehaviorEnumWrapperValue'
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
        contentTypeFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfOriginPullProtocol:
      description: The Origin Pull Protocol allows you to configure the CDN caching
        servers to use secured or non-secured connection to Origin.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        protocol:
          $ref: '#/components/schemas/custconfOriginPullProtocolProtocolEnumWrapperValue'
        enableSNI:
          description: This key allows you to configure the CDN caching servers to
            use SNI while making Secured Connection to Origin.
          format: boolean
          type: boolean
      type: object
    custconfOriginPullProtocolProtocolEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - http
      - https
      - match
      type: string
    custconfOriginPullResumeDownload:
      description: The CDN attempts to resume downloading Origin Pulls once it successfully
        reads all the headers of a positive response under certain conditions by sending
        subsequent origin range requests for the remaining body. The response must
        be a 2xx to a GET request for the full file or a single range (not multi-range).
        The response must contain the Last-Modified and ETag headers.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        enabled:
          format: boolean
          type: boolean
        originalStatusCodeMatch:
          description: String of values delimited by a ',' character. Comma separated
            list of glob patterns that indicate which origin pulls this policy applies
            to based on the status code of the original origin response. This feature
            is limited to 2xx responses, but this policy provides fine control, such
            as permitting resume of 200 responses by not 206, or for adding a 2xx
            response code other than 200 or 206.
          type: string
        minimumBodyBytesConsumed:
          description: Minimum number of body bytes that CDN must have consumed during
            an Origin Pull before encountering an error before it is permitted to
            attempt resuming the download. This value does not include the headers
            bytes.
          type: string
        maximumAttempts:
          description: Maximum number of times beyond the initial request that the
            CDN is permitted to attempt resuming an Origin Pull download.
          format: int64
          type: number
        requireOriginRangeSupport:
          description: The CDN resumes an Origin Pull even if the origin does not
            support range requests. If the origin does not support range requests
            and/or returns a 200 response for the same version given in the original
            response, the CDN fast-forwards (reads and discards bytes) until it reaches
            its previous position in the asset.
          format: boolean
          type: boolean
        etagValidation:
          $ref: '#/components/schemas/OriginPullResumeDownloadEtagValidationEnumWrapperValue'
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfOriginRequestModification:
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        urlPattern:
          type: string
        urlRewrite:
          type: string
        headerPattern:
          type: string
        headerRewrite:
          type: string
        addHeaders:
          description: String of values delimited by a '|' character. This is the
            static HTTP header you want inserted into the CDN request. Start value
            with "append:", "replace:" or "create:" which defines if Header will be
            added, replaced or create if not exists. Default is append.
          type: string
        flowControl:
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
        cookieFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfOriginResponseModification:
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        statusCodeRewrite:
          format: int64
          type: number
        headerPattern:
          type: string
        headerRewrite:
          type: string
        addHeaders:
          description: String of values delimited by a '|' character. This is the
            static HTTP header you want inserted into the CDN response. Start value
            with "append:", "replace:" or "create:" which defines if Header will be
            added, replaced or create if not exists. Default is append.
          type: string
        flowControl:
          $ref: '#/components/schemas/custconfOriginResponseModificationFlowControlEnumWrapperValue'
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfOriginResponseModificationFlowControlEnumWrapperValue:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - next
      - break
      type: string
    custconfQueryStrParam:
      description: The reserved query string parameters policy describes all the query
        string parameters the StackPath CDN caching server reserves for special processing
        of your requests.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        dispositionName:
          description: This is the name of the query string parameter which contains
            the name of the file to specify in the Content-Disposition HTTP response
            header. This setting is typically used by customers to configure a "friendly
            name" for URLs that have obfuscated file names. This setting controls
            the "filename" directive that is part of the Content-Disposition HTTP
            header.
          type: string
        dispositionType:
          description: This is the name of the query string parameter which contains
            the disposition type to use in the Content-Disposition HTTP header. Typically,
            this value is set to "attachment," but you may supply a custom string
            using this setting.
          type: string
        dispositionOverride:
          description: This setting allows you to completely override the Content-Disposition
            HTTP header that the CDN caching servers use on a response.
          type: string
        jumpToTimeStart:
          description: This is the name of the query string parameter that indicates
            to the CDN the start time offset of the video returned. This parameter
            is part of the jump-to-time feature that is initiated on a per request
            basis.
          type: string
        jumpToTimeEnd:
          description: This is the name of the query string parameter that indicates
            to the CDN the end time offset of the video that should be returned. This
            parameter is part of the jump-to-time feature that is initiated on a per
            request basis.
          type: string
        jumpToByteInitialBytes:
          description: This is the  name of the query string parameter that indicates
            to the CDN the initial bytes of a video that should be returned before
            sending the requested byte offset. This parameter is part of the jump-to-byte
            feature that is initiated on a per request basis.
          type: string
        jumpToByteStartOffset:
          description: This is the name of the query string parameter that indicates
            to the CDN the specific offset into the video that is being requested.
            This parameter is part of the jump-to-byte feature that is initiated on
            a per request basis.
          type: string
        rateLimitInitial:
          description: This is the name of the query string parameter that indicates
            to the CDN an initial burst rate to use when delivering a file. This parameter
            is part of the bandwidth limiting feature that is initiated on a per request
            basis.
          type: string
        rateLimitSustained:
          description: This is the name of the query string parameter that indicates
            to the CDN the sustained rate being requested for the delivery of a file.
            This parameter is part of the bandwidth throttling feature that is initiated
            on a per request basis.
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfReceiptLogsConfig:
      description: Delivery receipt log settings
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        extraLogFields:
          description: String of values delimited by a ',' character.
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfRedirectExceptions:
      description: The redirect response codes policy allows you to specify the HTTP
        redirect status code the CDN caching server should use when the CDN issues
        a redirect. Using this policy, you can assign different redirect codes to
        user agents requesting content.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        redirectAgentCode:
          description: 'String of values delimited by a '','' character. This is a
            comma separated list of user agents and redirect code pairs. The user
            agent and redirect code values are separated by a colon (:), and you may
            use wildcards in the user agent field. For example, to map assign a 307
            status code to all Chrome browsers, you would specify: *chrome*:307.'
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfRedirectMappings:
      description: The response code redirection policy allows you to map cache response
        codes to an HTTP redirect response. When this policy is applied to a host,
        the caching servers will redirect clients to the URL specified in this policy
        instead of delivering the response code you mapped in the policy.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        code:
          description: The HTTP cache response code that applies to this policy.
          format: int64
          type: number
        redirectURL:
          description: The URL that clients would be redirected to when applying this
            policy.
          type: string
        replacementToken:
          description: A token that will be replaced by the caching server with the
            URL of the request that triggered the policy. This token can be positioned
            anywhere in the redirect URL.
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfResponseHeader:
      description: The custom HTTP response headers policy allows you to specify a
        list of HTTP headers you want the CDN caching servers to include in the response
        to clients.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        http:
          description: 'A pipe delimited list of rules that instructs the CDN caching
            servers to include a content-disposition header. The rules included in
            this setting must be entered in the following format: Content-Disposition:<User
            Agent>:<file extension 1>, <file extension 2>. For example, to send the
            Content-Disposition header for all Mozilla browsers on the delivery of
            mp3, exe, tar, zip, gz and rar files, you would enter the following in
            the field: Content-Disposition:Mozilla*:mp3,exe,tar,zip,gz,rar'
          type: string
        enableETag:
          description: This gives the ability to disable the ETag header on the response.
          format: boolean
          type: boolean
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfRobotsTxt:
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        file:
          format: base64
          type: string
        cacheControlHeader:
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfStaticHeader:
      description: The static header injection policy allows you to insert headers
        into the CDN request and response processor.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        clientRequest:
          description: This is the static HTTP header you want inserted into the CDN
            request.
          type: string
        http:
          description: This is the static HTTP header you want inserted into the CDN
            response.
          type: string
        originPull:
          description: This is the HTTP header you want inserted into the origin pull
            request.
          type: string
        enabled:
          format: boolean
          type: boolean
        methodFilter:
          description: String of values delimited by a ',' character.
          type: string
        pathFilter:
          description: String of values delimited by a ',' character.
          type: string
        headerFilter:
          description: String of values delimited by a ',' character.
          type: string
      type: object
    custconfTimePseudoStreaming:
      description: The HTTP pseudo-streaming policy enables Flash based video players
        to support seeking to random locations within a MP4 or FLV file without having
        to download the entire video. Flash players such as Flowplayer and JWPlayer
        can be configured to send a query string parameter that indicates to the server
        the time offset the user advanced the video to. Typically a query string parameter
        called "start" is used by these players.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        jumpToTimeStartParam:
          description: The name of the query string parameter that indicates to the
            CDN the specific time interval of the video that is being requested.
          type: string
        jumpToTimeEndParam:
          description: The name of the query string parameter that indicates to the
            CDN the end time of the video that should be returned.
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    custconfVHost:
      description: A hostname policy allows you to specify an alternate domain name
        that you want to use to access content from your CDN container.
      properties:
        id:
          description: This is used by the API to perform conflict checking
          type: string
        domain:
          description: 'This is the hostname you want to enable in this policy. Note:
            You must configure your container''s CNAME record with your DNS provider
            to enable this hostname to deliver content.'
          type: string
        enabled:
          format: boolean
          type: boolean
      type: object
    deliveryAWSS3Origin:
      description: An AWS S3 bucket origin
      example:
        bucketRegion: bucketRegion
        bucketName: bucketName
        authentication:
          s3:
            secretKey: secretKey
            accessKey: accessKey
          basic:
            password: password
            username: username
      properties:
        bucketName:
          description: The origin bucket's name
          type: string
        bucketRegion:
          description: The origin bucket's region
          type: string
        authentication:
          $ref: '#/components/schemas/deliveryOriginAuthentication'
      type: object
    deliveryBasicAuthentication:
      description: Basic HTTP authentication
      example:
        password: password
        username: username
      properties:
        username:
          description: The username to be used when authenticating with the origin.
          type: string
        password:
          description: The password to be used when authenticating with the origin.
          type: string
      type: object
    deliveryConnectScopeToOriginRequest:
      properties:
        origin:
          $ref: '#/components/schemas/deliveryConnectScopeToOriginRequestOrigin'
        priority:
          description: |-
            The origin's priority to the scope

            If more than one origin powers a CDN scope, then the one with the lower priority number takes higher precedence. When there is an origin already in place, the following rules are followed:

            - If an origin ID is provided, then the current origin at that priority is disconnected in favor of the new one.
            - If an origin is provided and the current origin at the given priority is dedicated, then the origin is updated in place.
            - If an origin is provided and no dedicated origin exists, the origin is created and connected to the scope.
          format: int32
          type: integer
        originId:
          description: |-
            The ID of an existing origin to associate with a scope

            This is useful for connecting to a shared origin.
          type: string
      type: object
    deliveryConnectScopeToOriginRequestOrigin:
      description: A new origin
      properties:
        http:
          $ref: '#/components/schemas/deliveryHTTPOrigin'
        stackpathStorage:
          $ref: '#/components/schemas/deliveryStackPathStorageOrigin'
        s3Storage:
          $ref: '#/components/schemas/deliveryAWSS3Origin'
        googleCloudStorage:
          $ref: '#/components/schemas/deliveryGoogleStorageOrigin'
      type: object
    deliveryConnectScopeToOriginResponse:
      description: The response from a request to associate an origin with a CDN site
        scope
      example:
        scopeOrigin:
          origin:
            dedicated: true
            stackpathStorage:
              bucketRegion: bucketRegion
              bucketName: bucketName
              authentication:
                s3:
                  secretKey: secretKey
                  accessKey: accessKey
                basic:
                  password: password
                  username: username
            googleCloudStorage:
              bucketName: bucketName
            stackId: stackId
            siteId: siteId
            http:
              securePort: 6
              path: path
              hostname: hostname
              verifyCertificate: true
              port: 0
              certificateCommonName: certificateCommonName
              authentication:
                s3:
                  secretKey: secretKey
                  accessKey: accessKey
                basic:
                  password: password
                  username: username
            s3Storage:
              bucketRegion: bucketRegion
              bucketName: bucketName
              authentication:
                s3:
                  secretKey: secretKey
                  accessKey: accessKey
                basic:
                  password: password
                  username: username
            id: id
          priority: 0
      properties:
        scopeOrigin:
          $ref: '#/components/schemas/deliveryScopeOrigin'
      type: object
    deliveryCreateSiteDeliveryDomainRequest:
      properties:
        domain:
          description: The delivery domain to add to a site
          type: string
      type: object
    deliveryCreateSiteDeliveryDomainResponse:
      description: The response from a request to add a hostname to a CDN site scope
      example:
        domain:
          domain: domain
          validatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        domain:
          $ref: '#/components/schemas/schemadeliveryDeliveryDomain'
      type: object
    deliveryCreateSiteRequest:
      properties:
        domain:
          description: The site's domain name
          type: string
        origin:
          $ref: '#/components/schemas/deliveryCreateSiteRequestOrigin'
        features:
          description: A list of features desired on the site
          items:
            $ref: '#/components/schemas/deliveryCreateSiteRequestFeature'
          type: array
        configuration:
          $ref: '#/components/schemas/custconfConfiguration'
      type: object
    deliveryCreateSiteRequestFeature:
      default: CDN
      enum:
      - CDN
      - WAF
      - SERVERLESS_EDGE_ENGINE
      type: string
    deliveryCreateSiteRequestOrigin:
      description: The site's origin
      properties:
        path:
          description: The path the site should request from the origin
          type: string
        hostname:
          description: The origin's fully-qualified domain name
          type: string
        port:
          description: The TCP port the site should connect to for HTTP requests
          format: int32
          type: integer
        securePort:
          description: The TCP port the site should connect to for HTTPS requests
          format: int32
          type: integer
        http:
          $ref: '#/components/schemas/deliveryHTTPOrigin'
        stackpathStorage:
          $ref: '#/components/schemas/deliveryStackPathStorageOrigin'
        s3Storage:
          $ref: '#/components/schemas/deliveryAWSS3Origin'
        googleCloudStorage:
          $ref: '#/components/schemas/deliveryGoogleStorageOrigin'
      type: object
    deliveryCreateSiteResponse:
      description: The response from a request to create a new site
      example:
        site:
          features:
          - null
          - null
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiUrls:
          - apiUrls
          - apiUrls
          stackId: stackId
          id: id
          label: label
          monitoring: true
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        site:
          $ref: '#/components/schemas/deliverySite'
      type: object
    deliveryEnableSiteWAFRequest:
      properties:
        apiUrls:
          description: A list of API URLs which receive different processing through
            the WAF than website requests
          items:
            type: string
          type: array
      type: object
    deliveryGetOriginResponse:
      description: The response with the requested origin
      example:
        origin:
          dedicated: true
          stackpathStorage:
            bucketRegion: bucketRegion
            bucketName: bucketName
            authentication:
              s3:
                secretKey: secretKey
                accessKey: accessKey
              basic:
                password: password
                username: username
          googleCloudStorage:
            bucketName: bucketName
          stackId: stackId
          siteId: siteId
          http:
            securePort: 6
            path: path
            hostname: hostname
            verifyCertificate: true
            port: 0
            certificateCommonName: certificateCommonName
            authentication:
              s3:
                secretKey: secretKey
                accessKey: accessKey
              basic:
                password: password
                username: username
          s3Storage:
            bucketRegion: bucketRegion
            bucketName: bucketName
            authentication:
              s3:
                secretKey: secretKey
                accessKey: accessKey
              basic:
                password: password
                username: username
          id: id
      properties:
        origin:
          $ref: '#/components/schemas/schemadeliveryOrigin'
      type: object
    deliveryGetOriginsResponse:
      description: The response from a request to retrieve all origins on a stack
      example:
        pageInfo:
          hasNextPage: true
          hasPreviousPage: true
          endCursor: endCursor
          totalCount: totalCount
          startCursor: startCursor
        results:
        - dedicated: true
          stackpathStorage:
            bucketRegion: bucketRegion
            bucketName: bucketName
            authentication:
              s3:
                secretKey: secretKey
                accessKey: accessKey
              basic:
                password: password
                username: username
          googleCloudStorage:
            bucketName: bucketName
          stackId: stackId
          siteId: siteId
          http:
            securePort: 6
            path: path
            hostname: hostname
            verifyCertificate: true
            port: 0
            certificateCommonName: certificateCommonName
            authentication:
              s3:
                secretKey: secretKey
                accessKey: accessKey
              basic:
                password: password
                username: username
          s3Storage:
            bucketRegion: bucketRegion
            bucketName: bucketName
            authentication:
              s3:
                secretKey: secretKey
                accessKey: accessKey
              basic:
                password: password
                username: username
          id: id
        - dedicated: true
          stackpathStorage:
            bucketRegion: bucketRegion
            bucketName: bucketName
            authentication:
              s3:
                secretKey: secretKey
                accessKey: accessKey
              basic:
                password: password
                username: username
          googleCloudStorage:
            bucketName: bucketName
          stackId: stackId
          siteId: siteId
          http:
            securePort: 6
            path: path
            hostname: hostname
            verifyCertificate: true
            port: 0
            certificateCommonName: certificateCommonName
            authentication:
              s3:
                secretKey: secretKey
                accessKey: accessKey
              basic:
                password: password
                username: username
          s3Storage:
            bucketRegion: bucketRegion
            bucketName: bucketName
            authentication:
              s3:
                secretKey: secretKey
                accessKey: accessKey
              basic:
                password: password
                username: username
          id: id
      properties:
        pageInfo:
          $ref: '#/components/schemas/paginationPageInfo'
        results:
          description: The requested origins
          items:
            $ref: '#/components/schemas/schemadeliveryOrigin'
          type: array
      type: object
    deliveryGetScopeOriginsResponse:
      description: The response from a request to retrieve a site scope's origins
      example:
        pageInfo:
          hasNextPage: true
          hasPreviousPage: true
          endCursor: endCursor
          totalCount: totalCount
          startCursor: startCursor
        results:
        - origin:
            dedicated: true
            stackpathStorage:
              bucketRegion: bucketRegion
              bucketName: bucketName
              authentication:
                s3:
                  secretKey: secretKey
                  accessKey: accessKey
                basic:
                  password: password
                  username: username
            googleCloudStorage:
              bucketName: bucketName
            stackId: stackId
            siteId: siteId
            http:
              securePort: 6
              path: path
              hostname: hostname
              verifyCertificate: true
              port: 0
              certificateCommonName: certificateCommonName
              authentication:
                s3:
                  secretKey: secretKey
                  accessKey: accessKey
                basic:
                  password: password
                  username: username
            s3Storage:
              bucketRegion: bucketRegion
              bucketName: bucketName
              authentication:
                s3:
                  secretKey: secretKey
                  accessKey: accessKey
                basic:
                  password: password
                  username: username
            id: id
          priority: 0
        - origin:
            dedicated: true
            stackpathStorage:
              bucketRegion: bucketRegion
              bucketName: bucketName
              authentication:
                s3:
                  secretKey: secretKey
                  accessKey: accessKey
                basic:
                  password: password
                  username: username
            googleCloudStorage:
              bucketName: bucketName
            stackId: stackId
            siteId: siteId
            http:
              securePort: 6
              path: path
              hostname: hostname
              verifyCertificate: true
              port: 0
              certificateCommonName: certificateCommonName
              authentication:
                s3:
                  secretKey: secretKey
                  accessKey: accessKey
                basic:
                  password: password
                  username: username
            s3Storage:
              bucketRegion: bucketRegion
              bucketName: bucketName
              authentication:
                s3:
                  secretKey: secretKey
                  accessKey: accessKey
                basic:
                  password: password
                  username: username
            id: id
          priority: 0
      properties:
        pageInfo:
          $ref: '#/components/schemas/paginationPageInfo'
        results:
          description: The requested scope's origins
          items:
            $ref: '#/components/schemas/deliveryScopeOrigin'
          type: array
      type: object
    deliveryGetSiteDeliveryDomainsResponse:
      description: The response from a request to retrieve a site's associated delivery
        domains
      example:
        pageInfo:
          hasNextPage: true
          hasPreviousPage: true
          endCursor: endCursor
          totalCount: totalCount
          startCursor: startCursor
        results:
        - domain: domain
          validatedAt: 2000-01-23T04:56:07.000+00:00
        - domain: domain
          validatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        pageInfo:
          $ref: '#/components/schemas/paginationPageInfo'
        results:
          description: The requested site delivery domains
          items:
            $ref: '#/components/schemas/schemadeliveryDeliveryDomain'
          type: array
      type: object
    deliveryGetSiteResponse:
      description: The response from a request to retrieve a single site
      example:
        site:
          features:
          - null
          - null
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiUrls:
          - apiUrls
          - apiUrls
          stackId: stackId
          id: id
          label: label
          monitoring: true
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        site:
          $ref: '#/components/schemas/deliverySite'
      type: object
    deliveryGetSitesResponse:
      description: The response from a request to retrieve a stack's sites
      example:
        pageInfo:
          hasNextPage: true
          hasPreviousPage: true
          endCursor: endCursor
          totalCount: totalCount
          startCursor: startCursor
        results:
        - features:
          - null
          - null
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiUrls:
          - apiUrls
          - apiUrls
          stackId: stackId
          id: id
          label: label
          monitoring: true
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - features:
          - null
          - null
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiUrls:
          - apiUrls
          - apiUrls
          stackId: stackId
          id: id
          label: label
          monitoring: true
          status: status
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        pageInfo:
          $ref: '#/components/schemas/paginationPageInfo'
        results:
          description: The requested sites
          items:
            $ref: '#/components/schemas/deliverySite'
          type: array
      type: object
    deliveryGoogleStorageOrigin:
      description: A Google storage bucket origin
      example:
        bucketName: bucketName
      properties:
        bucketName:
          description: The origin bucket's name
          type: string
      type: object
    deliveryHTTPOrigin:
      description: An HTTP origin
      example:
        securePort: 6
        path: path
        hostname: hostname
        verifyCertificate: true
        port: 0
        certificateCommonName: certificateCommonName
        authentication:
          s3:
            secretKey: secretKey
            accessKey: accessKey
          basic:
            password: password
            username: username
      properties:
        path:
          description: The origin's HTTP request path
          type: string
        hostname:
          description: The origin's HTTP request hostname
          type: string
        port:
          description: |-
            The origin's HTTP request port

            Set this to 0 to remove this value
          format: int32
          type: integer
        securePort:
          description: |-
            The origin's HTTPS request port

            Set this to 0 to remove this value
          format: int32
          type: integer
        authentication:
          $ref: '#/components/schemas/deliveryOriginAuthentication'
        verifyCertificate:
          description: Verify the origin's SSL certificate when requesting from the
            origin
          format: boolean
          type: boolean
        certificateCommonName:
          description: The CommonName to validate SSL origin requests from. This value
            needs to be provided when enabling `verify_certificate`.
          type: string
      type: object
    deliveryOriginAuthentication:
      description: An origin's authentication method
      example:
        s3:
          secretKey: secretKey
          accessKey: accessKey
        basic:
          password: password
          username: username
      properties:
        basic:
          $ref: '#/components/schemas/deliveryBasicAuthentication'
        s3:
          $ref: '#/components/schemas/deliveryS3Authentication'
      type: object
    deliveryS3Authentication:
      description: Secret key authentication
      example:
        secretKey: secretKey
        accessKey: accessKey
      properties:
        accessKey:
          description: The access key
          type: string
        secretKey:
          description: The secret key
          type: string
      type: object
    deliveryScopeOrigin:
      description: A relationship between a site's configuration scope and an origin
      example:
        origin:
          dedicated: true
          stackpathStorage:
            bucketRegion: bucketRegion
            bucketName: bucketName
            authentication:
              s3:
                secretKey: secretKey
                accessKey: accessKey
              basic:
                password: password
                username: username
          googleCloudStorage:
            bucketName: bucketName
          stackId: stackId
          siteId: siteId
          http:
            securePort: 6
            path: path
            hostname: hostname
            verifyCertificate: true
            port: 0
            certificateCommonName: certificateCommonName
            authentication:
              s3:
                secretKey: secretKey
                accessKey: accessKey
              basic:
                password: password
                username: username
          s3Storage:
            bucketRegion: bucketRegion
            bucketName: bucketName
            authentication:
              s3:
                secretKey: secretKey
                accessKey: accessKey
              basic:
                password: password
                username: username
          id: id
        priority: 0
      properties:
        priority:
          description: |-
            An origin's priority to its site scope

            If a CDN scope is powered by more than one origin, then the one with the lower priority number takes higher precedence.
          format: int32
          type: integer
        origin:
          $ref: '#/components/schemas/schemadeliveryOrigin'
      type: object
    deliverySite:
      example:
        features:
        - null
        - null
        createdAt: 2000-01-23T04:56:07.000+00:00
        apiUrls:
        - apiUrls
        - apiUrls
        stackId: stackId
        id: id
        label: label
        monitoring: true
        status: status
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: A site's unique identifier
          type: string
        stackId:
          description: The ID of the stack to which a site belongs
          type: string
        label:
          description: The site's name
          type: string
        status:
          description: The site's status
          type: string
        features:
          description: |-
            A site's features

            Site features control how its content is delivered to end users.
          items:
            $ref: '#/components/schemas/deliverySiteFeature'
          type: array
        createdAt:
          description: The date a site was created
          format: date-time
          type: string
        updatedAt:
          description: The date a site was last updated
          format: date-time
          type: string
        apiUrls:
          description: A list of API URLs which receive different processing through
            the WAF than website requests
          items:
            type: string
          type: array
        monitoring:
          description: |-
            Whether or not a site's WAF service is in a monitor state

            Sites in WAF monitoring mode accept incoming requests and log but take no action on policy and rule violations.
          format: boolean
          type: boolean
      type: object
    deliverySiteFeature:
      default: UNKNOWN
      description: |-
        A site feature

        A site's feature determines how StackPath delivers content to incoming HTTP(S) requests

         - UNKNOWN: StackPath is unable to determine a site's feature
         - CDN: A site has CDN caching
         - WAF: A site has WAF protection
         - API: A site has API-specific protections
         - SERVERLESS_EDGE_ENGINE: A site can serve EdgeEngine serverless scripts
      enum:
      - UNKNOWN
      - CDN
      - WAF
      - SERVERLESS_EDGE_ENGINE
      type: string
    deliveryStackPathStorageOrigin:
      description: A StackPath storage bucket origin
      example:
        bucketRegion: bucketRegion
        bucketName: bucketName
        authentication:
          s3:
            secretKey: secretKey
            accessKey: accessKey
          basic:
            password: password
            username: username
      properties:
        bucketName:
          description: The origin bucket's name
          type: string
        bucketRegion:
          description: The origin bucket's region
          type: string
        authentication:
          $ref: '#/components/schemas/deliveryOriginAuthentication'
      type: object
    deliveryUpdateOriginRequest:
      properties:
        http:
          $ref: '#/components/schemas/deliveryHTTPOrigin'
        stackpathStorage:
          $ref: '#/components/schemas/deliveryStackPathStorageOrigin'
        s3Storage:
          $ref: '#/components/schemas/deliveryAWSS3Origin'
        googleCloudStorage:
          $ref: '#/components/schemas/deliveryGoogleStorageOrigin'
      type: object
    deliveryUpdateOriginResponse:
      description: The response from a request to update an origin
      example:
        origin:
          dedicated: true
          stackpathStorage:
            bucketRegion: bucketRegion
            bucketName: bucketName
            authentication:
              s3:
                secretKey: secretKey
                accessKey: accessKey
              basic:
                password: password
                username: username
          googleCloudStorage:
            bucketName: bucketName
          stackId: stackId
          siteId: siteId
          http:
            securePort: 6
            path: path
            hostname: hostname
            verifyCertificate: true
            port: 0
            certificateCommonName: certificateCommonName
            authentication:
              s3:
                secretKey: secretKey
                accessKey: accessKey
              basic:
                password: password
                username: username
          s3Storage:
            bucketRegion: bucketRegion
            bucketName: bucketName
            authentication:
              s3:
                secretKey: secretKey
                accessKey: accessKey
              basic:
                password: password
                username: username
          id: id
      properties:
        origin:
          $ref: '#/components/schemas/schemadeliveryOrigin'
      type: object
    paginationPageInfo:
      description: |-
        Information about a paginated response

        This is modeled after the GraphQL Relay spec to support both cursor based pagination and traditional offset based pagination.
      example:
        hasNextPage: true
        hasPreviousPage: true
        endCursor: endCursor
        totalCount: totalCount
        startCursor: startCursor
      properties:
        totalCount:
          description: The total number of items in the dataset
          type: string
        hasPreviousPage:
          description: Whether or not a previous page of data exists
          format: boolean
          type: boolean
        hasNextPage:
          description: Whether or not another page of data is available
          format: boolean
          type: boolean
        startCursor:
          description: The cursor for the first item in the set of data returned
          type: string
        endCursor:
          description: The cursor for the last item in the set of data returned
          type: string
      type: object
    prometheusMetrics:
      description: A collection of metrics
      example:
        data:
          vector:
            results:
            - metric:
                key: metric
              value:
                unixTime: unixTime
                value: value
            - metric:
                key: metric
              value:
                unixTime: unixTime
                value: value
          matrix:
            results:
            - metric:
                key: metric
              values:
              - unixTime: unixTime
                value: value
              - unixTime: unixTime
                value: value
            - metric:
                key: metric
              values:
              - unixTime: unixTime
                value: value
              - unixTime: unixTime
                value: value
        errorType: errorType
        warnings:
        - warnings
        - warnings
        error: error
      properties:
        status:
          $ref: '#/components/schemas/prometheusMetricsStatus'
        data:
          $ref: '#/components/schemas/MetricsData'
        errorType:
          description: The type of error encountered when querying for metrics
          type: string
        error:
          description: The error encountered when querying for metrics
          type: string
        warnings:
          description: Warnings encountered when querying for metrics
          items:
            type: string
          type: array
      type: object
    prometheusMetricsStatus:
      default: SUCCESS
      description: A metrics query's resulting status
      enum:
      - SUCCESS
      - ERROR
      type: string
    schemadeliveryDeliveryDomain:
      description: An individual delivery domain
      example:
        domain: domain
        validatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        domain:
          description: A site's domain name
          type: string
        validatedAt:
          description: The date the domain was validated to be pointing to us
          format: date-time
          type: string
      type: object
    schemadeliveryOrigin:
      description: |-
        A CDN site's origin

        Origins are the original sources of the data that is cached by the CDN on request.
      example:
        dedicated: true
        stackpathStorage:
          bucketRegion: bucketRegion
          bucketName: bucketName
          authentication:
            s3:
              secretKey: secretKey
              accessKey: accessKey
            basic:
              password: password
              username: username
        googleCloudStorage:
          bucketName: bucketName
        stackId: stackId
        siteId: siteId
        http:
          securePort: 6
          path: path
          hostname: hostname
          verifyCertificate: true
          port: 0
          certificateCommonName: certificateCommonName
          authentication:
            s3:
              secretKey: secretKey
              accessKey: accessKey
            basic:
              password: password
              username: username
        s3Storage:
          bucketRegion: bucketRegion
          bucketName: bucketName
          authentication:
            s3:
              secretKey: secretKey
              accessKey: accessKey
            basic:
              password: password
              username: username
        id: id
      properties:
        id:
          description: An origin's unique identifier
          type: string
        stackId:
          description: The stack for which the origin belongs to
          type: string
        dedicated:
          description: |-
            Whether or not an origin is dedicated to a CDN site

            Dedicated origins cannot be used by any site other than that to which it is dedicated.
          format: boolean
          type: boolean
        siteId:
          description: The ID of the CDN site to which an origin is dedicated
          type: string
        http:
          $ref: '#/components/schemas/deliveryHTTPOrigin'
        stackpathStorage:
          $ref: '#/components/schemas/deliveryStackPathStorageOrigin'
        s3Storage:
          $ref: '#/components/schemas/deliveryAWSS3Origin'
        googleCloudStorage:
          $ref: '#/components/schemas/deliveryGoogleStorageOrigin'
      type: object
    stackpath.rpc.BadRequest:
      allOf:
      - $ref: '#/components/schemas/apiStatusDetail'
      - $ref: '#/components/schemas/stackpath_rpc_BadRequest_allOf'
    stackpath.rpc.BadRequest.FieldViolation:
      properties:
        field:
          type: string
        description:
          type: string
      type: object
    stackpath.rpc.Help:
      allOf:
      - $ref: '#/components/schemas/apiStatusDetail'
      - $ref: '#/components/schemas/stackpath_rpc_Help_allOf'
    stackpath.rpc.Help.Link:
      properties:
        description:
          type: string
        url:
          type: string
      type: object
    stackpath.rpc.LocalizedMessage:
      allOf:
      - $ref: '#/components/schemas/apiStatusDetail'
      - $ref: '#/components/schemas/stackpath_rpc_LocalizedMessage_allOf'
    stackpath.rpc.PreconditionFailure:
      allOf:
      - $ref: '#/components/schemas/apiStatusDetail'
      - $ref: '#/components/schemas/stackpath_rpc_PreconditionFailure_allOf'
    stackpath.rpc.PreconditionFailure.Violation:
      properties:
        type:
          type: string
        subject:
          type: string
        description:
          type: string
      type: object
    stackpath.rpc.QuotaFailure:
      allOf:
      - $ref: '#/components/schemas/apiStatusDetail'
      - $ref: '#/components/schemas/stackpath_rpc_QuotaFailure_allOf'
    stackpath.rpc.QuotaFailure.Violation:
      properties:
        subject:
          type: string
        description:
          type: string
      type: object
    stackpath.rpc.RequestInfo:
      allOf:
      - $ref: '#/components/schemas/apiStatusDetail'
      - $ref: '#/components/schemas/stackpath_rpc_RequestInfo_allOf'
    stackpath.rpc.ResourceInfo:
      allOf:
      - $ref: '#/components/schemas/apiStatusDetail'
      - $ref: '#/components/schemas/stackpath_rpc_ResourceInfo_allOf'
    stackpath.rpc.RetryInfo:
      allOf:
      - $ref: '#/components/schemas/apiStatusDetail'
      - $ref: '#/components/schemas/stackpath_rpc_RetryInfo_allOf'
    stackpathapiStatus:
      properties:
        code:
          format: int32
          type: integer
        details:
          items:
            $ref: '#/components/schemas/apiStatusDetail'
          type: array
        message:
          type: string
      type: object
    stackpath_rpc_BadRequest_allOf:
      properties:
        fieldViolations:
          items:
            $ref: '#/components/schemas/stackpath.rpc.BadRequest.FieldViolation'
          type: array
    stackpath_rpc_Help_allOf:
      properties:
        links:
          items:
            $ref: '#/components/schemas/stackpath.rpc.Help.Link'
          type: array
    stackpath_rpc_LocalizedMessage_allOf:
      properties:
        locale:
          type: string
        message:
          type: string
    stackpath_rpc_PreconditionFailure_allOf:
      properties:
        violations:
          items:
            $ref: '#/components/schemas/stackpath.rpc.PreconditionFailure.Violation'
          type: array
    stackpath_rpc_QuotaFailure_allOf:
      properties:
        violations:
          items:
            $ref: '#/components/schemas/stackpath.rpc.QuotaFailure.Violation'
          type: array
    stackpath_rpc_RequestInfo_allOf:
      properties:
        requestId:
          type: string
        servingData:
          type: string
    stackpath_rpc_ResourceInfo_allOf:
      properties:
        resourceType:
          type: string
        resourceName:
          type: string
        owner:
          type: string
        description:
          type: string
    stackpath_rpc_RetryInfo_allOf:
      properties:
        retryDelay:
          type: string
  securitySchemes:
    oauth2:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: https://gateway.stackpath.com/identity/v1/oauth2/token
      type: oauth2
x-explorer-enabled: true
x-proxy-enabled: true
x-samples-enabled: true
x-samples-languages:
- curl
- node
- ruby
- javascript
- python
