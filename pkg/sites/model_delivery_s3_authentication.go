/*
 * Sites
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package sites

import (
	"encoding/json"
)

// DeliveryS3Authentication Secret key authentication
type DeliveryS3Authentication struct {
	// The access key
	AccessKey *string `json:"accessKey,omitempty"`
	// The secret key
	SecretKey *string `json:"secretKey,omitempty"`
}

// NewDeliveryS3Authentication instantiates a new DeliveryS3Authentication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeliveryS3Authentication() *DeliveryS3Authentication {
	this := DeliveryS3Authentication{}
	return &this
}

// NewDeliveryS3AuthenticationWithDefaults instantiates a new DeliveryS3Authentication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeliveryS3AuthenticationWithDefaults() *DeliveryS3Authentication {
	this := DeliveryS3Authentication{}
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *DeliveryS3Authentication) GetAccessKey() string {
	if o == nil || o.AccessKey == nil {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryS3Authentication) GetAccessKeyOk() (*string, bool) {
	if o == nil || o.AccessKey == nil {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *DeliveryS3Authentication) HasAccessKey() bool {
	if o != nil && o.AccessKey != nil {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *DeliveryS3Authentication) SetAccessKey(v string) {
	o.AccessKey = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *DeliveryS3Authentication) GetSecretKey() string {
	if o == nil || o.SecretKey == nil {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryS3Authentication) GetSecretKeyOk() (*string, bool) {
	if o == nil || o.SecretKey == nil {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *DeliveryS3Authentication) HasSecretKey() bool {
	if o != nil && o.SecretKey != nil {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *DeliveryS3Authentication) SetSecretKey(v string) {
	o.SecretKey = &v
}

func (o DeliveryS3Authentication) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKey != nil {
		toSerialize["accessKey"] = o.AccessKey
	}
	if o.SecretKey != nil {
		toSerialize["secretKey"] = o.SecretKey
	}
	return json.Marshal(toSerialize)
}

type NullableDeliveryS3Authentication struct {
	value *DeliveryS3Authentication
	isSet bool
}

func (v NullableDeliveryS3Authentication) Get() *DeliveryS3Authentication {
	return v.value
}

func (v *NullableDeliveryS3Authentication) Set(val *DeliveryS3Authentication) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryS3Authentication) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryS3Authentication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryS3Authentication(val *DeliveryS3Authentication) *NullableDeliveryS3Authentication {
	return &NullableDeliveryS3Authentication{value: val, isSet: true}
}

func (v NullableDeliveryS3Authentication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryS3Authentication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
