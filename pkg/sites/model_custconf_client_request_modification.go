/*
 * Sites
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package sites

import (
	"encoding/json"
)

// CustconfClientRequestModification struct for CustconfClientRequestModification
type CustconfClientRequestModification struct {
	// This is used by the API to perform conflict checking
	Id *string `json:"id,omitempty"`
	UrlPattern *string `json:"urlPattern,omitempty"`
	UrlRewrite *string `json:"urlRewrite,omitempty"`
	HeaderPattern *string `json:"headerPattern,omitempty"`
	HeaderRewrite *string `json:"headerRewrite,omitempty"`
	// String of values delimited by a '|' character. This is the static HTTP header you want inserted into the CDN request. Start value with \"append:\", \"replace:\" or \"create:\" which defines if Header will be added, replaced or create if not exists. Default is append.
	AddHeaders *string `json:"addHeaders,omitempty"`
	FlowControl *CustconfClientRequestModificationFlowControlEnumWrapperValue `json:"flowControl,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	// String of values delimited by a ',' character.
	MethodFilter *string `json:"methodFilter,omitempty"`
	// String of values delimited by a ',' character.
	PathFilter *string `json:"pathFilter,omitempty"`
	// String of values delimited by a ',' character.
	HeaderFilter *string `json:"headerFilter,omitempty"`
	// String of values delimited by a ',' character.
	CookieFilter *string `json:"cookieFilter,omitempty"`
}

// NewCustconfClientRequestModification instantiates a new CustconfClientRequestModification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustconfClientRequestModification() *CustconfClientRequestModification {
	this := CustconfClientRequestModification{}
	var flowControl CustconfClientRequestModificationFlowControlEnumWrapperValue = "UNKNOWN"
	this.FlowControl = &flowControl
	return &this
}

// NewCustconfClientRequestModificationWithDefaults instantiates a new CustconfClientRequestModification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustconfClientRequestModificationWithDefaults() *CustconfClientRequestModification {
	this := CustconfClientRequestModification{}
	var flowControl CustconfClientRequestModificationFlowControlEnumWrapperValue = "UNKNOWN"
	this.FlowControl = &flowControl
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustconfClientRequestModification) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfClientRequestModification) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustconfClientRequestModification) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CustconfClientRequestModification) SetId(v string) {
	o.Id = &v
}

// GetUrlPattern returns the UrlPattern field value if set, zero value otherwise.
func (o *CustconfClientRequestModification) GetUrlPattern() string {
	if o == nil || o.UrlPattern == nil {
		var ret string
		return ret
	}
	return *o.UrlPattern
}

// GetUrlPatternOk returns a tuple with the UrlPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfClientRequestModification) GetUrlPatternOk() (*string, bool) {
	if o == nil || o.UrlPattern == nil {
		return nil, false
	}
	return o.UrlPattern, true
}

// HasUrlPattern returns a boolean if a field has been set.
func (o *CustconfClientRequestModification) HasUrlPattern() bool {
	if o != nil && o.UrlPattern != nil {
		return true
	}

	return false
}

// SetUrlPattern gets a reference to the given string and assigns it to the UrlPattern field.
func (o *CustconfClientRequestModification) SetUrlPattern(v string) {
	o.UrlPattern = &v
}

// GetUrlRewrite returns the UrlRewrite field value if set, zero value otherwise.
func (o *CustconfClientRequestModification) GetUrlRewrite() string {
	if o == nil || o.UrlRewrite == nil {
		var ret string
		return ret
	}
	return *o.UrlRewrite
}

// GetUrlRewriteOk returns a tuple with the UrlRewrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfClientRequestModification) GetUrlRewriteOk() (*string, bool) {
	if o == nil || o.UrlRewrite == nil {
		return nil, false
	}
	return o.UrlRewrite, true
}

// HasUrlRewrite returns a boolean if a field has been set.
func (o *CustconfClientRequestModification) HasUrlRewrite() bool {
	if o != nil && o.UrlRewrite != nil {
		return true
	}

	return false
}

// SetUrlRewrite gets a reference to the given string and assigns it to the UrlRewrite field.
func (o *CustconfClientRequestModification) SetUrlRewrite(v string) {
	o.UrlRewrite = &v
}

// GetHeaderPattern returns the HeaderPattern field value if set, zero value otherwise.
func (o *CustconfClientRequestModification) GetHeaderPattern() string {
	if o == nil || o.HeaderPattern == nil {
		var ret string
		return ret
	}
	return *o.HeaderPattern
}

// GetHeaderPatternOk returns a tuple with the HeaderPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfClientRequestModification) GetHeaderPatternOk() (*string, bool) {
	if o == nil || o.HeaderPattern == nil {
		return nil, false
	}
	return o.HeaderPattern, true
}

// HasHeaderPattern returns a boolean if a field has been set.
func (o *CustconfClientRequestModification) HasHeaderPattern() bool {
	if o != nil && o.HeaderPattern != nil {
		return true
	}

	return false
}

// SetHeaderPattern gets a reference to the given string and assigns it to the HeaderPattern field.
func (o *CustconfClientRequestModification) SetHeaderPattern(v string) {
	o.HeaderPattern = &v
}

// GetHeaderRewrite returns the HeaderRewrite field value if set, zero value otherwise.
func (o *CustconfClientRequestModification) GetHeaderRewrite() string {
	if o == nil || o.HeaderRewrite == nil {
		var ret string
		return ret
	}
	return *o.HeaderRewrite
}

// GetHeaderRewriteOk returns a tuple with the HeaderRewrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfClientRequestModification) GetHeaderRewriteOk() (*string, bool) {
	if o == nil || o.HeaderRewrite == nil {
		return nil, false
	}
	return o.HeaderRewrite, true
}

// HasHeaderRewrite returns a boolean if a field has been set.
func (o *CustconfClientRequestModification) HasHeaderRewrite() bool {
	if o != nil && o.HeaderRewrite != nil {
		return true
	}

	return false
}

// SetHeaderRewrite gets a reference to the given string and assigns it to the HeaderRewrite field.
func (o *CustconfClientRequestModification) SetHeaderRewrite(v string) {
	o.HeaderRewrite = &v
}

// GetAddHeaders returns the AddHeaders field value if set, zero value otherwise.
func (o *CustconfClientRequestModification) GetAddHeaders() string {
	if o == nil || o.AddHeaders == nil {
		var ret string
		return ret
	}
	return *o.AddHeaders
}

// GetAddHeadersOk returns a tuple with the AddHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfClientRequestModification) GetAddHeadersOk() (*string, bool) {
	if o == nil || o.AddHeaders == nil {
		return nil, false
	}
	return o.AddHeaders, true
}

// HasAddHeaders returns a boolean if a field has been set.
func (o *CustconfClientRequestModification) HasAddHeaders() bool {
	if o != nil && o.AddHeaders != nil {
		return true
	}

	return false
}

// SetAddHeaders gets a reference to the given string and assigns it to the AddHeaders field.
func (o *CustconfClientRequestModification) SetAddHeaders(v string) {
	o.AddHeaders = &v
}

// GetFlowControl returns the FlowControl field value if set, zero value otherwise.
func (o *CustconfClientRequestModification) GetFlowControl() CustconfClientRequestModificationFlowControlEnumWrapperValue {
	if o == nil || o.FlowControl == nil {
		var ret CustconfClientRequestModificationFlowControlEnumWrapperValue
		return ret
	}
	return *o.FlowControl
}

// GetFlowControlOk returns a tuple with the FlowControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfClientRequestModification) GetFlowControlOk() (*CustconfClientRequestModificationFlowControlEnumWrapperValue, bool) {
	if o == nil || o.FlowControl == nil {
		return nil, false
	}
	return o.FlowControl, true
}

// HasFlowControl returns a boolean if a field has been set.
func (o *CustconfClientRequestModification) HasFlowControl() bool {
	if o != nil && o.FlowControl != nil {
		return true
	}

	return false
}

// SetFlowControl gets a reference to the given CustconfClientRequestModificationFlowControlEnumWrapperValue and assigns it to the FlowControl field.
func (o *CustconfClientRequestModification) SetFlowControl(v CustconfClientRequestModificationFlowControlEnumWrapperValue) {
	o.FlowControl = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *CustconfClientRequestModification) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfClientRequestModification) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *CustconfClientRequestModification) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *CustconfClientRequestModification) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetMethodFilter returns the MethodFilter field value if set, zero value otherwise.
func (o *CustconfClientRequestModification) GetMethodFilter() string {
	if o == nil || o.MethodFilter == nil {
		var ret string
		return ret
	}
	return *o.MethodFilter
}

// GetMethodFilterOk returns a tuple with the MethodFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfClientRequestModification) GetMethodFilterOk() (*string, bool) {
	if o == nil || o.MethodFilter == nil {
		return nil, false
	}
	return o.MethodFilter, true
}

// HasMethodFilter returns a boolean if a field has been set.
func (o *CustconfClientRequestModification) HasMethodFilter() bool {
	if o != nil && o.MethodFilter != nil {
		return true
	}

	return false
}

// SetMethodFilter gets a reference to the given string and assigns it to the MethodFilter field.
func (o *CustconfClientRequestModification) SetMethodFilter(v string) {
	o.MethodFilter = &v
}

// GetPathFilter returns the PathFilter field value if set, zero value otherwise.
func (o *CustconfClientRequestModification) GetPathFilter() string {
	if o == nil || o.PathFilter == nil {
		var ret string
		return ret
	}
	return *o.PathFilter
}

// GetPathFilterOk returns a tuple with the PathFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfClientRequestModification) GetPathFilterOk() (*string, bool) {
	if o == nil || o.PathFilter == nil {
		return nil, false
	}
	return o.PathFilter, true
}

// HasPathFilter returns a boolean if a field has been set.
func (o *CustconfClientRequestModification) HasPathFilter() bool {
	if o != nil && o.PathFilter != nil {
		return true
	}

	return false
}

// SetPathFilter gets a reference to the given string and assigns it to the PathFilter field.
func (o *CustconfClientRequestModification) SetPathFilter(v string) {
	o.PathFilter = &v
}

// GetHeaderFilter returns the HeaderFilter field value if set, zero value otherwise.
func (o *CustconfClientRequestModification) GetHeaderFilter() string {
	if o == nil || o.HeaderFilter == nil {
		var ret string
		return ret
	}
	return *o.HeaderFilter
}

// GetHeaderFilterOk returns a tuple with the HeaderFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfClientRequestModification) GetHeaderFilterOk() (*string, bool) {
	if o == nil || o.HeaderFilter == nil {
		return nil, false
	}
	return o.HeaderFilter, true
}

// HasHeaderFilter returns a boolean if a field has been set.
func (o *CustconfClientRequestModification) HasHeaderFilter() bool {
	if o != nil && o.HeaderFilter != nil {
		return true
	}

	return false
}

// SetHeaderFilter gets a reference to the given string and assigns it to the HeaderFilter field.
func (o *CustconfClientRequestModification) SetHeaderFilter(v string) {
	o.HeaderFilter = &v
}

// GetCookieFilter returns the CookieFilter field value if set, zero value otherwise.
func (o *CustconfClientRequestModification) GetCookieFilter() string {
	if o == nil || o.CookieFilter == nil {
		var ret string
		return ret
	}
	return *o.CookieFilter
}

// GetCookieFilterOk returns a tuple with the CookieFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustconfClientRequestModification) GetCookieFilterOk() (*string, bool) {
	if o == nil || o.CookieFilter == nil {
		return nil, false
	}
	return o.CookieFilter, true
}

// HasCookieFilter returns a boolean if a field has been set.
func (o *CustconfClientRequestModification) HasCookieFilter() bool {
	if o != nil && o.CookieFilter != nil {
		return true
	}

	return false
}

// SetCookieFilter gets a reference to the given string and assigns it to the CookieFilter field.
func (o *CustconfClientRequestModification) SetCookieFilter(v string) {
	o.CookieFilter = &v
}

func (o CustconfClientRequestModification) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.UrlPattern != nil {
		toSerialize["urlPattern"] = o.UrlPattern
	}
	if o.UrlRewrite != nil {
		toSerialize["urlRewrite"] = o.UrlRewrite
	}
	if o.HeaderPattern != nil {
		toSerialize["headerPattern"] = o.HeaderPattern
	}
	if o.HeaderRewrite != nil {
		toSerialize["headerRewrite"] = o.HeaderRewrite
	}
	if o.AddHeaders != nil {
		toSerialize["addHeaders"] = o.AddHeaders
	}
	if o.FlowControl != nil {
		toSerialize["flowControl"] = o.FlowControl
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.MethodFilter != nil {
		toSerialize["methodFilter"] = o.MethodFilter
	}
	if o.PathFilter != nil {
		toSerialize["pathFilter"] = o.PathFilter
	}
	if o.HeaderFilter != nil {
		toSerialize["headerFilter"] = o.HeaderFilter
	}
	if o.CookieFilter != nil {
		toSerialize["cookieFilter"] = o.CookieFilter
	}
	return json.Marshal(toSerialize)
}

type NullableCustconfClientRequestModification struct {
	value *CustconfClientRequestModification
	isSet bool
}

func (v NullableCustconfClientRequestModification) Get() *CustconfClientRequestModification {
	return v.value
}

func (v *NullableCustconfClientRequestModification) Set(val *CustconfClientRequestModification) {
	v.value = val
	v.isSet = true
}

func (v NullableCustconfClientRequestModification) IsSet() bool {
	return v.isSet
}

func (v *NullableCustconfClientRequestModification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustconfClientRequestModification(val *CustconfClientRequestModification) *NullableCustconfClientRequestModification {
	return &NullableCustconfClientRequestModification{value: val, isSet: true}
}

func (v NullableCustconfClientRequestModification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustconfClientRequestModification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
