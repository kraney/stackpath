/*
 * Stacks
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package stacks

import (
	"encoding/json"
)

// StackTestIAMPermissionsResponse A response from a request to test permissions on a StackPath account
type StackTestIAMPermissionsResponse struct {
	// The ID of the StackPath stack the permissions were tested on
	StackId *string `json:"stackId,omitempty"`
	// The set of permissions that the calling user does have on the stack
	Permissions *[]string `json:"permissions,omitempty"`
}

// NewStackTestIAMPermissionsResponse instantiates a new StackTestIAMPermissionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStackTestIAMPermissionsResponse() *StackTestIAMPermissionsResponse {
	this := StackTestIAMPermissionsResponse{}
	return &this
}

// NewStackTestIAMPermissionsResponseWithDefaults instantiates a new StackTestIAMPermissionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStackTestIAMPermissionsResponseWithDefaults() *StackTestIAMPermissionsResponse {
	this := StackTestIAMPermissionsResponse{}
	return &this
}

// GetStackId returns the StackId field value if set, zero value otherwise.
func (o *StackTestIAMPermissionsResponse) GetStackId() string {
	if o == nil || o.StackId == nil {
		var ret string
		return ret
	}
	return *o.StackId
}

// GetStackIdOk returns a tuple with the StackId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackTestIAMPermissionsResponse) GetStackIdOk() (*string, bool) {
	if o == nil || o.StackId == nil {
		return nil, false
	}
	return o.StackId, true
}

// HasStackId returns a boolean if a field has been set.
func (o *StackTestIAMPermissionsResponse) HasStackId() bool {
	if o != nil && o.StackId != nil {
		return true
	}

	return false
}

// SetStackId gets a reference to the given string and assigns it to the StackId field.
func (o *StackTestIAMPermissionsResponse) SetStackId(v string) {
	o.StackId = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *StackTestIAMPermissionsResponse) GetPermissions() []string {
	if o == nil || o.Permissions == nil {
		var ret []string
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackTestIAMPermissionsResponse) GetPermissionsOk() (*[]string, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *StackTestIAMPermissionsResponse) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *StackTestIAMPermissionsResponse) SetPermissions(v []string) {
	o.Permissions = &v
}

func (o StackTestIAMPermissionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StackId != nil {
		toSerialize["stackId"] = o.StackId
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	return json.Marshal(toSerialize)
}

type NullableStackTestIAMPermissionsResponse struct {
	value *StackTestIAMPermissionsResponse
	isSet bool
}

func (v NullableStackTestIAMPermissionsResponse) Get() *StackTestIAMPermissionsResponse {
	return v.value
}

func (v *NullableStackTestIAMPermissionsResponse) Set(val *StackTestIAMPermissionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableStackTestIAMPermissionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableStackTestIAMPermissionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStackTestIAMPermissionsResponse(val *StackTestIAMPermissionsResponse) *NullableStackTestIAMPermissionsResponse {
	return &NullableStackTestIAMPermissionsResponse{value: val, isSet: true}
}

func (v NullableStackTestIAMPermissionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStackTestIAMPermissionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
