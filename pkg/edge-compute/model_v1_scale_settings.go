/*
 * Edge Compute
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package edge-compute

import (
	"encoding/json"
)

// V1ScaleSettings struct for V1ScaleSettings
type V1ScaleSettings struct {
	// Metrics to observe for invoking scaling events.
	Metrics *[]V1MetricSpec `json:"metrics,omitempty"`
}

// NewV1ScaleSettings instantiates a new V1ScaleSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ScaleSettings() *V1ScaleSettings {
	this := V1ScaleSettings{}
	return &this
}

// NewV1ScaleSettingsWithDefaults instantiates a new V1ScaleSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ScaleSettingsWithDefaults() *V1ScaleSettings {
	this := V1ScaleSettings{}
	return &this
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *V1ScaleSettings) GetMetrics() []V1MetricSpec {
	if o == nil || o.Metrics == nil {
		var ret []V1MetricSpec
		return ret
	}
	return *o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ScaleSettings) GetMetricsOk() (*[]V1MetricSpec, bool) {
	if o == nil || o.Metrics == nil {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *V1ScaleSettings) HasMetrics() bool {
	if o != nil && o.Metrics != nil {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given []V1MetricSpec and assigns it to the Metrics field.
func (o *V1ScaleSettings) SetMetrics(v []V1MetricSpec) {
	o.Metrics = &v
}

func (o V1ScaleSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Metrics != nil {
		toSerialize["metrics"] = o.Metrics
	}
	return json.Marshal(toSerialize)
}

type NullableV1ScaleSettings struct {
	value *V1ScaleSettings
	isSet bool
}

func (v NullableV1ScaleSettings) Get() *V1ScaleSettings {
	return v.value
}

func (v *NullableV1ScaleSettings) Set(val *V1ScaleSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ScaleSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ScaleSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ScaleSettings(val *V1ScaleSettings) *NullableV1ScaleSettings {
	return &NullableV1ScaleSettings{value: val, isSet: true}
}

func (v NullableV1ScaleSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ScaleSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
