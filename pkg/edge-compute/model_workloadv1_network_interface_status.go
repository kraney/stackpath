/*
 * Edge Compute
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package edge-compute

import (
	"encoding/json"
)

// Workloadv1NetworkInterfaceStatus Network interfaces that are attached to an instance in a workload
type Workloadv1NetworkInterfaceStatus struct {
	// A network interface's name
	Network *string `json:"network,omitempty"`
	// A network interface's primary IP address
	IpAddress *string `json:"ipAddress,omitempty"`
	// Additional IP addresses bound to a network interface
	IpAddressAliases *[]string `json:"ipAddressAliases,omitempty"`
	// A network interface's gateway address
	Gateway *string `json:"gateway,omitempty"`
}

// NewWorkloadv1NetworkInterfaceStatus instantiates a new Workloadv1NetworkInterfaceStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkloadv1NetworkInterfaceStatus() *Workloadv1NetworkInterfaceStatus {
	this := Workloadv1NetworkInterfaceStatus{}
	return &this
}

// NewWorkloadv1NetworkInterfaceStatusWithDefaults instantiates a new Workloadv1NetworkInterfaceStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkloadv1NetworkInterfaceStatusWithDefaults() *Workloadv1NetworkInterfaceStatus {
	this := Workloadv1NetworkInterfaceStatus{}
	return &this
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *Workloadv1NetworkInterfaceStatus) GetNetwork() string {
	if o == nil || o.Network == nil {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Workloadv1NetworkInterfaceStatus) GetNetworkOk() (*string, bool) {
	if o == nil || o.Network == nil {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *Workloadv1NetworkInterfaceStatus) HasNetwork() bool {
	if o != nil && o.Network != nil {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *Workloadv1NetworkInterfaceStatus) SetNetwork(v string) {
	o.Network = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *Workloadv1NetworkInterfaceStatus) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Workloadv1NetworkInterfaceStatus) GetIpAddressOk() (*string, bool) {
	if o == nil || o.IpAddress == nil {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *Workloadv1NetworkInterfaceStatus) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *Workloadv1NetworkInterfaceStatus) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetIpAddressAliases returns the IpAddressAliases field value if set, zero value otherwise.
func (o *Workloadv1NetworkInterfaceStatus) GetIpAddressAliases() []string {
	if o == nil || o.IpAddressAliases == nil {
		var ret []string
		return ret
	}
	return *o.IpAddressAliases
}

// GetIpAddressAliasesOk returns a tuple with the IpAddressAliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Workloadv1NetworkInterfaceStatus) GetIpAddressAliasesOk() (*[]string, bool) {
	if o == nil || o.IpAddressAliases == nil {
		return nil, false
	}
	return o.IpAddressAliases, true
}

// HasIpAddressAliases returns a boolean if a field has been set.
func (o *Workloadv1NetworkInterfaceStatus) HasIpAddressAliases() bool {
	if o != nil && o.IpAddressAliases != nil {
		return true
	}

	return false
}

// SetIpAddressAliases gets a reference to the given []string and assigns it to the IpAddressAliases field.
func (o *Workloadv1NetworkInterfaceStatus) SetIpAddressAliases(v []string) {
	o.IpAddressAliases = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *Workloadv1NetworkInterfaceStatus) GetGateway() string {
	if o == nil || o.Gateway == nil {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Workloadv1NetworkInterfaceStatus) GetGatewayOk() (*string, bool) {
	if o == nil || o.Gateway == nil {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *Workloadv1NetworkInterfaceStatus) HasGateway() bool {
	if o != nil && o.Gateway != nil {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *Workloadv1NetworkInterfaceStatus) SetGateway(v string) {
	o.Gateway = &v
}

func (o Workloadv1NetworkInterfaceStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Network != nil {
		toSerialize["network"] = o.Network
	}
	if o.IpAddress != nil {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if o.IpAddressAliases != nil {
		toSerialize["ipAddressAliases"] = o.IpAddressAliases
	}
	if o.Gateway != nil {
		toSerialize["gateway"] = o.Gateway
	}
	return json.Marshal(toSerialize)
}

type NullableWorkloadv1NetworkInterfaceStatus struct {
	value *Workloadv1NetworkInterfaceStatus
	isSet bool
}

func (v NullableWorkloadv1NetworkInterfaceStatus) Get() *Workloadv1NetworkInterfaceStatus {
	return v.value
}

func (v *NullableWorkloadv1NetworkInterfaceStatus) Set(val *Workloadv1NetworkInterfaceStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkloadv1NetworkInterfaceStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkloadv1NetworkInterfaceStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkloadv1NetworkInterfaceStatus(val *Workloadv1NetworkInterfaceStatus) *NullableWorkloadv1NetworkInterfaceStatus {
	return &NullableWorkloadv1NetworkInterfaceStatus{value: val, isSet: true}
}

func (v NullableWorkloadv1NetworkInterfaceStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkloadv1NetworkInterfaceStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
