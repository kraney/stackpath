/*
 * Edge Compute
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package edge-compute

import (
	"encoding/json"
)

// V1UpdateImageDeprecationResponse A response from a request to update image deprecation settings
type V1UpdateImageDeprecationResponse struct {
	Image *V1Image `json:"image,omitempty"`
}

// NewV1UpdateImageDeprecationResponse instantiates a new V1UpdateImageDeprecationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1UpdateImageDeprecationResponse() *V1UpdateImageDeprecationResponse {
	this := V1UpdateImageDeprecationResponse{}
	return &this
}

// NewV1UpdateImageDeprecationResponseWithDefaults instantiates a new V1UpdateImageDeprecationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1UpdateImageDeprecationResponseWithDefaults() *V1UpdateImageDeprecationResponse {
	this := V1UpdateImageDeprecationResponse{}
	return &this
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *V1UpdateImageDeprecationResponse) GetImage() V1Image {
	if o == nil || o.Image == nil {
		var ret V1Image
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1UpdateImageDeprecationResponse) GetImageOk() (*V1Image, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *V1UpdateImageDeprecationResponse) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given V1Image and assigns it to the Image field.
func (o *V1UpdateImageDeprecationResponse) SetImage(v V1Image) {
	o.Image = &v
}

func (o V1UpdateImageDeprecationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	return json.Marshal(toSerialize)
}

type NullableV1UpdateImageDeprecationResponse struct {
	value *V1UpdateImageDeprecationResponse
	isSet bool
}

func (v NullableV1UpdateImageDeprecationResponse) Get() *V1UpdateImageDeprecationResponse {
	return v.value
}

func (v *NullableV1UpdateImageDeprecationResponse) Set(val *V1UpdateImageDeprecationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1UpdateImageDeprecationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1UpdateImageDeprecationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1UpdateImageDeprecationResponse(val *V1UpdateImageDeprecationResponse) *NullableV1UpdateImageDeprecationResponse {
	return &NullableV1UpdateImageDeprecationResponse{value: val, isSet: true}
}

func (v NullableV1UpdateImageDeprecationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1UpdateImageDeprecationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
