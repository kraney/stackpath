/*
 * Edge Compute
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package edge-compute

import (
	"encoding/json"
)

// V1VirtualMachineSpec The specification for the desired state of a virtual machine in a workload
type V1VirtualMachineSpec struct {
	// The image to use for the virtual machine  This is in the format of <stack-slug>/<image-family>[:<image-tag>]. If the image tag portion is omitted, 'default' is assumed which is the most recently created, ready, and non-deprecated image of that slug. A set of common images is present on the 'stackpath-edge' stack.
	Image *string `json:"image,omitempty"`
	// Base64 encoded cloud-init compatible user-data
	UserData *string `json:"userData,omitempty"`
	// A string to network port key/value pair
	Ports *map[string]V1InstancePort `json:"ports,omitempty"`
	LivenessProbe *V1Probe `json:"livenessProbe,omitempty"`
	ReadinessProbe *V1Probe `json:"readinessProbe,omitempty"`
	Resources *V1ResourceRequirements `json:"resources,omitempty"`
	// Volumes to mount in the virtual machine
	VolumeMounts *[]V1InstanceVolumeMount `json:"volumeMounts,omitempty"`
}

// NewV1VirtualMachineSpec instantiates a new V1VirtualMachineSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1VirtualMachineSpec() *V1VirtualMachineSpec {
	this := V1VirtualMachineSpec{}
	return &this
}

// NewV1VirtualMachineSpecWithDefaults instantiates a new V1VirtualMachineSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1VirtualMachineSpecWithDefaults() *V1VirtualMachineSpec {
	this := V1VirtualMachineSpec{}
	return &this
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *V1VirtualMachineSpec) GetImage() string {
	if o == nil || o.Image == nil {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VirtualMachineSpec) GetImageOk() (*string, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *V1VirtualMachineSpec) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *V1VirtualMachineSpec) SetImage(v string) {
	o.Image = &v
}

// GetUserData returns the UserData field value if set, zero value otherwise.
func (o *V1VirtualMachineSpec) GetUserData() string {
	if o == nil || o.UserData == nil {
		var ret string
		return ret
	}
	return *o.UserData
}

// GetUserDataOk returns a tuple with the UserData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VirtualMachineSpec) GetUserDataOk() (*string, bool) {
	if o == nil || o.UserData == nil {
		return nil, false
	}
	return o.UserData, true
}

// HasUserData returns a boolean if a field has been set.
func (o *V1VirtualMachineSpec) HasUserData() bool {
	if o != nil && o.UserData != nil {
		return true
	}

	return false
}

// SetUserData gets a reference to the given string and assigns it to the UserData field.
func (o *V1VirtualMachineSpec) SetUserData(v string) {
	o.UserData = &v
}

// GetPorts returns the Ports field value if set, zero value otherwise.
func (o *V1VirtualMachineSpec) GetPorts() map[string]V1InstancePort {
	if o == nil || o.Ports == nil {
		var ret map[string]V1InstancePort
		return ret
	}
	return *o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VirtualMachineSpec) GetPortsOk() (*map[string]V1InstancePort, bool) {
	if o == nil || o.Ports == nil {
		return nil, false
	}
	return o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *V1VirtualMachineSpec) HasPorts() bool {
	if o != nil && o.Ports != nil {
		return true
	}

	return false
}

// SetPorts gets a reference to the given map[string]V1InstancePort and assigns it to the Ports field.
func (o *V1VirtualMachineSpec) SetPorts(v map[string]V1InstancePort) {
	o.Ports = &v
}

// GetLivenessProbe returns the LivenessProbe field value if set, zero value otherwise.
func (o *V1VirtualMachineSpec) GetLivenessProbe() V1Probe {
	if o == nil || o.LivenessProbe == nil {
		var ret V1Probe
		return ret
	}
	return *o.LivenessProbe
}

// GetLivenessProbeOk returns a tuple with the LivenessProbe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VirtualMachineSpec) GetLivenessProbeOk() (*V1Probe, bool) {
	if o == nil || o.LivenessProbe == nil {
		return nil, false
	}
	return o.LivenessProbe, true
}

// HasLivenessProbe returns a boolean if a field has been set.
func (o *V1VirtualMachineSpec) HasLivenessProbe() bool {
	if o != nil && o.LivenessProbe != nil {
		return true
	}

	return false
}

// SetLivenessProbe gets a reference to the given V1Probe and assigns it to the LivenessProbe field.
func (o *V1VirtualMachineSpec) SetLivenessProbe(v V1Probe) {
	o.LivenessProbe = &v
}

// GetReadinessProbe returns the ReadinessProbe field value if set, zero value otherwise.
func (o *V1VirtualMachineSpec) GetReadinessProbe() V1Probe {
	if o == nil || o.ReadinessProbe == nil {
		var ret V1Probe
		return ret
	}
	return *o.ReadinessProbe
}

// GetReadinessProbeOk returns a tuple with the ReadinessProbe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VirtualMachineSpec) GetReadinessProbeOk() (*V1Probe, bool) {
	if o == nil || o.ReadinessProbe == nil {
		return nil, false
	}
	return o.ReadinessProbe, true
}

// HasReadinessProbe returns a boolean if a field has been set.
func (o *V1VirtualMachineSpec) HasReadinessProbe() bool {
	if o != nil && o.ReadinessProbe != nil {
		return true
	}

	return false
}

// SetReadinessProbe gets a reference to the given V1Probe and assigns it to the ReadinessProbe field.
func (o *V1VirtualMachineSpec) SetReadinessProbe(v V1Probe) {
	o.ReadinessProbe = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *V1VirtualMachineSpec) GetResources() V1ResourceRequirements {
	if o == nil || o.Resources == nil {
		var ret V1ResourceRequirements
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VirtualMachineSpec) GetResourcesOk() (*V1ResourceRequirements, bool) {
	if o == nil || o.Resources == nil {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *V1VirtualMachineSpec) HasResources() bool {
	if o != nil && o.Resources != nil {
		return true
	}

	return false
}

// SetResources gets a reference to the given V1ResourceRequirements and assigns it to the Resources field.
func (o *V1VirtualMachineSpec) SetResources(v V1ResourceRequirements) {
	o.Resources = &v
}

// GetVolumeMounts returns the VolumeMounts field value if set, zero value otherwise.
func (o *V1VirtualMachineSpec) GetVolumeMounts() []V1InstanceVolumeMount {
	if o == nil || o.VolumeMounts == nil {
		var ret []V1InstanceVolumeMount
		return ret
	}
	return *o.VolumeMounts
}

// GetVolumeMountsOk returns a tuple with the VolumeMounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VirtualMachineSpec) GetVolumeMountsOk() (*[]V1InstanceVolumeMount, bool) {
	if o == nil || o.VolumeMounts == nil {
		return nil, false
	}
	return o.VolumeMounts, true
}

// HasVolumeMounts returns a boolean if a field has been set.
func (o *V1VirtualMachineSpec) HasVolumeMounts() bool {
	if o != nil && o.VolumeMounts != nil {
		return true
	}

	return false
}

// SetVolumeMounts gets a reference to the given []V1InstanceVolumeMount and assigns it to the VolumeMounts field.
func (o *V1VirtualMachineSpec) SetVolumeMounts(v []V1InstanceVolumeMount) {
	o.VolumeMounts = &v
}

func (o V1VirtualMachineSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if o.UserData != nil {
		toSerialize["userData"] = o.UserData
	}
	if o.Ports != nil {
		toSerialize["ports"] = o.Ports
	}
	if o.LivenessProbe != nil {
		toSerialize["livenessProbe"] = o.LivenessProbe
	}
	if o.ReadinessProbe != nil {
		toSerialize["readinessProbe"] = o.ReadinessProbe
	}
	if o.Resources != nil {
		toSerialize["resources"] = o.Resources
	}
	if o.VolumeMounts != nil {
		toSerialize["volumeMounts"] = o.VolumeMounts
	}
	return json.Marshal(toSerialize)
}

type NullableV1VirtualMachineSpec struct {
	value *V1VirtualMachineSpec
	isSet bool
}

func (v NullableV1VirtualMachineSpec) Get() *V1VirtualMachineSpec {
	return v.value
}

func (v *NullableV1VirtualMachineSpec) Set(val *V1VirtualMachineSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableV1VirtualMachineSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableV1VirtualMachineSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1VirtualMachineSpec(val *V1VirtualMachineSpec) *NullableV1VirtualMachineSpec {
	return &NullableV1VirtualMachineSpec{value: val, isSet: true}
}

func (v NullableV1VirtualMachineSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1VirtualMachineSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
