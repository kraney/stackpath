/*
 * Edge Compute
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package edge-compute

import (
	"encoding/json"
)

// V1TCPSocketAction Connect to an instance's TCP port
type V1TCPSocketAction struct {
	// The TCP port to quert
	Port *int32 `json:"port,omitempty"`
}

// NewV1TCPSocketAction instantiates a new V1TCPSocketAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1TCPSocketAction() *V1TCPSocketAction {
	this := V1TCPSocketAction{}
	return &this
}

// NewV1TCPSocketActionWithDefaults instantiates a new V1TCPSocketAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1TCPSocketActionWithDefaults() *V1TCPSocketAction {
	this := V1TCPSocketAction{}
	return &this
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *V1TCPSocketAction) GetPort() int32 {
	if o == nil || o.Port == nil {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TCPSocketAction) GetPortOk() (*int32, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *V1TCPSocketAction) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *V1TCPSocketAction) SetPort(v int32) {
	o.Port = &v
}

func (o V1TCPSocketAction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	return json.Marshal(toSerialize)
}

type NullableV1TCPSocketAction struct {
	value *V1TCPSocketAction
	isSet bool
}

func (v NullableV1TCPSocketAction) Get() *V1TCPSocketAction {
	return v.value
}

func (v *NullableV1TCPSocketAction) Set(val *V1TCPSocketAction) {
	v.value = val
	v.isSet = true
}

func (v NullableV1TCPSocketAction) IsSet() bool {
	return v.isSet
}

func (v *NullableV1TCPSocketAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1TCPSocketAction(val *V1TCPSocketAction) *NullableV1TCPSocketAction {
	return &NullableV1TCPSocketAction{value: val, isSet: true}
}

func (v NullableV1TCPSocketAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1TCPSocketAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
