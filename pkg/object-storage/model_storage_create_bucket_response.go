/*
 * Object Storage
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package object-storage

import (
	"encoding/json"
)

// StorageCreateBucketResponse The bucket created
type StorageCreateBucketResponse struct {
	Bucket *StorageBucket `json:"bucket,omitempty"`
}

// NewStorageCreateBucketResponse instantiates a new StorageCreateBucketResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStorageCreateBucketResponse() *StorageCreateBucketResponse {
	this := StorageCreateBucketResponse{}
	return &this
}

// NewStorageCreateBucketResponseWithDefaults instantiates a new StorageCreateBucketResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStorageCreateBucketResponseWithDefaults() *StorageCreateBucketResponse {
	this := StorageCreateBucketResponse{}
	return &this
}

// GetBucket returns the Bucket field value if set, zero value otherwise.
func (o *StorageCreateBucketResponse) GetBucket() StorageBucket {
	if o == nil || o.Bucket == nil {
		var ret StorageBucket
		return ret
	}
	return *o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageCreateBucketResponse) GetBucketOk() (*StorageBucket, bool) {
	if o == nil || o.Bucket == nil {
		return nil, false
	}
	return o.Bucket, true
}

// HasBucket returns a boolean if a field has been set.
func (o *StorageCreateBucketResponse) HasBucket() bool {
	if o != nil && o.Bucket != nil {
		return true
	}

	return false
}

// SetBucket gets a reference to the given StorageBucket and assigns it to the Bucket field.
func (o *StorageCreateBucketResponse) SetBucket(v StorageBucket) {
	o.Bucket = &v
}

func (o StorageCreateBucketResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bucket != nil {
		toSerialize["bucket"] = o.Bucket
	}
	return json.Marshal(toSerialize)
}

type NullableStorageCreateBucketResponse struct {
	value *StorageCreateBucketResponse
	isSet bool
}

func (v NullableStorageCreateBucketResponse) Get() *StorageCreateBucketResponse {
	return v.value
}

func (v *NullableStorageCreateBucketResponse) Set(val *StorageCreateBucketResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageCreateBucketResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageCreateBucketResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageCreateBucketResponse(val *StorageCreateBucketResponse) *NullableStorageCreateBucketResponse {
	return &NullableStorageCreateBucketResponse{value: val, isSet: true}
}

func (v NullableStorageCreateBucketResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageCreateBucketResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
