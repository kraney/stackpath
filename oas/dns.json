{
  "openapi": "3.0.0",
  "info": {
    "title": "DNS",
    "version": "1.0.0",
    "contact": {
      "name": "StackPath Support",
      "url": "https://support.stackpath.com/"
    }
  },
  "paths": {
    "/dns/v1/discovery/{domain}/provider_details": {
      "get": {
        "summary": "Get provider details",
        "operationId": "GetDiscoveryProviderDetails",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/zoneGetDiscoveryProviderDetailsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Returned when an unauthorized request is attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "default": {
            "description": "Default error structure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "domain",
            "description": "A hostname to scan for provider information",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Scanning"
        ],
        "description": "Scan a domain for DNS provider information"
      }
    },
    "/dns/v1/discovery/{domain}/records": {
      "post": {
        "summary": "Get resource records",
        "description": "Scan a domain for resource records. This call returns the records that StackPath is able to scan at the time of execution. It performs a best effort, but cannot guarantee all resource records were found.",
        "operationId": "ScanDomainForRecords",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/zoneScanDomainForRecordsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Returned when an unauthorized request is attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "default": {
            "description": "Default error structure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "domain",
            "description": "A hostname to scan for resource records",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanDomainForRecordsRequestProviderConfig"
              }
            }
          },
          "required": true
        },
        "tags": [
          "Scanning"
        ]
      }
    },
    "/dns/v1/stacks/{stack_id}/metrics": {
      "get": {
        "summary": "Get metrics",
        "operationId": "GetMetrics",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/prometheusMetrics"
                }
              }
            }
          },
          "401": {
            "description": "Returned when an unauthorized request is attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "default": {
            "description": "Default error structure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "stack_id",
            "description": "A stack ID or slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zone_id",
            "description": "An optional zone ID to retrieve metrics for",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pop",
            "description": "An optional StackPath POP code to retrieve metrics from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "description": "A lower bound date to search metrics for.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end_date",
            "description": "An upper bound date to search metrics for.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ZONE_QUERY_COUNT"
              ],
              "default": "ZONE_QUERY_COUNT"
            }
          },
          {
            "name": "granularity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "DEFAULT",
                "PT5M",
                "PT1H",
                "P1D"
              ],
              "default": "DEFAULT"
            }
          },
          {
            "name": "dimensions",
            "description": "The dimensions to aggregate metrics by. When empty or unset, defaults to all dimensions. If non-empty, this must always at least include the stack dimension.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "STACK",
                  "DOMAIN",
                  "POP"
                ]
              }
            }
          }
        ],
        "tags": [
          "Metrics"
        ]
      }
    },
    "/dns/v1/stacks/{stack_id}/zones": {
      "get": {
        "summary": "Get all zones",
        "operationId": "GetZones",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/zoneGetZonesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Returned when an unauthorized request is attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "default": {
            "description": "Default error structure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "stack_id",
            "description": "A stack ID or slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_request.first",
            "description": "The number of items desired.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_request.after",
            "description": "The cursor value after which data will be returned.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_request.filter",
            "description": "SQL-style constraint filters.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_request.sort_by",
            "description": "Sort the response by the given field.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Zones"
        ]
      },
      "post": {
        "summary": "Create a zone",
        "operationId": "CreateZone",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/zoneCreateZoneResponse"
                }
              }
            }
          },
          "401": {
            "description": "Returned when an unauthorized request is attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "default": {
            "description": "Default error structure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "stack_id",
            "description": "A stack ID or slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/zoneCreateZoneMessage"
              }
            }
          },
          "required": true
        },
        "tags": [
          "Zones"
        ]
      }
    },
    "/dns/v1/stacks/{stack_id}/zones/{zone_id}": {
      "get": {
        "summary": "Get a zone",
        "operationId": "GetZone",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/zoneGetZoneResponse"
                }
              }
            }
          },
          "401": {
            "description": "Returned when an unauthorized request is attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "default": {
            "description": "Default error structure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "stack_id",
            "description": "A stack ID or slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zone_id",
            "description": "A DNS zone ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Zones"
        ]
      },
      "delete": {
        "summary": "Delete a zone",
        "operationId": "DeleteZone",
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Returned when an unauthorized request is attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "default": {
            "description": "Default error structure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "stack_id",
            "description": "A stack ID or slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zone_id",
            "description": "A DNS zone ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Zones"
        ]
      },
      "put": {
        "summary": "Update a zone",
        "operationId": "UpdateZone",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/zoneUpdateZoneResponse"
                }
              }
            }
          },
          "401": {
            "description": "Returned when an unauthorized request is attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "default": {
            "description": "Default error structure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "stack_id",
            "description": "A stack ID or slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zone_id",
            "description": "A DNS zone ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/zoneUpdateZoneMessage"
              }
            }
          },
          "required": true
        },
        "tags": [
          "Zones"
        ]
      }
    },
    "/dns/v1/stacks/{stack_id}/zones/{zone_id}/bulk/records": {
      "post": {
        "summary": "Create or update multiple records",
        "description": "Existing resource records are updated while new records are created",
        "operationId": "BulkCreateOrUpdateZoneRecords",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/zoneBulkCreateOrUpdateZoneRecordsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Returned when an unauthorized request is attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "default": {
            "description": "Default error structure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "stack_id",
            "description": "A stack ID or slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zone_id",
            "description": "A DNS zone ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/zoneBulkCreateOrUpdateZoneRecordsRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "Resource Records"
        ]
      }
    },
    "/dns/v1/stacks/{stack_id}/zones/{zone_id}/bulk/records/delete": {
      "post": {
        "summary": "Delete multiple records",
        "operationId": "BulkDeleteZoneRecords",
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Returned when an unauthorized request is attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "default": {
            "description": "Default error structure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "stack_id",
            "description": "A stack ID or slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zone_id",
            "description": "A DNS zone ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/zoneBulkDeleteZoneRecordsMessage"
              }
            }
          },
          "required": true
        },
        "tags": [
          "Resource Records"
        ]
      }
    },
    "/dns/v1/stacks/{stack_id}/zones/{zone_id}/disable": {
      "post": {
        "summary": "Disable a zone",
        "operationId": "DisableZone",
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Returned when an unauthorized request is attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "default": {
            "description": "Default error structure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "stack_id",
            "description": "A stack ID or slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zone_id",
            "description": "A DNS zone ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Zones"
        ]
      }
    },
    "/dns/v1/stacks/{stack_id}/zones/{zone_id}/discover_nameservers": {
      "get": {
        "summary": "Get a zone's nameservers",
        "operationId": "GetNameserversForZone",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/zoneGetNameserversForZoneResponse"
                }
              }
            }
          },
          "401": {
            "description": "Returned when an unauthorized request is attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "default": {
            "description": "Default error structure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "stack_id",
            "description": "A stack ID or slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zone_id",
            "description": "A DNS zone ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Zones"
        ]
      }
    },
    "/dns/v1/stacks/{stack_id}/zones/{zone_id}/enable": {
      "post": {
        "summary": "Enable a zone",
        "operationId": "EnableZone",
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Returned when an unauthorized request is attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "default": {
            "description": "Default error structure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "stack_id",
            "description": "A stack ID or slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zone_id",
            "description": "A DNS zone ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Zones"
        ]
      }
    },
    "/dns/v1/stacks/{stack_id}/zones/{zone_id}/parse": {
      "post": {
        "summary": "Parse a zone file",
        "description": "Parse a BIND zone file. SOA records are not imported. StackPath nameserver records are automatically provided with the zone. Nameserver records are found at the root are not imported.",
        "operationId": "ParseRecordsFromZoneFile",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/zoneParseRecordsFromZoneFileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Returned when an unauthorized request is attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "default": {
            "description": "Default error structure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "stack_id",
            "description": "A stack ID or slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zone_id",
            "description": "A DNS zone ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/zoneParseRecordsFromZoneFileRequest"
              }
            }
          },
          "required": true
        },
        "tags": [
          "Zones"
        ]
      }
    },
    "/dns/v1/stacks/{stack_id}/zones/{zone_id}/records": {
      "get": {
        "summary": "Get all records",
        "operationId": "GetZoneRecords",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/zoneGetZoneRecordsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Returned when an unauthorized request is attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "default": {
            "description": "Default error structure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "stack_id",
            "description": "A stack ID or slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zone_id",
            "description": "A DNS zone ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_request.first",
            "description": "The number of items desired.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_request.after",
            "description": "The cursor value after which data will be returned.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_request.filter",
            "description": "SQL-style constraint filters.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_request.sort_by",
            "description": "Sort the response by the given field.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Resource Records"
        ]
      },
      "post": {
        "summary": "Create a record",
        "operationId": "CreateZoneRecord",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/zoneCreateZoneRecordResponse"
                }
              }
            }
          },
          "401": {
            "description": "Returned when an unauthorized request is attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "default": {
            "description": "Default error structure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "stack_id",
            "description": "A stack ID or slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zone_id",
            "description": "A DNS zone ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/zoneUpdateZoneRecordMessage"
        },
        "tags": [
          "Resource Records"
        ]
      }
    },
    "/dns/v1/stacks/{stack_id}/zones/{zone_id}/records/{zone_record_id}": {
      "get": {
        "summary": "Get a record",
        "operationId": "GetZoneRecord",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/zoneGetZoneRecordResponse"
                }
              }
            }
          },
          "401": {
            "description": "Returned when an unauthorized request is attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "default": {
            "description": "Default error structure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "stack_id",
            "description": "A stack ID or slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zone_id",
            "description": "A DNS zone ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zone_record_id",
            "description": "A DNS resource record ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Resource Records"
        ]
      },
      "delete": {
        "summary": "Delete a record",
        "operationId": "DeleteZoneRecord",
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Returned when an unauthorized request is attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "default": {
            "description": "Default error structure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "stack_id",
            "description": "A stack ID or slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zone_id",
            "description": "A DNS zone ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zone_record_id",
            "description": "A DNS resource record ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Resource Records"
        ]
      },
      "put": {
        "summary": "Update a record",
        "operationId": "UpdateZoneRecord",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/zoneUpdateZoneRecordResponse"
                }
              }
            }
          },
          "401": {
            "description": "Returned when an unauthorized request is attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "default": {
            "description": "Default error structure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "stack_id",
            "description": "A stack ID or slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zone_id",
            "description": "A DNS zone ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zone_record_id",
            "description": "A DNS resource record ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/zoneUpdateZoneRecordMessage"
        },
        "tags": [
          "Resource Records"
        ]
      },
      "patch": {
        "summary": "Replace a record",
        "operationId": "PatchZoneRecord",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/zoneUpdateZoneRecordResponse"
                }
              }
            }
          },
          "401": {
            "description": "Returned when an unauthorized request is attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "default": {
            "description": "Default error structure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "stack_id",
            "description": "A stack ID or slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zone_id",
            "description": "A DNS zone ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zone_record_id",
            "description": "A DNS resource record ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/zonePatchZoneRecordMessage"
              }
            }
          },
          "required": true
        },
        "tags": [
          "Resource Records"
        ]
      }
    },
    "/dns/v1/stacks/{stack_id}/zones/{zone_id}/repush": {
      "post": {
        "summary": "Publish a zone",
        "operationId": "PushFullZone",
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Returned when an unauthorized request is attempted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          },
          "default": {
            "description": "Default error structure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stackpathapiStatus"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "stack_id",
            "description": "A stack ID or slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zone_id",
            "description": "A DNS zone ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Zones"
        ],
        "description": "Re-push a zone to StackPath's DNS infrastructure"
      }
    }
  },
  "security": [
    {
      "oauth2": []
    }
  ],
  "externalDocs": {
    "description": "The StackPath API Reference",
    "url": "https://stackpath.dev/reference"
  },
  "x-explorer-enabled": true,
  "x-proxy-enabled": true,
  "x-samples-enabled": true,
  "x-samples-languages": [
    "curl",
    "node",
    "ruby",
    "javascript",
    "python"
  ],
  "servers": [
    {
      "url": "https://gateway.stackpath.com"
    }
  ],
  "components": {
    "requestBodies": {
      "zoneUpdateZoneRecordMessage": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/zoneUpdateZoneRecordMessage"
            }
          }
        },
        "required": true
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://gateway.stackpath.com/identity/v1/oauth2/token",
            "scopes": {}
          }
        }
      }
    },
    "schemas": {
      "DataMatrix": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataMatrixResult"
            },
            "description": "A data point's value"
          }
        },
        "description": "A set of time series containing a range of data points over time for each time series"
      },
      "DataMatrixResult": {
        "type": "object",
        "properties": {
          "metric": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The data points' labels"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataValue"
            },
            "description": "Time series data point values"
          }
        },
        "description": "Time series containing a range of data points over time for each time series"
      },
      "DataValue": {
        "type": "object",
        "properties": {
          "unixTime": {
            "type": "string",
            "description": "The time that a data point was recorded"
          },
          "value": {
            "type": "string",
            "description": "A data point's value"
          }
        },
        "description": "An individual metric data point"
      },
      "DataVector": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataVectorResult"
            },
            "description": "A data point's value"
          }
        },
        "description": "A set of time series containing a single sample for each time series, all sharing the same timestamp"
      },
      "DataVectorResult": {
        "type": "object",
        "properties": {
          "metric": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The data points' labels"
          },
          "value": {
            "$ref": "#/components/schemas/DataValue"
          }
        },
        "description": "Time series containing a single sample for each time series, all sharing the same timestamp"
      },
      "MetricsData": {
        "type": "object",
        "properties": {
          "matrix": {
            "$ref": "#/components/schemas/DataMatrix"
          },
          "vector": {
            "$ref": "#/components/schemas/DataVector"
          }
        },
        "description": "The data points in a metrics collection"
      },
      "ScanDomainForRecordsRequestProviderConfig": {
        "type": "object",
        "properties": {
          "dnsProvider": {
            "$ref": "#/components/schemas/zoneDnsProvider"
          },
          "authenticationUser": {
            "type": "string",
            "description": "The username required to authenticate with the DNS provider"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key or password required to authenticate with the DNS provider"
          }
        },
        "description": "Provider-specific configuration needed to scan a domain"
      },
      "apiStatusDetail": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string"
          }
        },
        "required": [
          "@type"
        ],
        "discriminator": {
          "propertyName": "@type"
        }
      },
      "paginationPageInfo": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "string",
            "description": "The total number of items in the dataset"
          },
          "hasPreviousPage": {
            "type": "boolean",
            "format": "boolean",
            "description": "Whether or not a previous page of data exists"
          },
          "hasNextPage": {
            "type": "boolean",
            "format": "boolean",
            "description": "Whether or not another page of data is available"
          },
          "startCursor": {
            "type": "string",
            "description": "The cursor for the first item in the set of data returned"
          },
          "endCursor": {
            "type": "string",
            "description": "The cursor for the last item in the set of data returned"
          }
        },
        "description": "Information about a paginated response\n\nThis is modeled after the GraphQL Relay spec to support both cursor based pagination and traditional offset based pagination."
      },
      "prometheusMetrics": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/prometheusMetricsStatus"
          },
          "data": {
            "$ref": "#/components/schemas/MetricsData"
          },
          "errorType": {
            "type": "string",
            "description": "The type of error encountered when querying for metrics"
          },
          "error": {
            "type": "string",
            "description": "The error encountered when querying for metrics"
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Warnings encountered when querying for metrics"
          }
        },
        "description": "A collection of metrics"
      },
      "prometheusMetricsStatus": {
        "type": "string",
        "enum": [
          "SUCCESS",
          "ERROR"
        ],
        "default": "SUCCESS",
        "description": "A metrics query's resulting status"
      },
      "stackpath.rpc.BadRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/apiStatusDetail"
          },
          {
            "type": "object",
            "properties": {
              "fieldViolations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/stackpath.rpc.BadRequest.FieldViolation"
                }
              }
            }
          }
        ]
      },
      "stackpath.rpc.BadRequest.FieldViolation": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "stackpath.rpc.Help": {
        "allOf": [
          {
            "$ref": "#/components/schemas/apiStatusDetail"
          },
          {
            "type": "object",
            "properties": {
              "links": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/stackpath.rpc.Help.Link"
                }
              }
            }
          }
        ]
      },
      "stackpath.rpc.Help.Link": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "stackpath.rpc.LocalizedMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/apiStatusDetail"
          },
          {
            "type": "object",
            "properties": {
              "locale": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            }
          }
        ]
      },
      "stackpath.rpc.PreconditionFailure": {
        "allOf": [
          {
            "$ref": "#/components/schemas/apiStatusDetail"
          },
          {
            "type": "object",
            "properties": {
              "violations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/stackpath.rpc.PreconditionFailure.Violation"
                }
              }
            }
          }
        ]
      },
      "stackpath.rpc.PreconditionFailure.Violation": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "stackpath.rpc.QuotaFailure": {
        "allOf": [
          {
            "$ref": "#/components/schemas/apiStatusDetail"
          },
          {
            "type": "object",
            "properties": {
              "violations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/stackpath.rpc.QuotaFailure.Violation"
                }
              }
            }
          }
        ]
      },
      "stackpath.rpc.QuotaFailure.Violation": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "stackpath.rpc.RequestInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/apiStatusDetail"
          },
          {
            "type": "object",
            "properties": {
              "requestId": {
                "type": "string"
              },
              "servingData": {
                "type": "string"
              }
            }
          }
        ]
      },
      "stackpath.rpc.ResourceInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/apiStatusDetail"
          },
          {
            "type": "object",
            "properties": {
              "resourceType": {
                "type": "string"
              },
              "resourceName": {
                "type": "string"
              },
              "owner": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          }
        ]
      },
      "stackpath.rpc.RetryInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/apiStatusDetail"
          },
          {
            "type": "object",
            "properties": {
              "retryDelay": {
                "type": "string"
              }
            }
          }
        ]
      },
      "stackpathapiStatus": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiStatusDetail"
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "zoneBulkCreateOrUpdateZoneRecordMessage": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "A zone record's name"
          },
          "type": {
            "$ref": "#/components/schemas/zoneRecordType"
          },
          "ttl": {
            "type": "integer",
            "format": "int32",
            "description": "A zone record's time to live\n\nA record's TTL is the number of seconds that the record should be cached by DNS resolvers. Use lower TTL values if you expect zone records to change often. Use higher TTL values for records that won't change to prevent extra DNS lookups by clients."
          },
          "data": {
            "type": "string",
            "description": "A zone record's value\n\nExpected data formats can vary depending on the zone record's type."
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "description": "A zone record's priority\n\nA resource record is replicated in StackPath's DNS infrastructure the number of times of the record's weight, giving it a more likely response to queries if a zone has records with the same name and type."
          },
          "labels": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A key/value pair of user-defined labels for a DNS zone record\n\nZone record labels are not processed by StackPath and are solely used for users to organize their DNS zones."
          },
          "id": {
            "type": "string",
            "description": "The ID of the resource record to update\n\nDo not provide an ID to create a new resource record"
          }
        },
        "description": "The fields needed to create or update a DNS zone resource record"
      },
      "zoneBulkCreateOrUpdateZoneRecordsRequest": {
        "type": "object",
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/zoneBulkCreateOrUpdateZoneRecordMessage"
            },
            "description": "The records to create or update in the DNS zone"
          }
        },
        "title": ""
      },
      "zoneBulkCreateOrUpdateZoneRecordsResponse": {
        "type": "object",
        "properties": {
          "zoneRecordIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the newly created and updated resource records"
          }
        },
        "description": "A response from a request to create or update multiple DNS zone resource records"
      },
      "zoneBulkDeleteZoneRecordsMessage": {
        "type": "object",
        "properties": {
          "zoneRecordIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the resource records to delete"
          }
        },
        "description": "The fields needed to delete multiple DNS zone resource records"
      },
      "zoneCreateZoneMessage": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "description": "The zone's domain name"
          },
          "labels": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A key/value pair of user-defined labels for a DNS zone\n\nZone labels are not processed by StackPath and are solely used for users to organize their DNS zones."
          },
          "useApexDomain": {
            "type": "boolean",
            "format": "boolean",
            "description": "Whether or not to create a zone for the apex domain only\n\nIf this is true and a domain with subdomains is provided, it will be stripped and only the root domain will be used for the zone. If this is false an error will be returned if it's not already an apex domain."
          }
        },
        "title": ""
      },
      "zoneCreateZoneRecordResponse": {
        "type": "object",
        "properties": {
          "record": {
            "$ref": "#/components/schemas/zoneZoneRecord"
          }
        },
        "description": "A response from a request to create a new DNS zone resource record"
      },
      "zoneCreateZoneResponse": {
        "type": "object",
        "properties": {
          "zone": {
            "$ref": "#/components/schemas/zoneZone"
          }
        },
        "description": "A response from a request to create a new DNS zone"
      },
      "zoneDnsProvider": {
        "type": "string",
        "enum": [
          "GENERAL",
          "CLOUDFLARE"
        ],
        "default": "GENERAL",
        "description": "The types of DNS providers that StackPath can detect\n\nDNS provider types can trigger different logic when StackPath scans a domain"
      },
      "zoneGetDiscoveryProviderDetailsResponse": {
        "type": "object",
        "properties": {
          "dnsProvider": {
            "$ref": "#/components/schemas/zoneDnsProvider"
          },
          "requiresAuthentication": {
            "type": "boolean",
            "format": "boolean",
            "description": "Whether or not the provider requires authentication to scan or modify the domain"
          },
          "nameservers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The domain's authoritative nameservers"
          }
        },
        "description": "A response from a request to scan a domain name for information about its provider"
      },
      "zoneGetNameserversForZoneResponse": {
        "type": "object",
        "properties": {
          "configured": {
            "type": "boolean",
            "format": "boolean",
            "description": "Whether or not all required name servers are configured in the zone"
          },
          "currentNameservers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The zone's currently configured nameservers"
          },
          "requiredNameservers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The nameservers required in the zone's configuration"
          }
        },
        "description": "A response from a request to retrieve information about a DNS zone's authoritative nameservers"
      },
      "zoneGetZoneRecordResponse": {
        "type": "object",
        "properties": {
          "record": {
            "$ref": "#/components/schemas/zoneZoneRecord"
          }
        },
        "description": "A response from a request to retrieve a DNS zone resource record"
      },
      "zoneGetZoneRecordsResponse": {
        "type": "object",
        "properties": {
          "pageInfo": {
            "$ref": "#/components/schemas/paginationPageInfo"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/zoneZoneRecord"
            },
            "description": "The requested resource records"
          }
        },
        "description": "A response from a request to retrieve a DNS zone's resource records"
      },
      "zoneGetZoneResponse": {
        "type": "object",
        "properties": {
          "zone": {
            "$ref": "#/components/schemas/zoneZone"
          }
        },
        "description": "A response from a request to retrieve a DNS zone"
      },
      "zoneGetZonesResponse": {
        "type": "object",
        "properties": {
          "pageInfo": {
            "$ref": "#/components/schemas/paginationPageInfo"
          },
          "zones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/zoneZone"
            },
            "description": "The requested DNS zones"
          }
        },
        "description": "A response from a request to retrieve all DNS zones in a stack"
      },
      "zoneImportZoneRecord": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "A zone record's name"
          },
          "type": {
            "$ref": "#/components/schemas/zoneRecordType"
          },
          "ttl": {
            "type": "integer",
            "format": "int32",
            "description": "A zone record's time to live\n\nA record's TTL is the number of seconds that the record should be cached by DNS resolvers. Use lower TTL values if you expect zone records to change often. Use higher TTL values for records that won't change to prevent extra DNS lookups by clients."
          },
          "data": {
            "type": "string",
            "description": "A zone record's value\n\nExpected data formats can vary depending on the zone record's type."
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "description": "A zone record's priority\n\nA resource record is replicated in StackPath's DNS infrastructure the number of times of the record's weight, giving it a more likely response to queries if a zone has records with the same name and type."
          }
        },
        "description": "A DNS zone resource record, as imported from a 3rd party provider"
      },
      "zoneParseRecordsFromZoneFileRequest": {
        "type": "object",
        "properties": {
          "zoneFile": {
            "type": "string",
            "format": "byte",
            "description": "Base64 encoded BIND zone file contents"
          }
        },
        "title": ""
      },
      "zoneParseRecordsFromZoneFileResponse": {
        "type": "object",
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/zoneImportZoneRecord"
            },
            "description": "The resource records StackPath was able to import from a zone file"
          }
        },
        "description": "A response from a request to parse records from a zone file"
      },
      "zonePatchZoneRecordMessage": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "A zone record's name"
          },
          "type": {
            "$ref": "#/components/schemas/zoneRecordType"
          },
          "ttl": {
            "type": "integer",
            "format": "int32",
            "description": "A zone record's time to live\n\nA record's TTL is the number of seconds that the record should be cached by DNS resolvers. Use lower TTL values if you expect zone records to change often. Use higher TTL values for records that won't change to prevent extra DNS lookups by clients."
          },
          "data": {
            "type": "string",
            "description": "A zone record's value\n\nExpected data formats can vary depending on the zone record's type."
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "description": "A zone record's priority\n\nA resource record is replicated in StackPath's DNS infrastructure the number of times of the record's weight, giving it a more likely response to queries if a zone has records with the same name and type."
          }
        },
        "title": ""
      },
      "zoneRecordType": {
        "type": "string",
        "enum": [
          "EMPTY",
          "A",
          "AAAA",
          "CNAME",
          "TXT",
          "MX",
          "SRV",
          "NS"
        ],
        "default": "EMPTY",
        "description": "The resource record types supported by StackPath\n\n- EMPTY: The resource record has no type\n - A: The resource record translates a host to an IPv4 address\n - AAAA: The resource record translates a host to an IPv6 address\n - CNAME: The resource record aliases one name to another\n - TXT: The resource record contains a descriptive string. Many applications use TXT records for configuration\n - MX: The resource record defines a mail exchanger for the given host\n - SRV: The resource record defines a service on the domain\n - NS: The resource record describes a nameserver that serves its domain's zone and records"
      },
      "zoneScanDomainForRecordsResponse": {
        "type": "object",
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/zoneImportZoneRecord"
            },
            "description": "The resource records StackPath was able to scan from the domain"
          }
        },
        "description": "A response from a request to scan a domain for its resource records"
      },
      "zoneUpdateZoneMessage": {
        "type": "object",
        "properties": {
          "labels": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A key/value pair of user-defined labels for a DNS zone\n\nZone labels are not processed by StackPath and are solely used for users to organize their DNS zones."
          }
        },
        "title": ""
      },
      "zoneUpdateZoneRecordMessage": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "A zone record's name"
          },
          "type": {
            "$ref": "#/components/schemas/zoneRecordType"
          },
          "ttl": {
            "type": "integer",
            "format": "int32",
            "description": "A zone record's time to live\n\nA record's TTL is the number of seconds that the record should be cached by DNS resolvers. Use lower TTL values if you expect zone records to change often. Use higher TTL values for records that won't change to prevent extra DNS lookups by clients."
          },
          "data": {
            "type": "string",
            "description": "A zone record's value\n\nExpected data formats can vary depending on the zone record's type."
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "description": "A zone record's priority\n\nA resource record is replicated in StackPath's DNS infrastructure the number of times of the record's weight, giving it a more likely response to queries if a zone has records with the same name and type."
          },
          "labels": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A key/value pair of user-defined labels for a DNS zone record\n\nZone record labels are not processed by StackPath and are solely used for users to organize their DNS zones."
          }
        },
        "title": ""
      },
      "zoneUpdateZoneRecordResponse": {
        "type": "object",
        "properties": {
          "record": {
            "$ref": "#/components/schemas/zoneZoneRecord"
          }
        },
        "description": "A response from a request to replace a DNS zone resource record"
      },
      "zoneUpdateZoneResponse": {
        "type": "object",
        "properties": {
          "zone": {
            "$ref": "#/components/schemas/zoneZone"
          }
        },
        "description": "A response from a request to replace a DNS zone"
      },
      "zoneZone": {
        "type": "object",
        "properties": {
          "stackId": {
            "type": "string",
            "description": "The ID of the stack that a zone belongs to"
          },
          "accountId": {
            "type": "string",
            "description": "The ID of the StackPath account that owns a zone"
          },
          "id": {
            "type": "string",
            "description": "A zone's unique ID"
          },
          "domain": {
            "type": "string",
            "description": "A zone's name"
          },
          "version": {
            "type": "string",
            "description": "A zone's version number\n\nVersion numbers are incremented automatically when a zone is updated"
          },
          "labels": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A key/value pair of user-defined labels for a zone\n\nZone labels are not processed by StackPath and are solely used for users to organize their DNS zones."
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "The date a zone was created"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "The date a zone was last updated"
          },
          "nameservers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The hostnames of the StackPath resolvers that host a zone\n\nEvery zone has multiple name servers assigned by StackPath upon creation for redundancy purposes."
          },
          "verified": {
            "type": "string",
            "format": "date-time",
            "description": "The date a zone's nameservers were last audited by StackPath"
          },
          "status": {
            "$ref": "#/components/schemas/zoneZoneStatus"
          },
          "disabled": {
            "type": "boolean",
            "format": "boolean",
            "description": "Whether or not a zone has been disabled by the user"
          }
        },
        "description": "A DNS zone\n\nA zone represents an individual domain in StackPath's DNS infrastructure."
      },
      "zoneZoneRecord": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A zone record's unique ID"
          },
          "zoneId": {
            "type": "string",
            "description": "The ID of the zone that a zone record belongs to"
          },
          "name": {
            "type": "string",
            "description": "A zone record's name\n\nUse the value \"@\" to denote current root domain name."
          },
          "type": {
            "type": "string",
            "description": "A zone record's type\n\nZone record types describe the zone record's behavior. For instance, a zone record's type can say that the record is a name to IP address value, a name alias, or which mail exchanger is responsible for the domain. See https://support.stackpath.com/hc/en-us/articles/360001085563-What-DNS-record-types-does-StackPath-support for more information."
          },
          "class": {
            "type": "string",
            "description": "A zone record's class code\n\nThis is typically \"IN\" for Internet related resource records."
          },
          "ttl": {
            "type": "integer",
            "format": "int32",
            "description": "A zone record's time to live\n\nA record's TTL is the number of seconds that the record should be cached by DNS resolvers. Use lower TTL values if you expect zone records to change often. Use higher TTL values for records that won't change to prevent extra DNS lookups by clients."
          },
          "data": {
            "type": "string",
            "description": "A zone record's value\n\nExpected data formats can vary depending on the zone record's type."
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "description": "A zone record's priority\n\nA resource record is replicated in StackPath's DNS infrastructure the number of times of the record's weight, giving it a more likely response to queries if a zone has records with the same name and type."
          },
          "labels": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A key/value pair of user-defined labels for a zone record\n\nZone record labels are not processed by StackPath and are solely used for users to organize their DNS zones."
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "The date a zone record was created"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "The date a zone record was last updated"
          }
        },
        "description": "A DNS zone's resource record\n\nA zone record describes an individual piece of DNS functionality in a DNS zone."
      },
      "zoneZoneStatus": {
        "type": "string",
        "enum": [
          "ACTIVE",
          "SUSPENDED",
          "BILLING_SUSPENDED",
          "INACTIVE"
        ],
        "default": "ACTIVE"
      }
    }
  }
}
